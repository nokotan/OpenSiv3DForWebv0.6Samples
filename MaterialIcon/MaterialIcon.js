
var Module = (function() {
  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;
  
  return (
function(Module) {
  Module = Module || {};

var Module=typeof Module!=="undefined"?Module:{};var readyPromiseResolve,readyPromiseReject;Module["ready"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});if(!Module.expectedDataFileDownloads){Module.expectedDataFileDownloads=0}Module.expectedDataFileDownloads++;(function(){var loadPackage=function(metadata){var PACKAGE_PATH;if(typeof window==="object"){PACKAGE_PATH=window["encodeURIComponent"](window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/")}else if(typeof location!=="undefined"){PACKAGE_PATH=encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/")}else{throw"using preloaded data can only be done on a web page or in a web worker"}var PACKAGE_NAME="MaterialIcon.data";var REMOTE_PACKAGE_BASE="MaterialIcon.data";if(typeof Module["locateFilePackage"]==="function"&&!Module["locateFile"]){Module["locateFile"]=Module["locateFilePackage"];err("warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)")}var REMOTE_PACKAGE_NAME=Module["locateFile"]?Module["locateFile"](REMOTE_PACKAGE_BASE,""):REMOTE_PACKAGE_BASE;var REMOTE_PACKAGE_SIZE=metadata["remote_package_size"];var PACKAGE_UUID=metadata["package_uuid"];function fetchRemotePackage(packageName,packageSize,callback,errback){var xhr=new XMLHttpRequest;xhr.open("GET",packageName,true);xhr.responseType="arraybuffer";xhr.onprogress=function(event){var url=packageName;var size=packageSize;if(event.total)size=event.total;if(event.loaded){if(!xhr.addedTotal){xhr.addedTotal=true;if(!Module.dataFileDownloads)Module.dataFileDownloads={};Module.dataFileDownloads[url]={loaded:event.loaded,total:size}}else{Module.dataFileDownloads[url].loaded=event.loaded}var total=0;var loaded=0;var num=0;for(var download in Module.dataFileDownloads){var data=Module.dataFileDownloads[download];total+=data.total;loaded+=data.loaded;num++}total=Math.ceil(total*Module.expectedDataFileDownloads/num);if(Module["setStatus"])Module["setStatus"]("Downloading data... ("+loaded+"/"+total+")")}else if(!Module.dataFileDownloads){if(Module["setStatus"])Module["setStatus"]("Downloading data...")}};xhr.onerror=function(event){throw new Error("NetworkError for: "+packageName)};xhr.onload=function(event){if(xhr.status==200||xhr.status==304||xhr.status==206||xhr.status==0&&xhr.response){var packageData=xhr.response;callback(packageData)}else{throw new Error(xhr.statusText+" : "+xhr.responseURL)}};xhr.send(null)}function handleError(error){console.error("package error:",error)}var fetchedCallback=null;var fetched=Module["getPreloadedPackage"]?Module["getPreloadedPackage"](REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE):null;if(!fetched)fetchRemotePackage(REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE,function(data){if(fetchedCallback){fetchedCallback(data);fetchedCallback=null}else{fetched=data}},handleError);function runWithFS(){function assert(check,msg){if(!check)throw msg+(new Error).stack}Module["FS_createPath"]("/","resources",true,true);Module["FS_createPath"]("/resources","engine",true,true);Module["FS_createPath"]("/resources/engine","font",true,true);Module["FS_createPath"]("/resources/engine/font","noto-emoji",true,true);Module["FS_createPath"]("/resources/engine/font","materialdesignicons",true,true);Module["FS_createPath"]("/resources/engine/font","fontawesome",true,true);Module["FS_createPath"]("/resources/engine/font","noto-cjk",true,true);Module["FS_createPath"]("/resources/engine/font","mplus",true,true);function processPackageData(arrayBuffer){assert(arrayBuffer,"Loading data file failed.");assert(arrayBuffer instanceof ArrayBuffer,"bad input to processPackageData");var byteArray=new Uint8Array(arrayBuffer);var compressedData={"data":null,"cachedOffset":32415826,"cachedIndexes":[-1,-1],"cachedChunks":[null,null],"offsets":[0,1447,2996,5024,7072,9120,11168,13216,15264,17312,19360,21408,23456,25504,27552,29600,31648,33696,35744,37792,39840,41888,43936,45984,48032,50080,52128,54176,56224,58272,60320,62368,64416,66464,68512,70560,72608,74656,76704,78752,80800,82848,84896,86944,88992,91040,93088,95136,97184,99232,101280,103328,105376,107424,109472,111520,113568,115616,117664,119712,121760,123808,125856,127904,129952,132e3,134048,136096,138144,140192,142240,144288,146336,148384,150432,152480,154528,156576,158624,160672,162720,164768,166816,168864,170912,172960,175008,177056,179104,181152,183200,185248,187296,189348,191396,193444,195492,197540,199588,201636,203684,205732,207780,209828,211876,213924,215972,218020,220068,222116,224164,226212,228260,230308,232356,234404,236452,238500,240548,242596,244644,246692,248740,250788,252836,254884,256932,258980,261028,263076,265124,267172,269220,271268,273316,275364,277412,279460,281412,283460,285508,287556,289604,291652,293700,295748,297796,299844,301892,303940,305988,308036,310084,312132,314180,316228,318276,320324,322372,324420,326468,328516,330564,332612,334660,336708,338756,340804,342852,344900,346948,348996,351044,353092,355140,357188,359236,361284,363332,365380,367428,369476,371524,373572,375620,377668,379716,381764,383812,385860,387908,389956,392004,394052,396100,398148,400196,402244,404292,406340,408388,410436,412484,414532,416580,418628,420676,422724,424772,426820,428868,430916,432964,435012,437060,439108,441156,443204,445252,447300,449348,451396,453444,455492,457540,459588,461636,463684,465732,467780,469828,471876,473924,475972,478020,480068,482116,484164,486212,488260,490308,492356,494404,496452,498500,500548,502596,504644,506692,508740,510788,512836,514884,516932,518980,521028,523076,525124,527172,529220,531268,533316,535364,537412,539460,541508,543556,545604,547652,549700,551748,553796,555844,557892,559940,561988,564036,566084,568132,570180,572228,574276,576324,578372,580420,582468,584516,586564,588612,590660,592708,594756,596804,598852,600900,602948,604996,607044,609092,611140,613188,615236,617284,619332,621380,623428,625476,627524,629572,631620,633668,635716,637764,639812,641860,643908,645956,648004,650052,652100,654148,656196,658244,660292,662340,664388,666436,668484,670532,672580,674628,676676,678724,680772,682820,684868,686916,688964,691012,693060,695108,697156,699204,701252,703300,705348,707396,709444,711492,713540,715588,717636,719684,721732,723780,725828,727876,729924,731972,734020,736068,738116,740164,742212,744260,746308,748356,750404,752452,754500,756548,758596,760644,762692,764740,766788,768836,770884,772932,774980,777028,779076,781124,783172,785220,787268,789316,791364,793412,795460,797508,799556,801604,803652,805700,807748,809796,811844,813892,815940,817988,820036,822084,824132,826180,828228,830276,832324,834372,836420,838468,840516,842564,844612,846660,848708,850756,852804,854852,856900,858948,860996,863044,865092,867140,869188,871236,873284,875332,877380,879428,881476,883524,885572,887620,889668,891716,893764,895812,897860,899908,901956,904004,906052,908100,910148,912196,914244,916292,918340,920388,922436,924484,926532,928580,930628,932676,934724,936772,938820,940868,942916,944964,947012,949060,951108,953156,955204,957252,959300,961348,963396,965444,967492,969540,971588,973636,975684,977732,979780,981828,983876,985924,987972,990020,992068,994116,996164,998212,1000260,1002308,1004356,1006404,1008452,1010500,1012548,1014596,1016644,1018692,1020740,1022788,1024836,1026884,1028932,1030980,1033028,1035076,1037124,1039172,1041220,1043268,1045316,1047364,1049412,1051460,1053508,1055556,1057604,1059652,1061700,1063748,1065796,1067844,1069892,1071940,1073988,1076036,1078084,1080132,1082180,1084228,1086276,1088324,1090372,1092420,1094468,1096516,1098564,1100612,1102660,1104708,1106756,1108804,1110852,1112900,1114948,1116996,1119044,1121092,1123140,1125188,1127236,1129284,1131332,1133380,1135428,1137476,1139524,1141572,1143620,1145668,1147716,1149764,1151812,1153860,1155908,1157956,1160004,1162052,1164100,1166148,1168196,1170244,1172292,1174340,1176388,1178436,1180484,1182532,1184580,1186628,1188676,1190724,1192772,1194820,1196868,1198916,1200964,1203012,1205060,1207108,1209156,1211204,1213252,1215300,1217348,1219396,1221444,1223492,1225540,1227588,1229636,1231684,1233732,1235780,1237828,1239876,1241924,1243972,1246020,1248068,1250116,1252164,1254212,1256260,1258308,1260356,1262404,1264452,1266500,1268548,1270596,1272644,1274692,1276740,1278788,1280836,1282884,1284932,1286980,1289028,1291076,1293124,1295172,1297220,1299268,1301316,1303364,1305412,1307460,1309508,1311556,1313604,1315652,1317700,1319748,1321796,1323844,1325892,1327940,1329988,1332036,1334084,1336132,1338180,1340228,1342276,1344324,1346372,1348420,1350468,1352516,1354564,1356612,1358660,1360708,1362756,1364804,1366852,1368900,1370948,1372996,1375044,1377092,1379140,1381188,1383236,1385284,1387332,1389380,1391428,1393476,1395524,1397572,1399620,1401668,1403716,1405764,1407812,1409860,1411908,1413956,1416004,1418052,1420100,1422148,1424196,1426244,1428292,1430340,1432388,1434436,1436484,1438532,1440580,1442628,1444676,1446724,1448772,1450820,1452868,1454916,1456964,1459012,1461060,1463108,1465156,1467204,1469252,1471300,1473348,1475396,1477444,1479492,1481540,1483588,1485636,1487684,1489732,1491780,1493828,1495876,1497924,1499972,1502020,1504068,1506116,1508164,1510212,1512260,1514308,1516356,1518404,1520452,1522500,1524548,1526596,1528644,1530692,1532740,1534788,1536836,1538884,1540932,1542980,1545028,1547076,1549124,1551172,1553220,1555268,1557316,1559364,1561412,1563460,1565508,1567556,1569604,1571652,1573700,1575748,1577796,1579844,1581892,1583940,1585988,1588036,1590084,1592132,1594180,1596228,1598276,1600324,1602372,1604420,1606468,1608516,1610564,1612612,1614660,1616708,1618756,1620804,1622852,1624900,1626948,1628996,1631044,1633092,1635140,1637188,1639236,1641284,1643332,1645380,1647428,1649476,1651524,1653572,1655620,1657668,1659716,1661764,1663812,1665860,1667908,1669956,1672004,1674052,1676100,1678148,1680196,1682244,1684292,1686340,1688388,1690436,1692484,1694532,1696580,1698628,1700676,1702724,1704772,1706820,1708868,1710916,1712964,1715012,1717060,1719108,1721156,1723204,1725252,1727300,1729348,1731396,1733444,1735492,1737540,1739588,1741636,1743684,1745732,1747780,1749828,1751876,1753924,1755972,1758020,1760068,1762116,1764164,1766212,1768260,1770308,1772356,1774404,1776452,1778500,1780548,1782596,1784644,1786692,1788740,1790788,1792836,1794884,1796932,1798980,1801028,1803076,1805124,1807172,1809220,1811268,1813316,1815364,1817412,1819460,1821508,1823556,1825604,1827652,1829700,1831748,1833796,1835844,1837892,1839940,1841988,1844036,1846084,1848132,1850180,1852228,1854276,1856324,1858372,1860420,1862468,1864516,1866564,1868612,1870660,1872708,1874756,1876804,1878852,1880900,1882948,1884996,1887044,1889092,1891140,1893188,1895236,1897284,1899332,1901380,1903428,1905476,1907524,1909572,1911620,1913668,1915716,1917764,1919812,1921860,1923908,1925956,1928004,1930052,1932100,1934148,1936196,1938244,1940292,1942340,1944388,1946436,1948484,1950532,1952580,1954628,1956676,1958724,1960772,1962820,1964868,1966916,1968964,1971012,1973060,1975108,1977156,1979204,1981252,1983300,1985348,1987396,1989444,1991492,1993540,1995588,1997636,1999684,2001732,2003780,2005828,2007876,2009924,2011972,2014020,2016068,2018116,2020164,2022212,2024260,2026308,2028356,2030404,2032452,2034500,2036548,2038596,2040644,2042692,2044740,2046788,2048836,2050884,2052932,2054980,2057028,2059076,2061124,2063172,2065220,2067268,2069316,2071364,2073412,2075460,2077508,2079556,2081604,2083652,2085700,2087748,2089796,2091844,2093892,2095940,2097988,2100036,2102084,2104132,2106180,2108228,2110276,2112324,2114372,2116420,2118468,2120516,2122564,2124612,2126660,2128708,2130756,2132804,2134852,2136900,2138948,2140996,2143044,2145092,2147140,2149188,2151236,2153284,2155332,2157380,2159428,2161476,2163524,2165572,2167620,2169668,2171716,2173764,2175812,2177860,2179908,2181956,2184004,2186052,2188100,2190148,2192196,2194244,2196292,2198340,2200388,2202436,2204484,2206532,2208580,2210628,2212676,2214724,2216772,2218820,2220868,2222916,2224964,2227012,2229060,2231108,2233156,2235204,2237252,2239300,2241348,2243396,2245444,2247492,2249540,2251588,2253636,2255684,2257732,2259780,2261828,2263876,2265924,2267972,2270020,2272068,2274116,2276164,2278212,2280260,2282308,2284356,2286404,2288452,2290500,2292548,2294596,2296644,2298692,2300740,2302788,2304836,2306884,2308932,2310980,2313028,2315076,2317124,2319172,2321220,2323268,2325316,2327364,2329412,2331460,2333508,2335556,2337604,2339652,2341700,2343748,2345796,2347844,2349892,2351940,2353988,2356036,2358084,2360132,2362180,2364228,2366276,2368324,2370372,2372420,2374468,2376516,2378564,2380612,2382660,2384708,2386756,2388804,2390852,2392900,2394948,2396996,2399044,2401092,2403140,2405188,2407236,2409284,2411332,2413380,2415428,2417476,2419524,2421572,2423620,2425668,2427716,2429764,2431812,2433860,2435908,2437956,2440004,2442052,2444100,2446148,2448196,2450244,2452292,2454340,2456388,2458436,2460484,2462532,2464580,2466628,2468676,2470724,2472772,2474820,2476868,2478916,2480964,2483012,2485060,2487108,2489156,2491204,2493252,2495300,2497348,2499396,2501444,2503492,2505540,2507588,2509636,2511684,2513732,2515780,2517828,2519876,2521924,2523972,2526020,2528068,2530116,2532164,2534212,2536260,2538308,2540356,2542404,2544452,2546500,2548548,2550596,2552644,2554692,2556740,2558788,2560836,2562884,2564932,2566980,2569028,2571076,2573124,2575172,2577220,2579268,2581316,2583364,2585412,2587460,2589508,2591556,2593604,2595652,2597700,2599748,2601796,2603844,2605892,2607940,2609988,2612036,2614084,2616132,2618180,2620228,2622276,2624324,2626372,2628420,2630468,2632516,2634564,2636612,2638660,2640708,2642756,2644804,2646852,2648900,2650948,2652996,2655044,2657092,2659140,2661188,2663236,2665284,2667332,2669380,2671428,2673476,2675524,2677572,2679620,2681668,2683716,2685764,2687812,2689860,2691908,2693956,2696004,2698052,2700100,2702148,2704196,2706244,2708292,2710340,2712388,2714436,2716484,2718532,2720580,2722628,2724676,2726724,2728772,2730820,2732868,2734916,2736964,2739012,2741060,2743108,2745156,2747204,2749252,2751300,2753348,2755396,2757444,2759492,2761540,2763588,2765636,2767684,2769732,2771780,2773828,2775876,2777924,2779972,2782020,2784068,2786116,2788164,2790212,2792260,2794308,2796356,2798404,2800452,2802500,2804548,2806596,2808644,2810692,2812740,2814788,2816836,2818884,2820932,2822980,2825028,2827076,2829124,2831172,2833220,2835268,2837316,2839364,2841412,2843460,2845508,2847556,2849604,2851652,2853700,2855748,2857796,2859844,2861892,2863940,2865988,2868036,2870084,2872132,2874180,2876228,2878276,2880324,2882372,2884420,2886468,2888516,2890564,2892612,2894660,2896708,2898756,2900804,2902852,2904900,2906948,2908996,2911044,2913092,2915140,2917188,2919236,2921284,2923332,2925380,2927428,2929476,2931524,2933572,2935620,2937668,2939716,2941764,2943812,2945860,2947908,2949956,2952004,2954052,2956100,2958148,2960196,2962244,2964292,2966340,2968388,2970436,2972484,2974532,2976580,2978628,2980676,2982724,2984772,2986820,2988868,2990916,2992964,2995012,2997060,2999108,3001156,3003204,3005252,3007300,3009348,3011396,3013444,3015492,3017540,3019588,3021636,3023684,3025732,3027780,3029828,3031876,3033924,3035972,3038020,3040068,3042116,3044164,3046212,3048260,3050308,3052356,3054404,3056452,3058500,3060548,3062596,3064644,3066692,3068740,3070788,3072836,3074884,3076932,3078980,3081028,3083076,3085124,3087172,3089220,3091268,3093316,3095364,3097412,3099460,3101508,3103556,3105604,3107652,3109700,3111748,3113796,3115844,3117892,3119940,3121988,3124036,3126084,3128132,3130180,3132228,3134276,3136324,3138372,3140420,3142468,3144516,3146564,3148612,3150660,3152708,3154756,3156804,3158852,3160900,3162948,3164996,3167044,3169092,3171140,3173188,3175236,3177284,3179332,3181380,3183428,3185476,3187524,3189572,3191620,3193668,3195716,3197764,3199812,3201860,3203908,3205956,3208004,3210052,3212100,3214148,3216196,3218244,3220292,3222340,3224388,3226436,3228484,3230532,3232580,3234628,3236676,3238724,3240772,3242820,3244868,3246916,3248964,3251012,3253060,3255108,3257156,3259204,3261252,3263300,3265348,3267396,3269444,3271492,3273540,3275588,3277636,3279684,3281732,3283780,3285828,3287876,3289924,3291972,3294020,3296068,3298116,3300164,3302212,3304260,3306308,3308356,3310404,3312452,3314500,3316548,3318596,3320644,3322692,3324740,3326788,3328836,3330884,3332932,3334980,3337028,3339076,3341124,3343172,3345220,3347268,3349316,3351364,3353412,3355460,3357508,3359556,3361604,3363652,3365700,3367748,3369796,3371844,3373892,3375940,3377988,3380036,3382084,3384132,3386180,3388228,3390276,3392324,3394372,3396420,3398468,3400516,3402564,3404612,3406660,3408708,3410756,3412804,3414852,3416900,3418948,3420996,3423044,3425092,3427140,3429188,3431236,3433284,3435332,3437380,3439428,3441476,3443524,3445572,3447620,3449668,3451716,3453764,3455812,3457860,3459908,3461956,3464004,3466052,3468100,3470148,3472196,3474244,3476292,3478340,3480388,3482436,3484484,3486532,3488580,3490628,3492676,3494724,3496772,3498820,3500868,3502916,3504964,3507012,3509060,3511108,3513156,3515204,3517252,3519300,3521348,3523396,3525444,3527492,3529540,3531588,3533636,3535684,3537732,3539780,3541828,3543876,3545924,3547972,3550020,3552068,3554116,3556164,3558212,3560260,3562308,3564356,3566404,3568452,3570500,3572548,3574596,3576644,3578692,3580740,3582788,3584836,3586884,3588932,3590980,3593028,3595076,3597124,3599172,3601220,3603268,3605316,3607364,3609412,3611460,3613508,3615556,3617604,3619652,3621700,3623748,3625796,3627844,3629892,3631940,3633988,3636036,3638084,3640132,3642180,3644228,3646276,3648324,3650372,3652420,3654468,3656516,3658564,3660612,3662660,3664708,3666756,3668804,3670852,3672900,3674948,3676996,3679044,3681092,3683140,3685188,3687236,3689284,3691332,3693380,3695428,3697476,3699524,3701572,3703620,3705668,3707716,3709764,3711812,3713860,3715908,3717956,3720004,3722052,3724100,3726148,3728196,3730244,3732292,3734340,3736388,3738436,3740484,3742532,3744580,3746628,3748676,3750724,3752772,3754820,3756868,3758916,3760964,3763012,3765060,3767108,3769156,3771204,3773252,3775300,3777348,3779396,3781444,3783492,3785540,3787588,3789636,3791684,3793732,3795780,3797828,3799876,3801924,3803972,3806020,3808068,3810116,3812164,3814212,3816260,3818308,3820356,3822404,3824452,3826500,3828548,3830596,3832644,3834692,3836740,3838788,3840836,3842884,3844932,3846980,3849028,3851076,3853124,3855172,3857220,3859268,3861316,3863364,3865412,3867460,3869508,3871556,3873604,3875652,3877700,3879748,3881796,3883844,3885892,3887940,3889988,3892036,3894084,3896132,3898180,3900228,3902276,3904324,3906372,3908420,3910468,3912516,3914564,3916612,3918660,3920708,3922756,3924804,3926852,3928900,3930948,3932996,3935044,3937092,3939140,3941188,3943236,3945284,3947332,3949380,3951428,3953476,3955524,3957572,3959620,3961668,3963716,3965764,3967812,3969860,3971908,3973956,3976004,3978052,3980100,3982148,3984196,3986244,3988292,3990340,3992388,3994436,3996484,3998532,4000580,4002628,4004676,4006724,4008772,4010820,4012868,4014916,4016964,4019012,4021060,4023108,4025156,4027204,4029252,4031300,4033348,4035396,4037444,4039492,4041540,4043588,4045636,4047684,4049732,4051780,4053828,4055876,4057924,4059972,4062020,4064068,4066116,4068164,4070212,4072260,4074308,4076356,4078404,4080452,4082500,4084548,4086596,4088644,4090692,4092740,4094788,4096836,4098884,4100932,4102980,4105028,4107076,4109124,4111172,4113220,4115268,4117316,4119364,4121412,4123460,4125508,4127556,4129604,4131652,4133700,4135748,4137796,4139844,4141892,4143940,4145988,4148036,4150084,4152132,4154180,4156228,4158276,4160324,4162372,4164420,4166468,4168516,4170564,4172612,4174660,4176708,4178756,4180804,4182852,4184900,4186948,4188996,4191044,4193092,4195140,4197188,4199236,4201284,4203332,4205380,4207428,4209476,4211524,4213572,4215620,4217668,4219716,4221764,4223812,4225860,4227908,4229956,4232004,4234052,4236100,4238148,4240196,4242244,4244292,4246340,4248388,4250436,4252484,4254532,4256580,4258628,4260676,4262724,4264772,4266820,4268868,4270916,4272964,4275012,4277060,4279108,4281156,4283204,4285252,4287300,4289348,4291396,4293444,4295492,4297540,4299588,4301636,4303684,4305732,4307780,4309828,4311876,4313924,4315972,4318020,4320068,4322116,4324164,4326212,4328260,4330308,4332356,4334404,4336452,4338500,4340548,4342596,4344644,4346692,4348740,4350788,4352836,4354884,4356932,4358980,4361028,4363076,4365124,4367172,4369220,4371268,4373316,4375364,4377412,4379460,4381508,4383556,4385604,4387652,4389700,4391748,4393796,4395844,4397892,4399940,4401988,4404036,4406084,4408132,4410180,4412228,4414276,4416324,4418372,4420420,4422468,4424516,4426564,4428612,4430660,4432708,4434756,4436804,4438852,4440900,4442948,4444996,4447044,4449092,4451140,4453188,4455236,4457284,4459332,4461380,4463428,4465476,4467524,4469572,4471620,4473668,4475716,4477764,4479812,4481860,4483908,4485956,4488004,4490052,4492100,4494148,4496196,4498244,4500292,4502340,4504388,4506436,4508484,4510532,4512580,4514628,4516676,4518724,4520772,4522820,4524868,4526916,4528964,4531012,4533060,4535108,4537156,4539204,4541252,4543300,4545348,4547396,4549444,4551492,4553540,4555588,4557636,4559684,4561732,4563780,4565828,4567876,4569924,4571972,4574020,4576068,4578116,4580164,4582212,4584260,4586308,4588356,4590404,4592452,4594500,4596548,4598596,4600644,4602692,4604740,4606788,4608836,4610884,4612932,4614980,4617028,4619076,4621124,4623172,4625220,4627268,4629316,4631364,4633412,4635460,4637508,4639556,4641604,4643652,4645700,4647748,4649796,4651844,4653892,4655940,4657988,4660036,4662084,4664132,4666180,4668228,4670276,4672324,4674372,4676420,4678468,4680516,4682564,4684612,4686660,4688708,4690756,4692804,4694852,4696900,4698948,4700996,4703044,4705092,4707140,4709188,4711236,4713284,4715332,4717380,4719428,4721476,4723524,4725572,4727620,4729668,4731716,4733764,4735812,4737860,4739908,4741956,4744004,4746052,4748100,4750148,4752196,4754244,4756292,4758340,4760388,4762436,4764484,4766532,4768580,4770628,4772676,4774724,4776772,4778820,4780868,4782916,4784964,4787012,4789060,4791108,4793156,4795204,4797252,4799300,4801348,4803396,4805444,4807492,4809540,4811588,4813636,4815684,4817732,4819780,4821828,4823876,4825924,4827972,4830020,4832068,4834116,4836164,4838212,4840260,4842308,4844356,4846404,4848452,4850500,4852548,4854596,4856644,4858692,4860740,4862788,4864836,4866884,4868932,4870980,4873028,4875076,4877124,4879172,4881220,4883268,4885316,4887364,4889412,4891460,4893508,4895556,4897604,4899652,4901700,4903748,4905796,4907844,4909892,4911940,4913988,4916036,4918084,4920132,4922180,4924228,4926276,4928324,4930372,4932420,4934468,4936516,4938564,4940612,4942660,4944708,4946756,4948804,4950852,4952900,4954948,4956996,4959044,4961092,4963140,4965188,4967236,4969284,4971332,4973380,4975428,4977476,4979524,4981572,4983620,4985668,4987716,4989764,4991812,4993860,4995908,4997956,5000004,5002052,5004100,5006148,5008196,5010244,5012292,5014340,5016388,5018436,5020484,5022532,5024580,5026628,5028676,5030724,5032772,5034820,5036868,5038916,5040964,5043012,5045060,5047108,5049156,5051204,5053252,5055300,5057348,5059396,5061444,5063492,5065540,5067588,5069636,5071684,5073732,5075780,5077828,5079876,5081924,5083972,5086020,5088068,5090116,5092164,5094212,5096260,5098308,5100356,5102404,5104452,5106500,5108548,5110596,5112644,5114692,5116740,5118788,5120836,5122884,5124932,5126980,5129028,5131076,5133124,5135172,5137220,5139268,5141316,5143364,5145412,5147460,5149508,5151556,5153604,5155652,5157700,5159748,5161796,5163844,5165892,5167940,5169988,5172036,5174084,5176132,5178180,5180228,5182276,5184324,5186372,5188420,5190468,5192516,5194564,5196612,5198660,5200708,5202756,5204804,5206852,5208900,5210948,5212996,5215044,5217092,5219140,5221188,5223236,5225284,5227332,5229380,5231428,5233476,5235524,5237572,5239620,5241668,5243716,5245764,5247812,5249860,5251908,5253956,5256004,5258052,5260100,5262148,5264196,5266244,5268292,5270340,5272388,5274436,5276484,5278532,5280580,5282628,5284676,5286724,5288772,5290820,5292868,5294916,5296964,5299012,5301060,5303108,5305156,5307204,5309252,5311300,5313348,5315396,5317444,5319492,5321540,5323588,5325636,5327684,5329732,5331780,5333828,5335876,5337924,5339972,5342020,5344068,5346116,5348164,5350212,5352260,5354308,5356356,5358404,5360452,5362500,5364548,5366596,5368644,5370692,5372740,5374788,5376836,5378884,5380932,5382980,5385028,5387076,5389124,5391172,5393220,5395268,5397316,5399364,5401412,5403460,5405508,5407556,5409604,5411652,5413700,5415748,5417796,5419844,5421892,5423940,5425988,5428036,5430084,5432132,5434180,5436228,5438276,5440324,5442372,5444420,5446468,5448516,5450564,5452612,5454660,5456708,5458756,5460804,5462852,5464900,5466948,5468996,5471044,5473092,5475140,5477188,5479236,5481284,5483332,5485380,5487428,5489476,5491524,5493572,5495620,5497668,5499716,5501764,5503812,5505860,5507908,5509956,5512004,5514052,5516100,5518148,5520196,5522244,5524292,5526340,5528388,5530436,5532484,5534532,5536580,5538628,5540676,5542724,5544772,5546820,5548868,5550916,5552964,5555012,5557060,5559108,5561156,5563204,5565252,5567300,5569348,5571396,5573444,5575492,5577540,5579588,5581636,5583684,5585732,5587780,5589828,5591876,5593924,5595972,5598020,5600068,5602116,5604164,5606212,5608260,5610308,5612356,5614404,5616452,5618500,5620548,5622596,5624644,5626692,5628740,5630788,5632836,5634884,5636932,5638980,5641028,5643076,5645124,5647172,5649220,5651268,5653316,5655364,5657412,5659460,5661508,5663556,5665604,5667652,5669700,5671748,5673796,5675844,5677892,5679940,5681988,5684036,5686084,5688132,5690180,5692228,5694276,5696324,5698372,5700420,5702468,5704516,5706564,5708612,5710660,5712708,5714756,5716804,5718852,5720900,5722948,5724996,5727044,5729092,5731140,5733188,5735236,5737284,5739332,5741380,5743428,5745476,5747524,5749572,5751620,5753668,5755716,5757764,5759812,5761860,5763908,5765956,5768004,5770052,5772100,5774148,5776196,5778244,5780292,5782340,5784388,5786436,5788484,5790532,5792580,5794628,5796676,5798724,5800772,5802820,5804868,5806916,5808964,5811012,5813060,5815108,5817156,5819204,5821252,5823300,5825348,5827396,5829444,5831492,5833540,5835588,5837636,5839684,5841732,5843780,5845828,5847876,5849924,5851972,5854020,5856068,5858116,5860164,5862212,5864260,5866308,5868356,5870404,5872452,5874500,5876548,5878596,5880644,5882692,5884740,5886788,5888836,5890884,5892932,5894980,5897028,5899076,5901124,5903172,5905220,5907268,5909316,5911364,5913412,5915460,5917508,5919556,5921604,5923652,5925700,5927748,5929796,5931844,5933892,5935940,5937988,5940036,5942084,5944132,5946180,5948228,5950276,5952324,5954372,5956420,5958468,5960516,5962564,5964612,5966660,5968708,5970756,5972804,5974852,5976900,5978948,5980996,5983044,5985092,5987140,5989188,5991236,5993284,5995332,5997380,5999428,6001476,6003524,6005572,6007620,6009668,6011716,6013764,6015812,6017860,6019908,6021956,6024004,6026052,6028100,6030148,6032196,6034244,6036292,6038340,6040388,6042436,6044484,6046532,6048580,6050628,6052676,6054724,6056772,6058820,6060868,6062916,6064964,6067012,6069060,6071108,6073156,6075204,6077252,6079300,6081348,6083396,6085444,6087492,6089540,6091588,6093636,6095684,6097732,6099780,6101828,6103876,6105924,6107972,6110020,6112068,6114116,6116164,6118212,6120260,6122308,6124356,6126404,6128452,6130500,6132548,6134596,6136644,6138692,6140740,6142788,6144836,6146884,6148932,6150980,6153028,6155076,6157124,6159172,6161220,6163268,6165316,6167364,6169412,6171460,6173508,6175556,6177604,6179652,6181700,6183748,6185796,6187844,6189892,6191940,6193988,6196036,6198084,6200132,6202180,6204228,6206276,6208324,6210372,6212420,6214468,6216516,6218564,6220612,6222660,6224708,6226756,6228804,6230852,6232900,6234948,6236996,6239044,6241092,6243140,6245188,6247236,6249284,6251332,6253380,6255428,6257476,6259524,6261572,6263620,6265668,6267716,6269764,6271812,6273860,6275908,6277956,6280004,6282052,6284100,6286148,6288196,6290244,6292292,6294340,6296388,6298436,6300484,6302532,6304580,6306628,6308676,6310724,6312772,6314820,6316868,6318916,6320964,6323012,6325060,6327108,6329156,6331204,6333252,6335300,6337348,6339396,6341444,6343492,6345540,6347588,6349636,6351684,6353732,6355780,6357828,6359876,6361924,6363972,6366020,6368068,6370116,6372164,6374212,6376260,6378308,6380356,6382404,6384452,6386500,6388548,6390596,6392644,6394692,6396740,6398788,6400836,6402884,6404932,6406980,6409028,6411076,6413124,6415172,6417220,6419268,6421316,6423364,6425412,6427460,6429508,6431556,6433604,6435652,6437700,6439748,6441796,6443844,6445892,6447940,6449988,6452036,6454084,6456132,6458180,6460228,6462276,6464324,6466372,6468420,6470468,6472516,6474564,6476612,6478660,6480708,6482756,6484804,6486852,6488900,6490948,6492996,6495044,6497092,6499140,6501188,6503236,6505284,6507332,6509380,6511428,6513476,6515524,6517572,6519620,6521668,6523716,6525764,6527812,6529860,6531908,6533956,6536004,6538052,6540100,6542148,6544196,6546244,6548292,6550340,6552388,6554436,6556484,6558532,6560580,6562628,6564676,6566724,6568772,6570820,6572868,6574916,6576964,6579012,6581060,6583108,6585156,6587204,6589252,6591300,6593348,6595396,6597444,6599492,6601540,6603588,6605636,6607684,6609732,6611780,6613828,6615876,6617924,6619972,6622020,6624068,6626116,6628164,6630212,6632260,6634308,6636356,6638404,6640452,6642500,6644548,6646596,6648644,6650692,6652740,6654788,6656836,6658884,6660932,6662980,6665028,6667076,6669124,6671172,6673220,6675268,6677316,6679364,6681412,6683460,6685508,6687556,6689604,6691652,6693700,6695748,6697796,6699844,6701892,6703940,6705988,6708036,6710084,6712132,6714180,6716228,6718276,6720324,6722372,6724420,6726468,6728516,6730564,6732612,6734660,6736708,6738756,6740804,6742852,6744900,6746948,6748996,6751044,6753092,6755140,6757188,6759236,6761284,6763332,6765380,6767428,6769476,6771524,6773572,6775620,6777668,6779716,6781764,6783812,6785860,6787908,6789956,6792004,6794052,6796100,6798148,6800196,6802244,6804292,6806340,6808388,6810436,6812484,6814532,6816580,6818628,6820676,6822724,6824772,6826820,6828868,6830916,6832964,6835012,6837060,6839108,6841156,6843204,6845252,6847300,6849348,6851396,6853444,6855492,6857540,6859588,6861636,6863684,6865732,6867780,6869828,6871876,6873924,6875972,6878020,6880068,6882116,6884164,6886212,6888260,6890308,6892356,6894404,6896452,6898500,6900548,6902596,6904644,6906692,6908740,6910788,6912836,6914884,6916932,6918980,6921028,6923076,6925124,6927172,6929220,6931268,6933316,6935364,6937412,6939460,6941508,6943556,6945604,6947652,6949700,6951748,6953796,6955844,6957892,6959940,6961988,6964036,6966084,6968132,6970180,6972228,6974276,6976324,6978372,6980420,6982468,6984516,6986564,6988612,6990660,6992708,6994756,6996804,6998852,7000900,7002948,7004996,7007044,7009092,7011140,7013188,7015236,7017284,7019332,7021380,7023428,7025476,7027524,7029572,7031620,7033668,7035716,7037764,7039812,7041860,7043908,7045956,7048004,7050052,7052100,7054148,7056196,7058244,7060292,7062340,7064388,7066436,7068484,7070532,7072580,7074628,7076676,7078724,7080772,7082820,7084868,7086916,7088964,7091012,7093060,7095108,7097156,7099204,7101252,7103300,7105348,7107396,7109444,7111492,7113540,7115588,7117636,7119684,7121732,7123780,7125828,7127876,7129924,7131972,7134020,7136068,7138116,7140164,7142212,7144260,7146308,7148356,7150404,7152452,7154500,7156548,7158596,7160644,7162692,7164740,7166788,7168836,7170884,7172932,7174980,7177028,7179076,7181124,7183172,7185220,7187268,7189316,7191364,7193412,7195460,7197508,7199556,7201604,7203652,7205700,7207748,7209796,7211844,7213892,7215940,7217988,7220036,7222084,7224132,7226180,7228228,7230276,7232324,7234372,7236420,7238468,7240516,7242564,7244612,7246660,7248708,7250756,7252804,7254852,7256900,7258948,7260996,7263044,7265092,7267140,7269188,7271236,7273284,7275332,7277380,7279428,7281476,7283524,7285572,7287620,7289668,7291716,7293764,7295812,7297860,7299908,7301956,7304004,7306052,7308100,7310148,7312196,7314244,7316292,7318340,7320388,7322436,7324484,7326532,7328580,7330628,7332676,7334724,7336772,7338820,7340868,7342916,7344964,7347012,7349060,7351108,7353156,7355204,7357252,7359300,7361348,7363396,7365444,7367492,7369540,7371588,7373636,7375684,7377732,7379780,7381828,7383876,7385924,7387972,7390020,7392068,7394116,7396164,7398212,7400260,7402308,7404356,7406404,7408452,7410500,7412548,7414596,7416644,7418692,7420740,7422788,7424836,7426884,7428932,7430980,7433028,7435076,7437124,7439172,7441220,7443268,7445316,7447364,7449412,7451460,7453508,7455556,7457604,7459652,7461700,7463748,7465796,7467844,7469892,7471940,7473988,7476036,7478084,7480132,7482180,7484228,7486276,7488324,7490372,7492420,7494468,7496516,7498564,7500612,7502660,7504708,7506756,7508804,7510852,7512900,7514948,7516996,7519044,7521092,7523140,7525188,7527236,7529284,7531332,7533380,7535428,7537476,7539524,7541572,7543620,7545668,7547716,7549764,7551812,7553860,7555908,7557956,7560004,7562052,7564100,7566148,7568196,7570244,7572292,7574340,7576388,7578436,7580484,7582532,7584580,7586628,7588676,7590724,7592772,7594820,7596868,7598916,7600964,7603012,7605060,7607108,7609156,7611204,7613252,7615300,7617348,7619396,7621444,7623492,7625540,7627588,7629636,7631684,7633732,7635780,7637828,7639876,7641924,7643972,7646020,7648068,7650116,7652164,7654212,7656260,7658308,7660356,7662404,7664452,7666500,7668548,7670596,7672644,7674692,7676740,7678788,7680836,7682884,7684932,7686980,7689028,7691076,7693124,7695172,7697220,7699268,7701316,7703364,7705412,7707460,7709508,7711556,7713604,7715652,7717700,7719748,7721796,7723844,7725892,7727940,7729988,7732036,7734084,7736132,7738180,7740228,7742276,7744324,7746372,7748420,7750468,7752516,7754564,7756612,7758660,7760708,7762756,7764804,7766852,7768900,7770948,7772996,7775044,7777092,7779140,7781188,7783236,7785284,7787332,7789380,7791428,7793476,7795524,7797572,7799620,7801668,7803716,7805764,7807812,7809860,7811908,7813956,7816004,7818052,7820100,7822148,7824196,7826244,7828292,7830340,7832388,7834436,7836484,7838532,7840580,7842628,7844676,7846724,7848772,7850820,7852868,7854916,7856964,7859012,7861060,7863108,7865156,7867204,7869252,7871300,7873348,7875396,7877444,7879492,7881540,7883588,7885636,7887684,7889732,7891780,7893828,7895876,7897924,7899972,7902020,7904068,7906116,7908164,7910212,7912260,7914308,7916356,7918404,7920452,7922500,7924548,7926596,7928644,7930692,7932740,7934788,7936836,7938884,7940932,7942980,7945028,7947076,7949124,7951172,7953220,7955268,7957316,7959364,7961412,7963460,7965508,7967556,7969604,7971652,7973700,7975748,7977796,7979844,7981892,7983940,7985988,7988036,7990084,7992132,7994180,7996228,7998276,8000324,8002372,8004420,8006468,8008516,8010564,8012612,8014660,8016708,8018756,8020804,8022852,8024900,8026948,8028996,8031044,8033092,8035140,8037188,8039236,8041284,8043332,8045380,8047428,8049476,8051524,8053572,8055620,8057668,8059716,8061764,8063812,8065860,8067908,8069956,8072004,8074052,8076100,8078148,8080196,8082244,8084292,8086340,8088388,8090436,8092484,8094532,8096580,8098628,8100676,8102724,8104772,8106820,8108868,8110916,8112964,8115012,8117060,8119108,8121156,8123204,8125252,8127300,8129348,8131396,8133444,8135492,8137540,8139588,8141636,8143684,8145732,8147780,8149828,8151876,8153924,8155972,8158020,8160068,8162116,8164164,8166212,8168260,8170308,8172356,8174404,8176452,8178500,8180548,8182596,8184644,8186692,8188740,8190788,8192836,8194884,8196932,8198980,8201028,8203076,8205124,8207172,8209220,8211268,8213316,8215364,8217412,8219460,8221508,8223556,8225604,8227652,8229700,8231748,8233796,8235844,8237892,8239940,8241988,8244036,8246084,8248132,8250180,8252228,8254276,8256324,8258372,8260420,8262468,8264516,8266564,8268612,8270660,8272708,8274756,8276804,8278852,8280900,8282948,8284996,8287044,8289092,8291140,8293188,8295236,8297284,8299332,8301380,8303428,8305476,8307524,8309572,8311620,8313668,8315716,8317764,8319812,8321860,8323908,8325956,8328004,8330052,8332100,8334148,8336196,8338244,8340292,8342340,8344388,8346436,8348484,8350532,8352580,8354628,8356676,8358724,8360772,8362820,8364868,8366916,8368964,8371012,8373060,8375108,8377156,8379204,8381252,8383300,8385348,8387396,8389444,8391492,8393540,8395588,8397636,8399684,8401732,8403780,8405828,8407876,8409924,8411972,8414020,8416068,8418116,8420164,8422212,8424260,8426308,8428356,8430404,8432452,8434500,8436548,8438596,8440644,8442692,8444740,8446788,8448836,8450884,8452932,8454980,8457028,8459076,8461124,8463172,8465220,8467268,8469316,8471364,8473412,8475460,8477508,8479556,8481604,8483652,8485700,8487748,8489796,8491844,8493892,8495940,8497988,8500036,8502084,8504132,8506180,8508228,8510276,8512324,8514372,8516420,8518468,8520516,8522564,8524612,8526660,8528708,8530756,8532804,8534852,8536900,8538948,8540996,8543044,8545092,8547140,8549188,8551236,8553284,8555332,8557380,8559428,8561476,8563524,8565572,8567620,8569668,8571716,8573764,8575812,8577860,8579908,8581956,8584004,8586052,8588100,8590148,8592196,8594244,8596292,8598340,8600388,8602436,8604484,8606532,8608580,8610628,8612676,8614724,8616772,8618820,8620868,8622916,8624964,8627012,8629060,8631108,8633156,8635204,8637252,8639300,8641348,8643396,8645444,8647492,8649540,8651588,8653636,8655684,8657732,8659780,8661828,8663876,8665924,8667972,8670020,8672068,8674116,8676164,8678212,8680260,8682308,8684356,8686404,8688452,8690500,8692548,8694596,8696644,8698692,8700740,8702788,8704836,8706884,8708932,8710980,8713028,8715076,8717124,8719172,8721220,8723268,8725316,8727364,8729412,8731460,8733508,8735556,8737604,8739652,8741700,8743748,8745796,8747844,8749892,8751940,8753988,8756036,8758084,8760132,8762180,8764228,8766276,8768324,8770372,8772420,8774468,8776516,8778564,8780612,8782660,8784708,8786756,8788804,8790852,8792900,8794948,8796996,8799044,8801092,8803140,8805188,8807236,8809284,8811332,8813380,8815428,8817476,8819524,8821572,8823620,8825668,8827716,8829764,8831812,8833860,8835908,8837956,8840004,8842052,8844100,8846148,8848196,8850244,8852292,8854340,8856388,8858436,8860484,8862532,8864580,8866628,8868676,8870724,8872772,8874820,8876868,8878916,8880964,8883012,8885060,8887108,8889156,8891204,8893252,8895300,8897348,8899396,8901444,8903492,8905540,8907588,8909636,8911684,8913732,8915780,8917828,8919876,8921924,8923972,8926020,8928068,8930116,8932164,8934212,8936260,8938308,8940356,8942404,8944452,8946500,8948548,8950596,8952644,8954692,8956740,8958788,8960836,8962884,8964932,8966980,8969028,8971076,8973124,8975172,8977220,8979268,8981316,8983364,8985412,8987460,8989508,8991556,8993604,8995652,8997700,8999748,9001796,9003844,9005892,9007940,9009988,9012036,9014084,9016132,9018180,9020228,9022276,9024324,9026372,9028420,9030468,9032516,9034564,9036612,9038660,9040708,9042756,9044804,9046852,9048900,9050948,9052996,9055044,9057092,9059140,9061188,9063236,9065284,9067332,9069380,9071428,9073476,9075524,9077572,9079620,9081668,9083716,9085764,9087812,9089860,9091908,9093956,9096004,9098052,9100100,9102157,9104205,9106253,9108251,9110241,9111593,9113362,9115145,9116863,9118911,9120959,9123007,9125055,9127103,9129151,9131199,9133247,9135295,9137343,9139391,9141439,9143487,9145535,9147583,9149631,9151679,9153727,9155775,9157823,9159871,9161919,9163967,9166015,9168063,9170111,9172159,9174207,9176255,9178303,9180351,9182399,9184447,9186495,9188543,9190591,9192639,9194687,9196735,9198783,9200831,9202879,9204927,9206975,9209023,9211071,9213119,9215167,9217215,9219263,9221311,9223359,9225407,9227455,9229503,9231551,9233599,9235647,9237695,9239743,9241791,9243839,9245887,9247935,9249983,9252031,9254079,9256127,9258175,9260223,9262271,9264319,9266367,9268415,9270463,9272511,9274559,9276607,9278655,9280703,9282751,9284799,9286847,9288895,9290943,9292991,9295039,9297087,9299135,9301183,9303231,9305279,9307327,9309375,9311423,9313471,9315519,9317567,9319615,9321663,9323711,9325759,9327807,9329855,9331903,9333951,9335999,9338047,9340095,9342143,9344191,9346239,9348287,9350335,9352383,9354431,9356479,9358527,9360575,9362623,9364671,9366719,9368767,9370815,9372863,9374911,9376959,9379007,9381055,9383103,9385151,9387199,9389247,9391295,9393343,9395391,9397439,9399487,9401535,9403583,9405631,9407679,9409727,9411775,9413823,9415871,9417919,9419967,9422015,9424063,9426111,9428159,9430207,9432255,9434303,9436351,9438399,9440447,9442495,9444543,9446591,9448639,9450687,9452735,9454783,9456831,9458879,9460927,9462975,9465023,9467071,9469119,9471167,9473215,9475263,9477311,9479359,9481407,9483455,9485503,9487551,9489599,9491647,9493695,9495743,9497791,9499839,9501887,9503935,9505983,9508037,9510085,9512133,9514181,9516229,9518277,9520325,9522373,9524421,9526469,9528123,9529568,9531064,9532578,9534626,9536674,9538722,9540770,9542818,9544866,9546914,9548962,9551010,9553058,9555106,9557154,9559202,9561250,9563298,9565346,9567394,9569442,9571490,9573538,9575586,9577634,9579682,9581730,9583778,9585826,9587874,9589922,9591970,9594018,9596066,9598114,9600162,9602210,9604258,9606306,9608354,9610402,9612450,9614498,9616546,9618594,9620642,9622690,9624738,9626786,9628834,9630882,9632930,9634978,9637026,9639074,9641122,9643170,9645218,9647266,9649314,9651362,9653410,9655458,9657506,9659554,9661602,9663650,9665698,9667746,9669794,9671842,9673890,9675938,9677986,9680034,9682082,9684130,9686178,9688226,9690274,9692322,9694370,9696418,9698466,9700514,9702562,9704610,9706658,9708706,9710754,9712802,9714850,9716898,9718946,9720994,9723042,9725090,9727138,9729186,9731234,9733282,9735330,9737378,9739426,9741474,9743522,9745570,9747618,9749666,9751714,9753762,9755810,9757858,9759906,9761954,9764002,9766050,9768098,9770146,9772194,9774242,9776290,9778338,9780386,9782434,9784482,9786530,9788587,9790635,9792683,9794731,9796779,9798827,9800875,9802923,9804971,9807019,9809067,9811115,9813163,9815211,9817259,9819307,9821355,9823403,9825451,9827499,9829547,9831595,9833643,9835691,9837739,9839787,9841835,9843889,9845937,9847985,9850033,9852081,9854129,9856177,9858225,9860273,9862321,9864369,9866417,9868465,9870513,9872561,9874609,9876657,9878705,9880753,9882801,9884849,9886897,9888945,9890993,9893041,9895089,9897137,9899185,9901233,9903281,9905329,9907377,9909425,9911473,9913521,9915569,9917617,9919665,9921713,9923761,9925809,9927857,9929905,9931953,9934001,9936049,9938097,9940145,9942193,9944241,9946289,9948337,9950385,9952433,9954481,9956529,9958577,9960625,9962673,9964721,9966769,9968817,9970865,9972913,9974961,9977009,9979057,9981105,9983153,9985201,9987249,9989297,9991345,9993393,9995441,9997489,9999537,10001585,10003633,10005681,10007729,10009777,10011825,10013873,10015921,10017969,10020017,10022065,10024113,10026161,10028209,10030257,10032305,10034353,10036401,10038449,10040497,10042545,10044593,10046641,10048689,10050737,10052785,10054833,10056881,10058929,10060977,10063025,10065073,10067121,10069169,10071217,10073265,10075313,10077361,10079409,10081457,10083505,10085553,10087601,10089649,10091697,10093745,10095793,10097841,10099889,10101937,10103985,10106033,10108081,10110129,10112177,10114225,10116273,10118321,10120369,10122417,10124465,10126513,10128561,10130609,10132657,10134705,10136753,10138801,10140849,10142897,10144945,10146993,10149041,10151089,10153137,10155185,10157233,10159281,10161329,10163377,10165425,10167473,10169521,10171569,10173617,10175665,10177713,10179761,10181809,10183857,10185905,10187953,10190001,10192049,10194097,10196145,10198193,10200241,10202289,10204337,10206385,10208433,10210481,10212529,10214577,10216625,10218673,10220721,10222769,10224817,10226865,10228913,10230961,10233017,10235065,10237113,10239161,10241209,10243257,10245305,10247353,10249401,10251449,10253497,10255545,10257593,10259641,10261689,10263737,10265785,10267833,10269881,10271929,10273977,10276025,10278073,10280121,10282169,10284217,10286265,10288313,10290361,10292409,10294457,10296505,10298553,10300601,10302649,10304697,10306745,10308793,10310841,10312889,10314937,10316985,10319033,10321081,10323129,10325177,10327225,10329273,10331321,10333369,10335417,10337465,10339513,10341561,10343609,10345657,10347705,10349753,10351801,10353849,10355897,10357945,10359993,10362041,10364089,10366137,10368185,10370233,10372281,10374329,10376377,10378425,10380473,10382521,10384569,10386617,10388665,10390713,10392761,10394809,10396857,10398905,10400953,10403001,10405049,10407097,10409145,10411193,10413241,10415289,10417337,10419385,10421433,10423481,10425529,10427577,10429625,10431673,10433721,10435769,10437817,10439865,10441913,10443961,10446009,10448057,10450105,10452153,10454201,10456249,10458297,10460345,10462393,10464441,10466489,10468537,10470585,10472633,10474681,10476729,10478777,10480825,10482873,10484921,10486969,10489017,10491065,10493113,10495161,10497209,10499257,10501305,10503353,10505401,10507449,10509497,10511545,10513593,10515641,10517689,10519737,10521785,10523833,10525881,10527929,10529977,10532025,10534073,10536121,10538169,10540217,10542265,10544313,10546361,10548409,10550457,10552505,10554553,10556601,10558649,10560697,10562745,10564793,10566841,10568889,10570937,10572985,10575033,10577081,10579129,10581177,10583225,10585273,10587321,10589369,10591417,10593465,10595513,10597561,10599609,10601657,10603705,10605753,10607801,10609849,10611897,10613945,10615993,10618041,10620089,10622137,10624185,10626233,10628281,10630329,10632377,10634425,10636473,10638521,10640569,10642617,10644665,10646713,10648761,10650809,10652857,10654905,10656953,10659001,10661049,10663097,10665145,10667193,10669241,10671289,10673337,10675385,10677433,10679481,10681529,10683577,10685625,10687673,10689721,10691769,10693817,10695865,10697913,10699961,10702009,10704057,10706105,10708153,10710201,10712249,10714297,10716345,10718393,10720441,10722489,10724537,10726585,10728633,10730681,10732729,10734777,10736825,10738873,10740921,10742969,10745017,10747065,10749113,10751161,10753209,10755257,10757305,10759353,10761401,10763449,10765497,10767545,10769593,10771641,10773689,10775737,10777785,10779833,10781881,10783929,10785977,10788025,10790073,10792121,10794169,10796217,10798265,10800313,10802361,10804409,10806457,10808505,10810553,10812601,10814649,10816697,10818745,10820793,10822841,10824889,10826937,10828985,10831033,10833081,10835129,10837177,10839225,10841273,10843321,10845369,10847417,10849465,10851513,10853561,10855609,10857657,10859705,10861753,10863801,10865849,10867897,10869945,10871993,10874041,10876089,10878137,10880185,10882233,10884281,10886329,10888377,10890425,10892473,10894521,10896569,10898617,10900665,10902713,10904761,10906809,10908857,10910905,10912953,10915001,10917049,10919097,10921145,10923193,10925241,10927289,10929337,10931385,10933433,10935481,10937529,10939577,10941625,10943673,10945721,10947769,10949817,10951865,10953913,10955961,10958009,10960057,10962105,10964153,10966201,10968249,10970297,10972345,10974393,10976441,10978489,10980537,10982585,10984633,10986681,10988729,10990777,10992825,10994873,10996921,10998969,11001017,11003065,11005113,11007161,11009209,11011257,11013305,11015353,11017401,11019449,11021497,11023545,11025593,11027641,11029689,11031737,11033785,11035833,11037881,11039929,11041977,11044025,11046073,11048121,11050169,11052217,11054265,11056313,11058361,11060409,11062457,11064505,11066553,11068601,11070649,11072697,11074745,11076793,11078841,11080889,11082937,11084985,11087033,11089081,11091129,11093177,11095225,11097273,11099321,11101369,11103417,11105465,11107513,11109561,11111609,11113657,11115705,11117753,11119801,11121849,11123897,11125945,11127993,11130041,11132089,11134137,11136185,11138233,11140281,11142329,11144377,11146425,11148473,11150521,11152569,11154617,11156665,11158713,11160761,11162809,11164857,11166905,11168953,11171001,11173049,11175097,11177145,11179193,11181241,11183289,11185337,11187385,11189433,11191481,11193529,11195577,11197625,11199673,11201721,11203769,11205817,11207865,11209913,11211961,11214009,11216057,11218105,11220153,11222201,11224249,11226297,11228345,11230393,11232441,11234489,11236537,11238585,11240633,11242681,11244729,11246777,11248825,11250873,11252921,11254969,11257017,11259065,11261113,11263161,11265209,11267257,11269305,11271353,11273401,11275449,11277497,11279545,11281593,11283641,11285689,11287737,11289785,11291833,11293881,11295929,11297977,11300025,11302073,11304121,11306169,11308217,11310265,11312313,11314361,11316409,11318457,11320505,11322553,11324601,11326649,11328697,11330745,11332793,11334841,11336889,11338937,11340985,11343033,11345081,11347129,11349177,11351225,11353273,11355321,11357369,11359417,11361465,11363513,11365561,11367609,11369657,11371705,11373753,11375801,11377849,11379897,11381945,11383993,11386041,11388089,11390137,11392185,11394233,11396281,11398329,11400377,11402425,11404473,11406521,11408569,11410617,11412665,11414713,11416761,11418809,11420857,11422905,11424953,11427001,11429049,11431097,11433145,11435193,11437241,11439289,11441337,11443385,11445433,11447481,11449529,11451577,11453625,11455673,11457721,11459769,11461817,11463865,11465913,11467961,11470009,11472057,11474105,11476153,11478201,11480249,11482297,11484345,11486393,11488441,11490489,11492537,11494585,11496633,11498681,11500729,11502777,11504825,11506873,11508921,11510969,11513017,11515065,11517113,11519161,11521209,11523257,11525305,11527353,11529401,11531449,11533497,11535545,11537593,11539641,11541689,11543737,11545785,11547833,11549881,11551929,11553977,11556025,11558073,11560121,11562169,11564217,11566265,11568313,11570361,11572409,11574457,11576505,11578553,11580601,11582649,11584697,11586745,11588793,11590841,11592889,11594937,11596985,11599033,11601081,11603129,11605177,11607225,11609273,11611321,11613369,11615417,11617465,11619513,11621561,11623609,11625657,11627705,11629753,11631801,11633849,11635897,11637945,11639993,11642041,11644089,11646137,11648185,11650233,11652281,11654329,11656377,11658425,11660473,11662521,11664569,11666617,11668665,11670713,11672761,11674809,11676857,11678905,11680953,11683001,11685049,11687097,11689145,11691193,11693241,11695289,11697337,11699385,11701433,11703481,11705529,11707577,11709625,11711673,11713721,11715769,11717817,11719865,11721913,11723961,11726009,11728057,11730105,11732153,11734201,11736249,11738297,11740345,11742393,11744441,11746489,11748537,11750585,11752633,11754681,11756729,11758777,11760825,11762873,11764921,11766969,11769017,11771065,11773113,11775161,11777209,11779257,11781305,11783353,11785401,11787449,11789497,11791545,11793593,11795641,11797689,11799737,11801785,11803833,11805881,11807929,11809977,11812025,11814073,11816121,11818169,11820217,11822265,11824313,11826361,11828409,11830457,11832505,11834553,11836601,11838649,11840697,11842745,11844793,11846841,11848889,11850937,11852985,11855033,11857081,11859129,11861177,11863225,11865273,11867321,11869369,11871417,11873465,11875513,11877561,11879609,11881657,11883705,11885753,11887801,11889849,11891897,11893945,11895993,11898041,11900089,11902137,11904185,11906233,11908281,11910329,11912377,11914425,11916473,11918521,11920569,11922617,11924665,11926713,11928761,11930809,11932857,11934905,11936953,11939001,11941049,11943097,11945145,11947193,11949241,11951289,11953337,11955385,11957433,11959481,11961529,11963577,11965625,11967673,11969721,11971769,11973817,11975865,11977913,11979961,11982009,11984057,11986105,11988153,11990201,11992249,11994297,11996345,11998393,12000441,12002489,12004537,12006585,12008633,12010681,12012729,12014777,12016825,12018873,12020921,12022969,12025017,12027065,12029113,12031161,12033209,12035257,12037305,12039353,12041401,12043449,12045497,12047545,12049593,12051641,12053689,12055737,12057785,12059833,12061881,12063929,12065977,12068025,12070073,12072121,12074169,12076217,12078265,12080313,12082361,12084409,12086457,12088505,12090553,12092601,12094649,12096697,12098745,12100793,12102841,12104889,12106937,12108985,12111033,12113081,12115129,12117177,12119225,12121273,12123321,12125369,12127417,12129465,12131513,12133561,12135609,12137657,12139705,12141753,12143801,12145849,12147897,12149945,12151993,12154041,12156089,12158137,12160185,12162233,12164281,12166329,12168377,12170425,12172473,12174521,12176569,12178617,12180665,12182713,12184761,12186809,12188857,12190905,12192953,12195001,12197049,12199097,12201145,12203193,12205241,12207289,12209337,12211385,12213433,12215481,12217529,12219577,12221625,12223673,12225721,12227769,12229817,12231865,12233913,12235961,12238009,12240057,12242105,12244153,12246201,12248249,12250297,12252345,12254393,12256441,12258489,12260537,12262585,12264633,12266681,12268729,12270777,12272825,12274873,12276921,12278969,12281017,12283065,12285113,12287161,12289209,12291257,12293305,12295353,12297401,12299449,12301497,12303545,12305593,12307641,12309689,12311737,12313785,12315833,12317881,12319929,12321977,12324025,12326073,12328121,12330169,12332217,12334265,12336313,12338361,12340409,12342457,12344505,12346553,12348601,12350649,12352697,12354745,12356793,12358841,12360889,12362937,12364985,12367033,12369081,12371129,12373177,12375225,12377273,12379321,12381369,12383417,12385465,12387513,12389561,12391609,12393657,12395705,12397753,12399801,12401849,12403897,12405945,12407993,12410041,12412089,12414137,12416185,12418233,12420281,12422329,12424377,12426425,12428473,12430521,12432569,12434617,12436665,12438713,12440761,12442809,12444857,12446905,12448953,12451001,12453049,12455097,12457145,12459193,12461241,12463289,12465337,12467385,12469433,12471481,12473529,12475577,12477625,12479673,12481721,12483769,12485817,12487865,12489913,12491961,12494009,12496057,12498105,12500153,12502201,12504249,12506297,12508345,12510393,12512441,12514489,12516537,12518585,12520633,12522681,12524729,12526777,12528825,12530873,12532921,12534969,12537017,12539065,12541113,12543161,12545209,12547257,12549305,12551353,12553401,12555449,12557497,12559545,12561593,12563641,12565689,12567737,12569785,12571833,12573881,12575929,12577977,12580025,12582073,12584121,12586169,12588217,12590265,12592313,12594361,12596409,12598457,12600505,12602553,12604601,12606649,12608697,12610745,12612793,12614841,12616889,12618937,12620985,12623033,12625081,12627129,12629177,12631225,12633273,12635321,12637369,12639417,12641465,12643513,12645561,12647609,12649657,12651705,12653753,12655801,12657849,12659897,12661945,12663993,12666041,12668089,12670137,12672185,12674233,12676281,12678329,12680377,12682425,12684473,12686521,12688569,12690617,12692665,12694713,12696761,12698809,12700857,12702905,12704953,12707001,12709049,12711097,12713145,12715193,12717241,12719289,12721337,12723385,12725433,12727481,12729529,12731577,12733625,12735673,12737721,12739769,12741817,12743865,12745913,12747961,12750009,12752057,12754105,12756153,12758201,12760249,12762297,12764345,12766393,12768441,12770489,12772537,12774585,12776633,12778681,12780729,12782777,12784825,12786873,12788921,12790969,12793017,12795065,12797113,12799161,12801209,12803257,12805305,12807353,12809401,12811449,12813497,12815545,12817593,12819641,12821689,12823737,12825785,12827833,12829881,12831929,12833977,12836025,12838073,12840121,12842169,12844217,12846265,12848313,12850361,12852409,12854457,12856505,12858553,12860601,12862649,12864697,12866745,12868793,12870841,12872889,12874937,12876985,12879033,12881081,12883129,12885177,12887225,12889273,12891321,12893378,12895426,12897474,12899522,12901570,12903618,12905666,12907714,12909762,12911810,12913858,12915906,12917954,12920002,12922050,12924098,12926146,12928194,12930242,12932290,12934338,12936386,12938434,12940482,12942530,12944578,12946626,12948674,12950722,12952770,12954818,12956866,12958914,12960962,12963010,12965058,12967106,12969154,12971202,12973250,12975298,12977346,12979394,12981442,12983490,12985538,12987586,12989634,12991682,12993730,12995778,12997826,12999874,13001922,13003970,13006018,13008066,13010114,13012162,13014210,13016258,13018306,13020354,13022402,13024450,13026498,13028546,13030594,13032642,13034690,13036738,13038786,13040834,13042882,13044930,13046978,13049026,13051074,13053122,13055170,13057218,13059266,13061314,13063362,13065410,13067458,13069506,13071554,13073602,13075650,13077698,13079746,13081794,13083842,13085890,13087938,13089986,13092034,13094082,13096130,13098178,13100226,13102274,13104322,13106370,13108418,13110466,13112514,13114562,13116610,13118658,13120706,13122754,13124802,13126850,13128898,13130946,13132994,13135042,13137090,13139138,13141186,13143234,13145289,13147337,13149385,13151433,13153481,13155529,13157577,13159625,13161673,13163721,13165769,13167817,13169865,13171913,13173961,13176009,13178057,13180105,13182153,13184201,13186249,13188297,13190345,13192393,13194441,13196489,13198537,13200585,13202633,13204681,13206729,13208777,13210825,13212873,13214921,13216969,13219017,13221065,13223113,13225161,13227209,13229257,13231305,13233353,13235401,13237449,13239497,13241545,13243593,13245641,13247689,13249737,13251785,13253833,13255881,13257929,13259977,13262025,13264073,13266121,13268169,13270217,13272265,13274313,13276361,13278409,13280457,13282505,13284553,13286601,13288649,13290697,13292745,13294793,13296841,13298889,13300937,13302985,13305033,13307081,13309129,13311177,13313225,13315273,13317321,13319369,13321417,13323465,13325513,13327561,13329609,13331657,13333705,13335753,13337801,13339849,13341897,13343945,13345993,13348041,13350098,13352146,13354194,13356242,13358290,13360338,13362386,13364434,13366482,13368530,13370578,13372626,13374674,13376722,13378770,13380818,13382866,13384914,13386962,13389010,13391058,13393106,13395154,13397202,13399250,13401298,13403346,13405394,13407442,13409490,13411538,13413586,13415634,13417682,13419730,13421778,13423826,13425874,13427922,13429970,13432018,13434066,13436114,13438162,13440210,13442258,13444306,13446354,13448402,13450450,13452498,13454554,13456602,13458650,13460698,13462746,13464794,13466842,13468890,13470938,13472986,13475034,13477082,13479130,13481178,13483226,13485274,13487322,13489370,13491418,13493466,13495514,13497562,13499610,13501658,13503706,13505754,13507802,13509850,13511898,13513946,13515994,13518042,13520090,13522138,13524186,13526234,13528282,13530330,13532378,13534426,13536474,13538522,13540570,13542618,13544666,13546714,13548762,13550810,13552858,13554906,13556954,13559002,13561050,13563098,13565146,13567194,13569242,13571290,13573338,13575386,13577434,13579482,13581530,13583578,13585626,13587674,13589722,13591770,13593818,13595866,13597914,13599962,13602010,13604058,13606106,13608154,13610202,13612250,13614298,13616346,13618394,13620442,13622490,13624538,13626586,13628634,13630682,13632730,13634778,13636826,13638874,13640922,13642970,13645018,13647066,13649114,13651162,13653210,13655258,13657306,13659354,13661402,13663450,13665498,13667546,13669594,13671642,13673690,13675738,13677786,13679834,13681882,13683930,13685978,13688026,13690074,13692122,13694170,13696218,13698266,13700314,13702362,13704410,13706458,13708506,13710554,13712602,13714658,13716706,13718754,13720802,13722850,13724898,13726946,13728994,13731042,13733090,13735138,13737186,13739234,13741282,13743330,13745378,13747426,13749474,13751522,13753570,13755618,13757666,13759714,13761762,13763819,13765867,13767915,13769963,13772011,13774059,13776107,13778155,13780203,13782251,13784299,13786347,13788395,13790443,13792491,13794539,13796587,13798635,13800683,13802731,13804779,13806827,13808875,13810923,13812971,13815019,13817067,13819115,13821163,13823211,13825259,13827307,13829355,13831403,13833451,13835499,13837547,13839595,13841643,13843691,13845739,13847787,13849835,13851883,13853931,13855979,13858027,13860075,13862123,13864171,13866219,13868267,13870315,13872363,13874411,13876459,13878507,13880555,13882603,13884651,13886699,13888747,13890795,13892843,13894891,13896939,13898987,13901035,13903083,13905131,13907179,13909227,13911275,13913323,13915371,13917419,13919467,13921515,13923563,13925611,13927659,13929707,13931755,13933803,13935851,13937899,13939947,13941995,13944043,13946091,13948139,13950187,13952235,13954283,13956331,13958379,13960427,13962475,13964523,13966571,13968619,13970667,13972715,13974763,13976811,13978859,13980907,13982955,13985003,13987051,13989099,13991147,13993195,13995243,13997291,13999339,14001387,14003435,14005483,14007531,14009579,14011627,14013675,14015723,14017771,14019819,14021867,14023915,14025963,14028011,14030059,14032107,14034155,14036203,14038251,14040299,14042347,14044395,14046443,14048491,14050539,14052587,14054635,14056683,14058731,14060779,14062827,14064875,14066923,14068980,14071028,14073076,14075124,14077172,14079220,14081268,14083316,14085364,14087412,14089460,14091508,14093556,14095604,14097652,14099700,14101748,14103796,14105844,14107892,14109940,14111988,14114036,14116084,14118132,14120180,14122228,14124276,14126324,14128372,14130420,14132468,14134516,14136564,14138612,14140660,14142708,14144756,14146804,14148852,14150900,14152948,14154996,14157044,14159092,14161140,14163188,14165236,14167284,14169332,14171380,14173428,14175476,14177524,14179572,14181620,14183668,14185716,14187764,14189812,14191860,14193908,14195956,14198004,14200052,14202100,14204148,14206196,14208244,14210292,14212340,14214388,14216436,14218484,14220532,14222580,14224628,14226676,14228724,14230772,14232820,14234868,14236916,14238964,14241012,14243060,14245108,14247156,14249204,14251252,14253300,14255348,14257396,14259444,14261492,14263540,14265588,14267636,14269684,14271732,14273780,14275828,14277876,14279924,14281972,14284020,14286068,14288116,14290164,14292212,14294260,14296308,14298356,14300404,14302452,14304500,14306548,14308596,14310644,14312692,14314740,14316788,14318836,14320884,14322932,14324980,14327028,14329076,14331124,14333172,14335220,14337268,14339316,14341364,14343412,14345460,14347508,14349556,14351604,14353652,14355700,14357748,14359796,14361844,14363892,14365940,14367988,14370036,14372084,14374132,14376180,14378228,14380276,14382324,14384372,14386420,14388468,14390516,14392564,14394612,14396660,14398708,14400756,14402804,14404852,14406900,14408948,14410996,14413044,14415092,14417140,14419188,14421236,14423284,14425332,14427380,14429428,14431476,14433524,14435572,14437620,14439668,14441716,14443764,14445812,14447860,14449908,14451956,14454004,14456052,14458100,14460148,14462196,14464244,14466292,14468340,14470388,14472436,14474484,14476532,14478580,14480628,14482676,14484724,14486772,14488820,14490868,14492916,14494964,14497012,14499060,14501108,14503156,14505204,14507252,14509300,14511348,14513396,14515444,14517492,14519540,14521588,14523636,14525684,14527741,14529789,14531837,14533885,14535933,14537981,14540029,14542077,14544125,14546173,14548221,14550269,14552317,14554365,14556413,14558461,14560509,14562557,14564605,14566653,14568701,14570749,14572797,14574845,14576893,14578941,14580989,14583037,14585085,14587133,14589181,14591229,14593277,14595325,14597373,14599421,14601469,14603517,14605565,14607613,14609661,14611709,14613757,14615805,14617853,14619901,14621949,14623997,14626045,14628093,14630141,14632189,14634237,14636285,14638333,14640381,14642429,14644477,14646525,14648573,14650621,14652669,14654717,14656765,14658813,14660861,14662909,14664957,14667005,14669053,14671101,14673149,14675197,14677245,14679293,14681341,14683389,14685437,14687485,14689533,14691581,14693629,14695677,14697725,14699773,14701821,14703869,14705917,14707965,14710013,14712061,14714109,14716157,14718205,14720253,14722301,14724349,14726397,14728445,14730493,14732541,14734589,14736637,14738685,14740733,14742781,14744829,14746877,14748925,14750973,14753021,14755069,14757117,14759165,14761213,14763261,14765309,14767357,14769405,14771453,14773501,14775549,14777597,14779645,14781693,14783741,14785789,14787837,14789885,14791933,14793981,14796029,14798077,14800125,14802173,14804221,14806269,14808317,14810365,14812413,14814461,14816509,14818557,14820605,14822653,14824701,14826749,14828797,14830845,14832893,14834941,14836989,14839037,14841085,14843133,14845181,14847229,14849277,14851325,14853373,14855421,14857469,14859517,14861565,14863613,14865661,14867709,14869757,14871805,14873853,14875901,14877949,14879997,14882045,14884093,14886141,14888189,14890237,14892285,14894333,14896381,14898429,14900477,14902525,14904573,14906621,14908669,14910717,14912765,14914813,14916861,14918909,14920957,14923005,14925053,14927101,14929149,14931197,14933245,14935293,14937341,14939389,14941437,14943485,14945533,14947581,14949629,14951677,14953725,14955773,14957821,14959869,14961917,14963965,14966013,14968061,14970109,14972157,14974205,14976253,14978301,14980349,14982397,14984445,14986493,14988541,14990589,14992637,14994685,14996733,14998781,15000829,15002877,15004925,15006973,15009021,15011069,15013117,15015165,15017213,15019261,15021309,15023357,15025405,15027453,15029501,15031549,15033597,15035645,15037693,15039741,15041789,15043837,15045885,15047933,15049981,15052029,15054077,15056125,15058173,15060221,15062269,15064317,15066365,15068413,15070461,15072509,15074557,15076605,15078653,15080701,15082749,15084797,15086845,15088893,15090941,15092989,15095037,15097085,15099133,15101181,15103229,15105277,15107325,15109373,15111421,15113469,15115525,15117573,15119621,15121669,15123717,15125765,15127813,15129861,15131909,15133957,15136005,15138053,15140101,15142149,15144197,15146245,15148293,15150341,15152389,15154437,15156485,15158533,15160581,15162629,15164677,15166725,15168773,15170821,15172869,15174917,15176965,15179013,15181061,15183109,15185157,15187205,15189253,15191301,15193349,15195397,15197445,15199493,15201541,15203589,15205637,15207685,15209733,15211781,15213829,15215877,15217925,15219973,15222021,15224069,15226117,15228165,15230213,15232261,15234309,15236357,15238405,15240453,15242501,15244549,15246597,15248645,15250693,15252741,15254789,15256837,15258885,15260933,15262981,15265034,15267082,15269130,15271178,15273226,15275274,15277322,15279370,15281418,15283466,15285514,15287562,15289610,15291658,15293706,15295754,15297802,15299850,15301898,15303946,15305994,15308042,15310090,15312138,15314186,15316234,15318282,15320330,15322378,15324426,15326474,15328522,15330570,15332618,15334666,15336714,15338762,15340810,15342858,15344906,15346954,15349002,15351050,15353098,15355146,15357194,15359242,15361290,15363338,15365386,15367434,15369482,15371530,15373578,15375626,15377674,15379722,15381770,15383818,15385866,15387914,15389962,15392010,15394058,15396106,15398154,15400202,15402250,15404298,15406346,15408394,15410442,15412490,15414538,15416586,15418634,15420682,15422730,15424778,15426826,15428874,15430922,15432970,15435018,15437066,15439114,15441162,15443210,15445258,15447306,15449354,15451402,15453450,15455498,15457546,15459594,15461642,15463690,15465738,15467786,15469834,15471882,15473930,15475978,15478026,15480074,15482122,15484170,15486218,15488266,15490314,15492362,15494410,15496458,15498506,15500554,15502602,15504650,15506698,15508746,15510794,15512842,15514890,15516938,15518986,15521034,15523082,15525130,15527178,15529226,15531274,15533322,15535370,15537418,15539466,15541514,15543562,15545610,15547658,15549706,15551754,15553802,15555850,15557898,15559946,15561994,15564042,15566090,15568138,15570186,15572234,15574282,15576330,15578378,15580426,15582474,15584522,15586570,15588618,15590666,15592723,15594771,15596819,15598867,15600915,15602963,15605011,15607059,15609107,15611155,15613203,15615251,15617299,15619347,15621395,15623443,15625491,15627539,15629587,15631635,15633683,15635731,15637779,15639827,15641875,15643923,15645971,15648019,15650067,15652115,15654163,15656211,15658259,15660307,15662355,15664403,15666451,15668499,15670547,15672595,15674643,15676691,15678739,15680787,15682835,15684883,15686931,15688979,15691027,15693075,15695123,15697171,15699219,15701267,15703315,15705363,15707411,15709459,15711507,15713555,15715603,15717651,15719699,15721747,15723795,15725843,15727891,15729939,15731987,15734035,15736083,15738131,15740179,15742227,15744275,15746323,15748371,15750419,15752467,15754515,15756563,15758611,15760659,15762716,15764764,15766812,15768860,15770908,15772956,15775004,15777052,15779100,15781148,15783196,15785244,15787292,15789340,15791388,15793436,15795484,15797532,15799580,15801628,15803676,15805724,15807772,15809820,15811868,15813916,15815964,15818012,15820060,15822108,15824156,15826204,15828252,15830300,15832348,15834396,15836444,15838492,15840540,15842588,15844636,15846684,15848732,15850780,15852828,15854876,15856924,15858972,15861020,15863077,15865125,15867173,15869221,15871269,15873317,15875365,15877413,15879461,15881509,15883557,15885605,15887653,15889701,15891749,15893797,15895845,15897893,15899941,15901989,15904037,15906085,15908133,15910181,15912229,15914277,15916325,15918373,15920421,15922469,15924517,15926565,15928613,15930661,15932709,15934757,15936805,15938853,15940901,15942949,15944997,15947045,15949093,15951141,15953189,15955237,15957285,15959333,15961381,15963429,15965477,15967525,15969573,15971621,15973669,15975717,15977765,15979813,15981861,15983909,15985957,15988005,15990053,15992101,15994149,15996197,15998245,16000293,16002341,16004389,16006437,16008485,16010533,16012581,16014629,16016677,16018725,16020773,16022821,16024869,16026917,16028965,16031013,16033061,16035109,16037157,16039205,16041253,16043301,16045349,16047397,16049445,16051493,16053541,16055589,16057637,16059685,16061733,16063781,16065829,16067877,16069925,16071973,16074021,16076069,16078117,16080165,16082213,16084261,16086309,16088357,16090405,16092453,16094501,16096549,16098597,16100645,16102693,16104741,16106789,16108837,16110885,16112933,16114981,16117029,16119077,16121125,16123173,16125221,16127269,16129317,16131365,16133413,16135461,16137509,16139557,16141605,16143653,16145701,16147749,16149797,16151845,16153893,16155941,16157989,16160037,16162085,16164133,16166181,16168229,16170277,16172325,16174373,16176421,16178469,16180517,16182565,16184613,16186661,16188709,16190757,16192805,16194853,16196901,16198949,16200997,16203045,16205093,16207141,16209189,16211237,16213285,16215333,16217381,16219429,16221477,16223525,16225573,16227621,16229669,16231717,16233765,16235813,16237861,16239909,16241957,16244005,16246053,16248101,16250149,16252197,16254245,16256293,16258341,16260389,16262437,16264485,16266533,16268581,16270629,16272677,16274725,16276773,16278821,16280869,16282917,16284965,16287013,16289061,16291109,16293157,16295205,16297253,16299301,16301349,16303397,16305445,16307493,16309541,16311589,16313637,16315685,16317733,16319781,16321829,16323877,16325925,16327973,16330021,16332069,16334117,16336165,16338213,16340261,16342309,16344357,16346405,16348453,16350501,16352549,16354597,16356645,16358693,16360741,16362789,16364837,16366885,16368933,16370981,16373029,16375077,16377125,16379173,16381221,16383269,16385317,16387365,16389413,16391461,16393509,16395557,16397605,16399653,16401701,16403749,16405797,16407845,16409893,16411941,16413989,16416037,16418085,16420133,16422181,16424229,16426277,16428325,16430373,16432421,16434469,16436517,16438565,16440613,16442661,16444709,16446757,16448805,16450853,16452901,16454949,16456997,16459045,16461093,16463141,16465189,16467237,16469285,16471333,16473381,16475429,16477477,16479525,16481573,16483621,16485669,16487717,16489765,16491813,16493861,16495909,16497957,16500005,16502053,16504101,16506149,16508197,16510245,16512293,16514341,16516389,16518437,16520485,16522533,16524581,16526629,16528677,16530725,16532773,16534821,16536869,16538917,16540965,16543013,16545061,16547109,16549157,16551205,16553253,16555301,16557349,16559397,16561445,16563493,16565541,16567589,16569637,16571685,16573733,16575781,16577829,16579877,16581925,16583973,16586021,16588069,16590117,16592165,16594213,16596261,16598309,16600357,16602405,16604453,16606501,16608549,16610597,16612645,16614693,16616741,16618789,16620837,16622885,16624933,16626981,16629029,16631077,16633125,16635173,16637221,16639269,16641317,16643365,16645413,16647461,16649509,16651557,16653605,16655653,16657701,16659749,16661797,16663845,16665893,16667941,16669989,16672037,16674085,16676133,16678181,16680229,16682277,16684325,16686373,16688421,16690469,16692517,16694565,16696613,16698661,16700709,16702757,16704805,16706853,16708901,16710949,16712997,16715045,16717093,16719141,16721189,16723237,16725285,16727333,16729381,16731429,16733477,16735525,16737573,16739621,16741669,16743717,16745765,16747813,16749861,16751909,16753957,16756005,16758053,16760101,16762149,16764197,16766245,16768293,16770341,16772389,16774437,16776485,16778533,16780581,16782629,16784677,16786725,16788773,16790821,16792869,16794917,16796965,16799013,16801061,16803109,16805157,16807205,16809253,16811301,16813349,16815397,16817445,16819493,16821541,16823589,16825637,16827685,16829733,16831781,16833829,16835877,16837925,16839973,16842021,16844076,16846124,16848172,16850220,16852268,16854316,16856364,16858412,16860460,16862508,16864556,16866604,16868652,16870700,16872748,16874796,16876844,16878892,16880940,16882988,16885036,16887084,16889132,16891180,16893228,16895276,16897324,16899372,16901420,16903468,16905516,16907564,16909612,16911660,16913708,16915756,16917804,16919852,16921900,16923948,16925996,16928044,16930092,16932140,16934188,16936236,16938284,16940332,16942380,16944428,16946476,16948524,16950572,16952620,16954668,16956716,16958764,16960812,16962860,16964908,16966956,16969004,16971052,16973100,16975148,16977196,16979244,16981292,16983340,16985388,16987436,16989484,16991532,16993580,16995628,16997676,16999724,17001772,17003820,17005868,17007916,17009964,17012012,17014060,17016108,17018156,17020204,17022252,17024300,17026348,17028396,17030444,17032492,17034540,17036588,17038636,17040684,17042732,17044780,17046828,17048876,17050924,17052972,17055020,17057068,17059116,17061164,17063212,17065260,17067308,17069356,17071404,17073452,17075500,17077548,17079596,17081644,17083692,17085740,17087788,17089836,17091884,17093941,17095989,17098037,17100085,17102133,17104181,17106229,17108277,17110325,17112373,17114421,17116469,17118517,17120565,17122613,17124661,17126709,17128757,17130805,17132853,17134901,17136949,17138997,17141045,17143093,17145141,17147189,17149237,17151285,17153333,17155381,17157429,17159477,17161525,17163573,17165621,17167669,17169717,17171765,17173813,17175861,17177909,17179957,17182005,17184053,17186101,17188149,17190197,17192245,17194293,17196341,17198389,17200437,17202485,17204533,17206581,17208629,17210677,17212725,17214773,17216821,17218869,17220917,17222965,17225013,17227061,17229109,17231157,17233205,17235253,17237301,17239349,17241397,17243445,17245493,17247541,17249589,17251637,17253685,17255733,17257781,17259829,17261877,17263925,17265973,17268021,17270069,17272117,17274165,17276213,17278261,17280309,17282357,17284405,17286453,17288501,17290556,17292604,17294652,17296700,17298748,17300796,17302844,17304892,17306940,17308988,17311036,17313084,17315132,17317180,17319228,17321276,17323324,17325372,17327420,17329468,17331516,17333564,17335612,17337660,17339708,17341756,17343804,17345852,17347900,17349948,17351996,17354044,17356092,17358140,17360188,17362236,17364284,17366332,17368380,17370428,17372476,17374524,17376572,17378620,17380668,17382716,17384764,17386812,17388860,17390908,17392956,17395004,17397052,17399100,17401148,17403196,17405244,17407292,17409340,17411388,17413436,17415484,17417532,17419580,17421628,17423676,17425724,17427772,17429820,17431868,17433916,17435964,17438012,17440060,17442108,17444156,17446204,17448252,17450300,17452348,17454396,17456444,17458492,17460540,17462588,17464636,17466684,17468732,17470780,17472828,17474876,17476924,17478972,17481020,17483068,17485116,17487164,17489212,17491260,17493308,17495356,17497404,17499452,17501500,17503548,17505596,17507644,17509692,17511740,17513788,17515836,17517884,17519932,17521980,17524028,17526076,17528124,17530172,17532220,17534268,17536316,17538364,17540412,17542460,17544508,17546556,17548604,17550652,17552700,17554748,17556796,17558844,17560892,17562940,17564988,17567036,17569084,17571132,17573180,17575228,17577276,17579324,17581372,17583420,17585468,17587516,17589564,17591612,17593660,17595708,17597756,17599804,17601852,17603900,17605948,17607996,17610044,17612092,17614140,17616188,17618236,17620284,17622332,17624380,17626428,17628476,17630524,17632572,17634620,17636668,17638716,17640764,17642812,17644860,17646908,17648956,17651004,17653052,17655100,17657148,17659196,17661244,17663292,17665340,17667388,17669436,17671484,17673532,17675580,17677628,17679676,17681724,17683772,17685820,17687868,17689916,17691964,17694012,17696060,17698108,17700156,17702204,17704252,17706300,17708348,17710396,17712444,17714492,17716540,17718588,17720636,17722684,17724732,17726780,17728828,17730876,17732924,17734972,17737020,17739068,17741116,17743164,17745212,17747260,17749308,17751356,17753404,17755452,17757500,17759548,17761596,17763644,17765692,17767740,17769788,17771836,17773884,17775932,17777980,17780028,17782076,17784124,17786172,17788220,17790268,17792316,17794364,17796412,17798460,17800508,17802556,17804604,17806652,17808700,17810748,17812796,17814844,17816892,17818940,17820988,17823036,17825084,17827132,17829180,17831228,17833276,17835324,17837372,17839420,17841468,17843516,17845564,17847612,17849660,17851708,17853756,17855804,17857852,17859900,17861948,17863996,17866044,17868092,17870140,17872188,17874236,17876284,17878332,17880380,17882428,17884476,17886524,17888572,17890620,17892668,17894716,17896764,17898812,17900860,17902908,17904956,17907004,17909052,17911100,17913148,17915196,17917244,17919292,17921340,17923388,17925436,17927484,17929532,17931580,17933628,17935676,17937724,17939772,17941820,17943868,17945916,17947964,17950012,17952060,17954108,17956156,17958204,17960252,17962300,17964348,17966396,17968444,17970492,17972540,17974588,17976636,17978684,17980732,17982780,17984828,17986876,17988924,17990972,17993020,17995068,17997116,17999164,18001212,18003260,18005308,18007356,18009404,18011452,18013500,18015548,18017596,18019644,18021692,18023740,18025788,18027836,18029884,18031932,18033980,18036028,18038076,18040124,18042172,18044220,18046268,18048316,18050364,18052412,18054460,18056508,18058556,18060604,18062652,18064700,18066748,18068796,18070844,18072892,18074940,18076988,18079036,18081084,18083132,18085180,18087228,18089276,18091324,18093372,18095420,18097468,18099516,18101564,18103612,18105660,18107708,18109756,18111804,18113852,18115900,18117948,18119996,18122044,18124092,18126140,18128188,18130236,18132284,18134332,18136380,18138428,18140476,18142524,18144572,18146620,18148668,18150716,18152764,18154812,18156860,18158908,18160956,18163004,18165052,18167100,18169148,18171196,18173244,18175292,18177340,18179388,18181436,18183484,18185532,18187580,18189628,18191676,18193724,18195772,18197820,18199868,18201916,18203964,18206012,18208060,18210108,18212156,18214204,18216252,18218300,18220348,18222396,18224444,18226492,18228540,18230588,18232636,18234684,18236732,18238780,18240828,18242876,18244924,18246972,18249020,18251068,18253116,18255164,18257212,18259260,18261308,18263356,18265404,18267452,18269500,18271548,18273596,18275644,18277692,18279740,18281788,18283836,18285884,18287932,18289980,18292028,18294076,18296124,18298172,18300220,18302268,18304316,18306364,18308412,18310460,18312508,18314556,18316604,18318652,18320700,18322748,18324796,18326844,18328892,18330940,18332988,18335036,18337084,18339132,18341180,18343228,18345276,18347324,18349372,18351420,18353468,18355516,18357564,18359612,18361660,18363708,18365756,18367804,18369852,18371900,18373948,18375996,18378044,18380092,18382140,18384188,18386236,18388284,18390332,18392380,18394428,18396476,18398524,18400572,18402620,18404668,18406716,18408764,18410812,18412860,18414908,18416956,18419004,18421052,18423100,18425148,18427196,18429244,18431292,18433340,18435388,18437436,18439484,18441532,18443580,18445628,18447676,18449724,18451772,18453820,18455868,18457916,18459964,18462012,18464060,18466108,18468156,18470204,18472252,18474300,18476348,18478396,18480444,18482492,18484540,18486588,18488636,18490684,18492732,18494780,18496828,18498876,18500924,18502972,18505020,18507068,18509116,18511164,18513212,18515260,18517308,18519356,18521404,18523452,18525500,18527548,18529596,18531644,18533692,18535740,18537788,18539836,18541884,18543932,18545980,18548028,18550076,18552124,18554172,18556220,18558268,18560316,18562364,18564412,18566460,18568508,18570556,18572604,18574652,18576700,18578748,18580796,18582844,18584892,18586940,18588988,18591036,18593084,18595132,18597180,18599228,18601276,18603324,18605372,18607420,18609468,18611516,18613564,18615612,18617660,18619708,18621756,18623804,18625852,18627900,18629948,18631996,18634044,18636092,18638140,18640188,18642236,18644284,18646332,18648380,18650428,18652476,18654524,18656572,18658620,18660668,18662716,18664764,18666812,18668860,18670908,18672956,18675004,18677052,18679100,18681148,18683196,18685244,18687292,18689340,18691388,18693436,18695484,18697532,18699580,18701628,18703676,18705724,18707772,18709820,18711868,18713916,18715964,18718012,18720060,18722108,18724156,18726204,18728252,18730300,18732348,18734396,18736444,18738492,18740540,18742588,18744636,18746684,18748732,18750780,18752828,18754876,18756924,18758972,18761020,18763068,18765116,18767164,18769212,18771260,18773308,18775356,18777404,18779452,18781500,18783548,18785596,18787644,18789692,18791740,18793788,18795836,18797884,18799932,18801980,18804028,18806076,18808124,18810172,18812220,18814268,18816316,18818364,18820412,18822460,18824508,18826556,18828604,18830652,18832700,18834748,18836796,18838844,18840892,18842940,18844988,18847036,18849084,18851132,18853180,18855228,18857276,18859324,18861372,18863420,18865468,18867516,18869564,18871612,18873660,18875708,18877756,18879804,18881852,18883900,18885948,18887996,18890044,18892092,18894140,18896188,18898236,18900284,18902332,18904380,18906428,18908476,18910524,18912572,18914620,18916668,18918716,18920764,18922812,18924860,18926908,18928956,18931004,18933052,18935100,18937148,18939196,18941244,18943292,18945340,18947388,18949436,18951484,18953532,18955580,18957628,18959676,18961724,18963772,18965820,18967868,18969916,18971964,18974012,18976060,18978108,18980156,18982204,18984252,18986300,18988348,18990396,18992444,18994492,18996540,18998588,19000636,19002684,19004732,19006780,19008828,19010876,19012924,19014972,19017020,19019068,19021116,19023164,19025212,19027260,19029308,19031356,19033404,19035452,19037500,19039548,19041596,19043644,19045692,19047740,19049788,19051836,19053884,19055932,19057980,19060028,19062076,19064124,19066172,19068220,19070268,19072316,19074364,19076412,19078460,19080508,19082556,19084604,19086652,19088700,19090748,19092796,19094844,19096892,19098940,19100988,19103036,19105084,19107132,19109180,19111228,19113276,19115324,19117372,19119420,19121468,19123516,19125564,19127612,19129660,19131708,19133756,19135804,19137852,19139900,19141948,19143996,19146044,19148092,19150140,19152188,19154236,19156284,19158332,19160380,19162428,19164476,19166524,19168572,19170620,19172668,19174716,19176764,19178812,19180860,19182908,19184956,19187004,19189052,19191100,19193148,19195196,19197244,19199292,19201340,19203388,19205436,19207484,19209532,19211580,19213628,19215676,19217724,19219772,19221820,19223868,19225916,19227964,19230012,19232060,19234108,19236156,19238204,19240252,19242300,19244348,19246396,19248444,19250492,19252540,19254588,19256636,19258684,19260732,19262780,19264828,19266876,19268924,19270972,19273020,19275068,19277116,19279164,19281212,19283260,19285308,19287356,19289404,19291452,19293500,19295548,19297596,19299644,19301692,19303740,19305788,19307836,19309884,19311932,19313980,19316028,19318076,19320124,19322172,19324220,19326268,19328316,19330364,19332412,19334460,19336508,19338556,19340604,19342652,19344700,19346748,19348796,19350844,19352892,19354940,19356988,19359036,19361084,19363132,19365180,19367228,19369276,19371324,19373372,19375420,19377468,19379516,19381564,19383612,19385660,19387708,19389756,19391804,19393852,19395900,19397948,19399996,19402044,19404092,19406140,19408188,19410236,19412284,19414332,19416380,19418428,19420476,19422524,19424572,19426620,19428668,19430716,19432764,19434812,19436860,19438908,19440956,19443004,19445052,19447100,19449148,19451196,19453244,19455292,19457340,19459388,19461436,19463484,19465532,19467580,19469628,19471676,19473724,19475772,19477820,19479868,19481916,19483964,19486012,19488060,19490108,19492156,19494204,19496252,19498300,19500348,19502396,19504444,19506492,19508540,19510588,19512636,19514684,19516732,19518780,19520828,19522876,19524924,19526972,19529020,19531068,19533116,19535164,19537212,19539260,19541308,19543356,19545404,19547452,19549500,19551548,19553596,19555644,19557692,19559740,19561788,19563836,19565884,19567932,19569980,19572028,19574076,19576124,19578172,19580220,19582268,19584316,19586364,19588412,19590460,19592508,19594556,19596604,19598652,19600700,19602748,19604796,19606844,19608892,19610940,19612988,19615036,19617084,19619132,19621180,19623228,19625276,19627324,19629372,19631420,19633468,19635516,19637564,19639612,19641660,19643708,19645756,19647804,19649852,19651900,19653948,19655996,19658044,19660092,19662140,19664188,19666236,19668284,19670332,19672380,19674428,19676476,19678524,19680572,19682620,19684668,19686716,19688764,19690812,19692860,19694908,19696956,19699004,19701052,19703100,19705148,19707196,19709244,19711292,19713340,19715388,19717436,19719484,19721532,19723580,19725628,19727676,19729724,19731772,19733820,19735868,19737916,19739964,19742012,19744060,19746108,19748156,19750204,19752252,19754300,19756348,19758396,19760444,19762492,19764540,19766588,19768636,19770684,19772732,19774780,19776828,19778876,19780924,19782972,19785020,19787068,19789116,19791164,19793212,19795260,19797308,19799356,19801404,19803452,19805500,19807548,19809596,19811644,19813692,19815740,19817788,19819836,19821884,19823932,19825980,19828028,19830076,19832124,19834172,19836220,19838268,19840316,19842364,19844412,19846460,19848508,19850556,19852604,19854652,19856700,19858748,19860796,19862844,19864892,19866940,19868988,19871036,19873084,19875132,19877180,19879228,19881276,19883324,19885372,19887420,19889468,19891516,19893564,19895612,19897660,19899708,19901756,19903804,19905852,19907900,19909948,19911996,19914044,19916092,19918140,19920188,19922236,19924284,19926332,19928380,19930428,19932476,19934524,19936572,19938620,19940668,19942716,19944764,19946812,19948860,19950908,19952956,19955004,19957052,19959100,19961148,19963196,19965244,19967292,19969340,19971388,19973436,19975484,19977532,19979580,19981628,19983676,19985724,19987772,19989820,19991868,19993916,19995964,19998012,20000060,20002108,20004156,20006204,20008252,20010300,20012348,20014396,20016444,20018492,20020540,20022588,20024636,20026684,20028732,20030780,20032828,20034876,20036924,20038972,20041020,20043068,20045116,20047164,20049212,20051260,20053308,20055356,20057404,20059452,20061500,20063548,20065596,20067644,20069692,20071740,20073788,20075836,20077884,20079932,20081980,20084028,20086076,20088124,20090172,20092220,20094268,20096316,20098364,20100412,20102460,20104508,20106556,20108604,20110652,20112700,20114748,20116796,20118844,20120892,20122940,20124988,20127036,20129084,20131132,20133180,20135228,20137276,20139324,20141372,20143420,20145468,20147516,20149564,20151612,20153660,20155708,20157756,20159804,20161852,20163900,20165948,20167996,20170044,20172092,20174140,20176188,20178236,20180284,20182332,20184380,20186428,20188476,20190524,20192572,20194620,20196668,20198716,20200764,20202812,20204860,20206908,20208956,20211004,20213052,20215100,20217148,20219196,20221244,20223292,20225340,20227388,20229436,20231484,20233532,20235580,20237628,20239676,20241724,20243772,20245820,20247868,20249916,20251964,20254012,20256060,20258108,20260156,20262204,20264252,20266300,20268348,20270396,20272444,20274492,20276540,20278588,20280636,20282684,20284732,20286780,20288828,20290876,20292924,20294972,20297020,20299068,20301116,20303164,20305212,20307260,20309308,20311356,20313404,20315452,20317500,20319548,20321596,20323644,20325692,20327740,20329788,20331836,20333884,20335932,20337980,20340028,20342076,20344124,20346172,20348220,20350268,20352316,20354364,20356412,20358460,20360508,20362556,20364604,20366652,20368700,20370748,20372796,20374844,20376892,20378940,20380988,20383036,20385084,20387132,20389180,20391228,20393276,20395324,20397372,20399420,20401468,20403516,20405564,20407612,20409660,20411708,20413756,20415804,20417852,20419900,20421948,20423996,20426044,20428092,20430140,20432188,20434236,20436284,20438332,20440380,20442428,20444476,20446524,20448572,20450620,20452668,20454716,20456764,20458812,20460860,20462908,20464956,20467004,20469052,20471100,20473148,20475196,20477244,20479292,20481340,20483388,20485436,20487484,20489532,20491580,20493628,20495676,20497724,20499772,20501820,20503868,20505916,20507964,20510012,20512060,20514108,20516156,20518204,20520252,20522300,20524348,20526396,20528450,20530498,20532546,20534594,20536642,20538690,20540738,20542786,20544834,20546882,20548930,20550978,20553026,20555074,20557122,20559170,20561218,20563266,20565314,20567362,20569410,20571458,20573506,20575554,20577602,20579650,20581698,20583746,20585794,20587842,20589890,20591938,20593986,20596034,20598082,20600130,20602178,20604226,20606274,20608322,20610370,20612418,20614466,20616514,20618562,20620610,20622658,20624706,20626754,20628802,20630850,20632898,20634946,20636994,20639042,20641090,20643138,20645186,20647234,20649282,20651330,20653378,20655426,20657474,20659522,20661570,20663618,20665666,20667714,20669762,20671810,20673858,20675906,20677954,20680002,20682050,20684098,20686146,20688194,20690242,20692290,20694338,20696386,20698434,20700482,20702530,20704578,20706626,20708674,20710722,20712770,20714818,20716866,20718914,20720962,20723010,20725058,20727106,20729154,20731202,20733250,20735298,20737346,20739394,20741442,20743490,20745538,20747586,20749634,20751682,20753730,20755778,20757826,20759874,20761922,20763970,20766018,20768066,20770114,20772162,20774210,20776258,20778306,20780354,20782402,20784450,20786498,20788546,20790594,20792642,20794690,20796738,20798786,20800834,20802882,20804930,20806978,20809026,20811074,20813122,20815170,20817218,20819266,20821314,20823362,20825410,20827458,20829506,20831561,20833609,20835657,20837705,20839753,20841801,20843849,20845897,20847945,20849993,20852041,20854089,20856137,20858185,20860233,20862281,20864329,20866377,20868425,20870473,20872521,20874569,20876617,20878665,20880713,20882761,20884809,20886857,20888905,20890953,20893001,20895049,20897097,20899145,20901193,20903241,20905289,20907337,20909385,20911433,20913481,20915529,20917577,20919625,20921673,20923721,20925769,20927817,20929865,20931913,20933961,20936009,20938057,20940105,20942153,20944201,20946249,20948297,20950345,20952393,20954441,20956489,20958537,20960585,20962633,20964681,20966729,20968777,20970825,20972873,20974921,20976969,20979017,20981065,20983113,20985161,20987209,20989257,20991305,20993353,20995401,20997449,20999497,21001545,21003593,21005641,21007689,21009737,21011785,21013833,21015881,21017929,21019977,21022025,21024073,21026121,21028169,21030217,21032265,21034313,21036361,21038409,21040457,21042505,21044553,21046601,21048649,21050697,21052745,21054793,21056841,21058889,21060937,21062985,21065033,21067081,21069129,21071177,21073225,21075273,21077321,21079369,21081417,21083465,21085513,21087561,21089609,21091657,21093705,21095753,21097801,21099849,21101897,21103945,21105993,21108041,21110089,21112137,21114185,21116233,21118281,21120329,21122377,21124425,21126473,21128521,21130569,21132617,21134665,21136713,21138761,21140809,21142857,21144905,21146953,21149001,21151049,21153097,21155145,21157193,21159241,21161289,21163337,21165385,21167433,21169481,21171529,21173577,21175625,21177673,21179721,21181769,21183817,21185865,21187913,21189961,21192009,21194057,21196105,21198153,21200201,21202249,21204297,21206345,21208393,21210441,21212489,21214537,21216585,21218633,21220681,21222729,21224777,21226825,21228873,21230930,21232978,21235026,21237074,21239122,21241170,21243218,21245266,21247314,21249362,21251410,21253458,21255506,21257554,21259602,21261650,21263698,21265746,21267794,21269842,21271890,21273938,21275986,21278034,21280082,21282130,21284178,21286226,21288274,21290322,21292370,21294418,21296466,21298514,21300562,21302610,21304658,21306706,21308754,21310802,21312850,21314898,21316946,21318994,21321042,21323090,21325138,21327186,21329234,21331282,21333330,21335384,21337432,21339480,21341528,21343576,21345624,21347672,21349720,21351768,21353816,21355864,21357912,21359960,21362008,21364056,21366104,21368152,21370200,21372248,21374296,21376344,21378392,21380448,21382496,21384544,21386592,21388640,21390688,21392736,21394793,21396841,21398889,21400937,21402985,21405033,21407081,21409129,21411177,21413225,21415273,21417321,21419369,21421417,21423465,21425513,21427561,21429609,21431657,21433705,21435753,21437801,21439849,21441897,21443945,21445993,21448049,21450097,21452145,21454193,21456241,21458289,21460337,21462385,21464433,21466481,21468529,21470577,21472625,21474673,21476721,21478769,21480817,21482865,21484913,21486961,21489009,21491057,21493105,21495153,21497201,21499249,21501297,21503345,21505393,21507441,21509489,21511537,21513585,21515633,21517681,21519729,21521777,21523833,21525881,21527929,21529977,21532025,21534073,21536121,21538169,21540217,21542265,21544313,21546361,21548409,21550457,21552505,21554553,21556601,21558649,21560697,21562745,21564793,21566841,21568889,21570937,21572985,21575033,21577081,21579129,21581177,21583225,21585273,21587321,21589369,21591417,21593465,21595513,21597561,21599609,21601657,21603705,21605753,21607801,21609849,21611897,21613945,21615993,21618041,21620089,21622137,21624185,21626233,21628281,21630329,21632377,21634425,21636473,21638521,21640569,21642617,21644665,21646713,21648761,21650809,21652857,21654905,21656953,21659001,21661049,21663097,21665145,21667193,21669241,21671289,21673337,21675385,21677433,21679481,21681529,21683577,21685625,21687673,21689721,21691769,21693817,21695865,21697913,21699961,21702009,21704057,21706105,21708153,21710201,21712249,21714297,21716345,21718393,21720441,21722489,21724537,21726585,21728633,21730681,21732729,21734777,21736825,21738873,21740921,21742969,21745017,21747065,21749113,21751161,21753209,21755257,21757305,21759353,21761401,21763449,21765497,21767545,21769593,21771641,21773689,21775737,21777785,21779833,21781881,21783929,21785977,21788025,21790073,21792121,21794169,21796217,21798265,21800313,21802361,21804409,21806457,21808505,21810553,21812601,21814649,21816697,21818745,21820793,21822841,21824889,21826937,21828985,21831033,21833081,21835129,21837177,21839225,21841273,21843321,21845369,21847417,21849465,21851513,21853561,21855609,21857657,21859705,21861753,21863801,21865849,21867897,21869945,21871993,21874047,21876095,21878143,21880191,21882239,21884287,21886335,21888383,21890431,21892479,21894527,21896575,21898623,21900671,21902719,21904767,21906815,21908863,21910911,21912959,21915007,21917055,21919103,21921151,21923199,21925256,21927304,21929352,21931400,21933448,21935496,21937544,21939592,21941640,21943688,21945736,21947784,21949832,21951880,21953928,21955976,21958032,21960080,21962128,21964176,21966224,21968272,21970320,21972368,21974416,21976464,21978512,21980560,21982608,21984656,21986704,21988752,21990800,21992848,21994896,21996944,21998992,22001040,22003088,22005136,22007184,22009232,22011280,22013328,22015376,22017424,22019472,22021520,22023568,22025616,22027664,22029712,22031760,22033808,22035856,22037904,22039952,22042ee3,22517048,22519096,22521144,22523192,22525240,22527288,22529336,22531384,22533432,22535480,22537528,22539576,22541624,22543672,22545720,22547768,22549816,22551864,22553912,22555960,22558008,22560056,22562113,22564161,22566209,22568257,22570305,22572353,22574401,22576449,22578497,22580545,22582593,22584641,22586689,22588737,22590785,22592833,22594881,22596929,22598977,22601025,22603073,22605121,22607169,22609217,22611274,22613322,22615370,22617418,22618865,22620463,22622506,22624554,22626602,22628650,22630698,22632746,22634794,22636842,22638890,22640938,22642986,22645034,22647082,22649130,22651178,22653226,22655274,22657322,22659370,22661418,22663466,22665514,22667562,22669610,22671658,22673706,22675754,22677802,22679850,22681898,22683946,22685994,22688042,22690090,22692138,22694186,22696234,22698282,22700330,22702378,22704426,22706474,22708522,22710570,22712618,22714666,22716714,22718762,22720810,22722858,22724906,22726954,22729002,22731050,22733098,22735146,22737194,22739242,22741290,22743338,22745386,22747434,22749482,22751530,22753578,22755626,22757674,22759722,22761770,22763818,22765866,22767914,22769962,22772010,22774058,22776106,22778154,22780202,22782250,22784298,22786346,22788394,22790442,22792490,22794538,22796586,22798634,22800682,22802730,22804787,22806835,22808883,22810931,22812979,22815027,22817075,22819123,22821171,22823219,22825267,22827315,22829363,22831411,22833467,22835515,22837563,22839611,22841659,22843707,22845755,22847803,22849851,22851899,22853947,22855995,22858043,22860091,22862139,22864187,22866235,22868283,22870331,22872379,22874427,22876475,22878523,22880571,22882619,22884667,22886715,22888763,22890811,22892859,22894907,22896955,22899003,22901051,22903099,22905147,22907195,22909243,22911291,22913339,22915387,22917435,22919483,22921531,22923579,22925627,22927675,22929723,22931771,22933819,22935867,22937915,22939963,22942011,22944059,22946107,22948155,22950203,22952251,22954299,22956347,22958395,22960449,22962497,22964545,22966593,22968641,22970689,22972737,22974785,22976833,22978881,22980929,22982977,22985025,22987073,22989121,22991169,22993217,22995265,22997313,22999361,23001409,23003457,23005505,23007553,23009601,23011649,23013697,23015745,23017793,23019841,23021889,23023937,23025985,23028033,23030081,23032129,23034177,23036225,23038273,23040321,23042369,23044417,23046465,23048513,23050561,23052609,23054657,23056705,23058753,23060801,23062849,23064897,23066945,23068993,23071041,23073089,23075137,23077185,23079233,23081281,23083329,23085377,23087425,23089473,23091521,23093569,23095617,23097665,23099713,23101761,23103809,23105857,23107905,23109953,23112001,23114049,23116097,23118145,23120193,23122241,23124289,23126337,23128385,23130433,23132481,23134529,23136577,23138625,23140673,23142721,23144769,23146817,23148865,23150913,23152961,23155009,23157057,23159105,23161153,23163201,23165249,23167297,23169345,23171393,23173441,23175489,23177537,23179585,23181633,23183681,23185729,23187777,23189825,23191873,23193921,23195969,23198017,23200065,23202113,23204161,23206209,23208257,23210305,23212353,23214401,23216449,23218497,23220545,23222593,23224641,23226689,23228737,23230785,23232833,23234881,23236929,23238977,23241025,23243073,23245121,23247169,23249217,23251265,23253313,23255361,23257409,23259457,23261505,23263553,23265601,23267649,23269697,23271745,23273793,23275841,23277889,23279937,23281985,23284033,23286081,23288129,23290177,23292225,23294273,23296321,23298369,23300417,23302465,23304513,23306561,23308609,23310657,23312705,23314753,23316801,23318849,23320897,23322945,23324993,23327041,23329089,23331137,23333185,23335233,23337281,23339329,23341377,23343425,23345473,23347521,23349569,23351617,23353665,23355713,23357761,23359809,23361857,23363905,23365953,23368001,23370049,23372097,23374145,23376193,23378241,23380289,23382337,23384385,23386433,23388481,23390529,23392577,23394625,23396673,23398721,23400769,23402817,23404865,23406913,23408961,23411009,23413057,23415105,23417153,23419201,23421249,23423297,23425345,23427393,23429441,23431489,23433537,23435585,23437633,23439681,23441729,23443777,23445825,23447873,23449921,23451969,23454017,23456065,23458113,23460161,23462209,23464257,23466305,23468353,23470401,23472449,23474497,23476545,23478593,23480641,23482689,23484737,23486785,23488833,23490881,23492929,23494977,23497025,23499073,23501121,23503169,23505217,23507274,23509322,23511370,23513418,23515466,23517514,23519562,23521610,23523658,23525706,23527754,23529802,23531850,23533898,23535946,23537994,23540042,23542090,23544138,23546186,23548234,23550282,23552330,23554378,23556426,23558474,23560522,23562570,23564618,23566666,23568714,23570762,23572810,23574858,23576906,23578954,23581002,23583050,23585098,23587146,23589194,23591242,23593290,23595338,23597386,23599434,23601482,23603530,23605578,23607626,23609674,23611722,23613770,23615818,23617866,23619914,23621962,23624010,23626058,23628106,23630154,23632202,23634250,23636298,23638346,23640394,23642442,23644490,23646538,23648586,23650634,23652682,23654730,23656778,23658826,23660874,23662922,23664970,23667018,23669066,23671114,23673162,23675210,23677258,23679306,23681354,23683402,23685450,23687498,23689546,23691594,23693642,23695690,23697738,23699786,23701834,23703882,23705930,23707978,23710026,23712074,23714122,23716170,23718218,23720266,23722314,23724362,23726410,23728458,23730506,23732554,23734602,23736650,23738698,23740746,23742794,23744842,23746890,23748938,23750986,23753034,23755082,23757130,23759178,23761226,23763274,23765322,23767379,23769427,23771475,23773523,23775571,23777619,23779667,23781715,23783763,23785811,23787859,23789907,23791955,23794003,23796051,23798099,23800147,23802195,23804243,23806291,23808339,23810387,23812435,23814483,23816531,23818579,23820627,23822675,23824723,23826771,23828819,23830867,23832915,23834963,23837011,23839059,23841107,23843155,23845203,23847251,23849299,23851347,23853395,23855443,23857491,23859539,23861587,23863635,23865683,23867731,23869779,23871827,23873875,23875923,23877971,23880019,23882067,23884115,23886163,23888211,23890259,23892307,23894355,23896403,23898451,23900499,23902547,23904595,23906643,23908691,23910739,23912787,23914835,23916883,23918931,23920979,23923027,23925075,23927123,23929171,23931219,23933267,23935315,23937363,23939411,23941459,23943507,23945555,23947603,23949651,23951699,23953747,23955795,23957843,23959891,23961939,23963987,23966035,23968083,23970131,23972179,23974227,23976275,23978331,23980379,23982427,23984475,23986523,23988571,23990619,23992667,23994715,23996763,23998811,24000859,24002907,24004955,24007003,24009051,24011099,24013147,24015195,24017243,24019291,24021339,24023387,24025435,24027483,24029531,24031579,24033627,24035675,24037723,24039771,24041819,24043867,24045915,24047963,24050011,24052059,24054107,24056155,24058203,24060251,24062299,24064347,24066395,24068443,24070491,24072539,24074587,24076635,24078683,24080731,24082779,24084827,24086875,24088923,24090971,24093019,24095067,24097115,24099163,24101211,24103259,24105315,24107363,24109411,24111459,24113507,24115555,24117603,24119651,24121699,24123747,24125795,24127843,24129891,24131939,24133987,24136035,24138083,24140131,24142179,24144227,24146275,24148323,24150371,24152419,24154467,24156515,24158563,24160611,24162659,24164707,24166755,24168803,24170851,24172899,24174947,24176995,24179043,24181091,24183139,24185187,24187235,24189283,24191331,24193379,24195427,24197475,24199523,24201571,24203619,24205667,24207715,24209763,24211811,24213859,24215907,24217955,24220003,24222051,24224099,24226147,24228195,24230243,24232291,24234339,24236387,24238435,24240483,24242531,24244579,24246627,24248675,24250723,24252771,24254819,24256867,24258915,24260963,24263011,24265059,24267107,24269155,24271203,24273251,24275299,24277347,24279395,24281443,24283491,24285539,24287587,24289635,24291683,24293731,24295779,24297827,24299875,24301923,24303971,24306019,24308067,24310115,24312163,24314211,24316259,24318307,24320355,24322403,24324451,24326499,24328547,24330595,24332643,24334691,24336739,24338787,24340835,24342883,24344931,24346979,24349027,24351075,24353123,24355171,24357219,24359267,24361324,24363372,24365420,24367468,24369516,24371564,24373612,24375660,24377708,24379756,24381804,24383852,24385900,24387948,24389996,24392044,24394092,24396140,24398188,24400236,24402284,24404332,24406380,24408428,24410476,24412524,24414572,24416620,24418668,24420716,24422764,24424812,24426860,24428908,24430956,24433004,24435052,24437100,24439148,24441196,24443244,24445292,24447340,24449388,24451436,24453484,24455532,24457580,24459628,24461676,24463724,24465772,24467820,24469868,24471916,24473964,24476012,24478060,24480108,24482156,24484204,24486252,24488300,24490348,24492396,24494444,24496492,24498540,24500588,24502636,24504684,24506732,24508780,24510828,24512876,24514924,24516972,24519020,24521068,24523116,24525164,24527212,24529260,24531308,24533356,24535404,24537452,24539500,24541548,24543596,24545644,24547692,24549740,24551788,24553836,24555884,24557932,24559980,24562028,24564076,24566124,24568172,24570220,24572268,24574316,24576364,24578412,24580460,24582508,24584556,24586604,24588652,24590700,24592748,24594796,24596844,24598892,24600940,24602988,24605036,24607084,24609132,24611180,24613228,24615276,24617324,24619372,24621420,24623468,24625516,24627564,24629612,24631660,24633708,24635756,24637804,24639852,24641900,24643948,24645996,24648044,24650092,24652140,24654188,24656236,24658284,24660332,24662380,24664428,24666476,24668524,24670572,24672620,24674668,24676716,24678773,24680821,24682869,24684917,24686965,24689013,24691061,24693109,24695157,24697205,24699253,24701301,24703349,24705397,24707445,24709493,24711541,24713589,24715637,24717685,24719733,24721781,24723829,24725877,24727925,24729973,24732021,24734069,24736117,24738165,24740213,24742261,24744309,24746357,24748405,24750453,24752501,24754549,24756597,24758645,24760693,24762741,24764789,24766837,24768885,24770933,24772981,24775029,24777077,24779125,24781173,24783221,24785269,24787317,24789365,24791413,24793461,24795509,24797557,24799605,24801653,24803701,24805749,24807797,24809845,24811893,24813941,24815989,24818037,24820085,24822133,24824181,24826229,24828277,24830325,24832373,24834421,24836469,24838517,24840565,24842613,24844661,24846709,24848757,24850805,24852853,24854901,24856949,24858997,24861045,24863093,24865141,24867189,24869237,24871285,24873333,24875381,24877429,24879477,24881525,24883573,24885621,24887669,24889717,24891765,24893813,24895861,24897909,24899957,24902005,24904053,24906101,24908149,24910197,24912245,24914293,24916341,24918389,24920437,24922485,24924533,24926581,24928629,24930677,24932725,24934773,24936821,24938869,24940917,24942965,24945013,24947061,24949109,24951157,24953205,24955253,24957301,24959349,24961397,24963445,24965493,24967541,24969589,24971637,24973685,24975733,24977781,24979829,24981877,24983925,24985973,24988021,24990069,24992117,24994165,24996213,24998261,25000309,25002357,25004405,25006453,25008501,25010549,25012597,25014645,25016693,25018741,25020789,25022837,25024885,25026933,25028981,25031029,25033077,25035125,25037173,25039221,25041269,25043317,25045365,25047413,25049461,25051509,25053557,25055605,25057653,25059701,25061749,25063797,25065845,25067893,25069941,25071989,25074037,25076085,25078133,25080181,25082238,25084286,25086334,25088382,25090430,25092478,25094526,25096574,25098622,25100670,25102718,25104766,25106814,25108862,25110910,25112958,25115006,25117054,25119102,25121150,25123198,25125246,25127294,25129342,25131390,25133438,25135486,25137534,25139582,25141630,25143678,25145726,25147774,25149822,25151870,25153918,25155966,25158014,25160062,25162110,25164158,25166206,25168254,25170302,25172350,25174398,25176446,25178494,25180542,25182590,25184638,25186686,25188734,25190782,25192830,25194878,25196926,25198974,25201022,25203070,25205118,25207166,25209214,25211262,25213310,25215358,25217406,25219454,25221502,25223550,25225598,25227646,25229694,25231742,25233790,25235838,25237886,25239934,25241982,25244030,25246078,25248126,25250174,25252222,25254270,25256318,25258366,25260414,25262462,25264510,25266558,25268606,25270654,25272702,25274750,25276798,25278846,25280894,25282942,25284990,25287038,25289086,25291134,25293182,25295230,25297278,25299326,25301374,25303422,25305470,25307518,25309566,25311614,25313662,25315710,25317758,25319806,25321854,25323902,25325950,25327998,25330046,25332094,25334142,25336190,25338238,25340286,25342334,25344382,25346430,25348478,25350526,25352574,25354622,25356670,25358718,25360766,25362814,25364862,25366910,25368958,25371006,25373054,25375102,25377150,25379198,25381246,25383294,25385342,25387390,25389438,25391486,25393534,25395582,25397630,25399678,25401726,25403774,25405822,25407870,25409918,25411966,25414014,25416062,25418110,25420158,25422206,25424254,25426302,25428350,25430398,25432446,25434494,25436542,25438590,25440638,25442686,25444734,25446782,25448830,25450878,25452926,25454974,25457022,25459070,25461118,25463166,25465214,25467262,25469310,25471358,25473406,25475454,25477502,25479550,25481598,25483646,25485694,25487742,25489790,25491838,25493886,25495934,25497982,25500030,25502078,25504126,25506174,25508222,25510270,25512318,25514366,25516414,25518462,25520510,25522558,25524606,25526654,25528702,25530750,25532798,25534846,25536894,25538942,25540990,25543038,25545086,25547134,25549182,25551230,25553278,25555326,25557374,25559422,25561470,25563518,25565566,25567614,25569662,25571710,25573758,25575806,25577854,25579902,25581950,25583998,25586046,25588094,25590142,25592190,25594238,25596286,25598334,25600382,25602430,25604478,25606526,25608574,25610622,25612670,25614718,25616766,25618814,25620862,25622910,25624958,25627006,25629054,25631102,25633150,25635198,25637246,25639294,25641342,25643390,25645438,25647486,25649534,25651582,25653630,25655678,25657726,25659774,25661822,25663870,25665918,25667966,25670014,25672062,25674110,25676158,25678206,25680254,25682302,25684350,25686398,25688446,25690494,25692542,25694590,25696638,25698686,25700734,25702782,25704830,25706878,25708926,25710974,25713022,25715070,25717118,25719166,25721214,25723262,25725310,25727358,25729406,25731454,25733502,25735550,25737598,25739646,25741694,25743742,25745790,25747838,25749886,25751934,25753982,25756030,25758078,25760126,25762174,25764222,25766270,25768318,25770366,25772414,25774462,25776510,25778558,25780606,25782654,25784702,25786750,25788798,25790846,25792894,25794942,25796990,25799038,25801086,25803134,25805182,25807230,25809278,25811326,25813374,25815422,25817470,25819518,25821566,25823614,25825662,25827710,25829758,25831806,25833854,25835902,25837950,25839998,25842046,25844094,25846142,25848190,25850238,25852286,25854334,25856382,25858430,25860478,25862526,25864574,25866622,25868670,25870718,25872766,25874814,25876862,25878910,25880958,25883006,25885054,25887102,25889150,25891198,25893246,25895294,25897342,25899390,25901438,25903486,25905534,25907582,25909630,25911678,25913726,25915774,25917822,25919870,25921918,25923966,25926014,25928062,25930110,25932158,25934206,25936254,25938302,25940350,25942398,25944446,25946494,25948542,25950590,25952638,25954686,25956734,25958782,25960830,25962878,25964926,25966974,25969022,25971070,25973118,25975166,25977214,25979262,25981310,25983358,25985406,25987454,25989502,25991550,25993598,25995646,25997694,25999742,26001790,26003838,26005886,26007934,26009982,26012030,26014078,26016126,26018174,26020222,26022270,26024318,26026366,26028414,26030462,26032510,26034558,26036606,26038654,26040702,26042750,26044798,26046855,26048903,26050951,26052999,26055047,26057095,26059143,26061191,26063239,26065287,26067335,26069383,26071431,26073479,26075527,26077575,26079623,26081671,26083719,26085767,26087815,26089863,26091911,26093959,26096007,26098063,26100111,26102159,26104207,26106255,26108303,26110351,26112399,26114447,26116495,26118551,26120599,26122647,26124704,26126752,26128800,26130848,26132896,26134944,26136992,26139040,26141088,26143136,26145184,26147232,26149280,26151328,26153376,26155424,26157472,26159520,26161568,26163616,26165664,26167712,26169760,26171808,26173856,26175904,26177952,2618e4,26182048,26184096,26186144,26188192,26190240,26192288,26194336,26196384,26198432,26200480,26202528,26204576,26206624,26208672,26210720,26212768,26214816,26216864,26218912,26220960,26223008,26225056,26227104,26229152,26231200,26233248,26235296,26237344,26239392,26241440,26243488,26245536,26247584,26249632,26251680,26253728,26255776,26257824,26259872,26261920,26263968,26266016,26268064,26270112,26272160,26274208,26276256,26278304,26280352,26282400,26284448,26286496,26288544,26290592,26292640,26294688,26296736,26298784,26300832,26302880,26304928,26306976,26309024,26311072,26313120,26315168,26317216,26319264,26321312,26323360,26325408,26327456,26329504,26331534,26333582,26335630,26337678,26339726,26341774,26343822,26345870,26347918,26349966,26352014,26354062,26356110,26358158,26360206,26362254,26364302,26366350,26368398,26370446,26372494,26374542,26376590,26378638,26380686,26382734,26384782,26386830,26388878,26390926,26392974,26395022,26397070,26399118,26401166,26403214,26405262,26407229,26409277,26411325,26413373,26415421,26417469,26419517,26421565,26423613,26425661,26427709,26429757,26431805,26433862,26435910,26437966,26440014,26442062,26444110,26446158,26448206,26450254,26452302,26454350,26456398,26458446,26460494,26462542,26464590,26466638,26468686,26470734,26472782,26474830,26476878,26478926,26480974,26483022,26485070,26487118,26489166,26491214,26493262,26495310,26497358,26499406,26501454,26503502,26505550,26507598,26509646,26511694,26513742,26515790,26517838,26519886,26521934,26523982,26526030,26528078,26530126,26532174,26534222,26536270,26538318,26540366,26542414,26544462,26546510,26548558,26550606,26552654,26554702,26556750,26558798,26560846,26562894,26564942,26566990,26569038,26571086,26573134,26575182,26577230,26579278,26581326,26583374,26585422,26587470,26589518,26591566,26593614,26595662,26597710,26599758,26601806,26603854,26605902,26607950,26609998,26612046,26614094,26616142,26618190,26620238,26622286,26624334,26626382,26628439,26630487,26632535,26634583,26636631,26638679,26640727,26642775,26644823,26646871,26648919,26650967,26653015,26655063,26657111,26659159,26661207,26663255,26665303,26667351,26669399,26671447,26673495,26675543,26677591,26679639,26681687,26683735,26685783,26687831,26689879,26691927,26693975,26696023,26698071,26700119,26702167,26704215,26706263,26708311,26710359,26712407,26714455,26716503,26718551,26720599,26722647,26724695,26726743,26728791,26730839,26732887,26734935,26736983,26739031,26741079,26743127,26745175,26747223,26749271,26751319,26753367,26755415,26757463,26759511,26761559,26763607,26765655,26767703,26769751,26771799,26773847,26775895,26777948,26779996,26782044,26784092,26786140,26788188,26790236,26792284,26794332,26796380,26798428,26800476,26802524,26804572,26806620,26808668,26810716,26812764,26814812,26816860,26818908,26820956,26823004,26825052,26827100,26829148,26831196,26833244,26835292,26837340,26839388,26841436,26843484,26845532,26847580,26849628,26851676,26853724,26855772,26857820,26859868,26861916,26863964,26866012,26868060,26870108,26872156,26874204,26876252,26878300,26880348,26882396,26884444,26886492,26888540,26890588,26892636,26894684,26896732,26898780,26900828,26902876,26904924,26906972,26909020,26911068,26913116,26915166,26917214,26919262,26921310,26923358,26925406,26927454,26929502,26931550,26933598,26935646,26937694,26939742,26941790,26943838,26945886,26947934,26949982,26952030,26954078,26956126,26958174,26960222,26962270,26964318,26966366,26968414,26970462,26972510,26974558,26976606,26978654,26980702,26982750,26984798,26986846,26988894,26990942,26992990,26995038,26997086,26999134,27001182,27003230,27005278,27007326,27009374,27011422,27013470,27015518,27017566,27019614,27021662,27023710,27025758,27027806,27029854,27031902,27033950,27035998,27038046,27040094,27042142,27044190,27046238,27048286,27050334,27052382,27054430,27056478,27058526,27060574,27062622,27064670,27066718,27068766,27070814,27072862,27074910,27076958,27079006,27081054,27083102,27085150,27087198,27089246,27091294,27093342,27095390,27097438,27099486,27101534,27103582,27105630,27107678,27109726,27111774,27113822,27115870,27117918,27119966,27122014,27124062,27126110,27128158,27130206,27132254,27134302,27136350,27138398,27140446,27142494,27144542,27146590,27148638,27150686,27152734,27154782,27156830,27158878,27160926,27162974,27165022,27167070,27169118,27171166,27173214,27175262,27177310,27179358,27181406,27183454,27185502,27187550,27189598,27191646,27193694,27195742,27197790,27199838,27201886,27203934,27205982,27208030,27210078,27212126,27214174,27216222,27218270,27220318,27222366,27224414,27226462,27228510,27230558,27232606,27234654,27236702,27238750,27240798,27242846,27244894,27246942,27248990,27251038,27253086,27255134,27257182,27259230,27261278,27263326,27265374,27267422,27269470,27271518,27273566,27275563,27277611,27279659,27281707,27283755,27285803,27287851,27289899,27291947,27293995,27296043,27298091,27300139,27302194,27304251,27306307,27308355,27310403,27312451,27314499,27316547,27318595,27320643,27322691,27324739,27326787,27328835,27330883,27332931,27334979,27337027,27339075,27341123,27343171,27345219,27347267,27349315,27351363,27353411,27355459,27357507,27359555,27361603,27363651,27365699,27367747,27369795,27371843,27373891,27375939,27377987,27380035,27382083,27384131,27386179,27388227,27390275,27392323,27394371,27396419,27398467,27400515,27402563,27404611,27406659,27408707,27410755,27412803,27414851,27416899,27418947,27420995,27423043,27425091,27427139,27429187,27431235,27433283,27435331,27437379,27439427,27441475,27443523,27445571,27447619,27449667,27451715,27453763,27455811,27457859,27459907,27461955,27464003,27466051,27468099,27470147,27472195,27474243,27476291,27478339,27480387,27482435,27484483,27486531,27488579,27490627,27492675,27494723,27496771,27498819,27500867,27502915,27504963,27507011,27509059,27511107,27513155,27515203,27517251,27519299,27521347,27523395,27525443,27527491,27529539,27531587,27533635,27535683,27537731,27539779,27541827,27543875,27545923,27547971,27550019,27552067,27554115,27556163,27558211,27560259,27562307,27564355,27566403,27568451,27570499,27572547,27574595,27576643,27578691,27580739,27582787,27584835,27586883,27588931,27590979,27593027,27595075,27597123,27599171,27601219,27603267,27605315,27607363,27609411,27611459,27613507,27615555,27617603,27619651,27621699,27623747,27625795,27627843,27629891,27631939,27633987,27636035,27638083,27640131,27642179,27644227,27646275,27648323,27650371,27652419,27654467,27656515,27658563,27660611,27662659,27664707,27666755,27668803,27670851,27672899,27674947,27676995,27679043,27681091,27683139,27685187,27687235,27689283,27691331,27693379,27695427,27697475,27699523,27701571,27703619,27705667,27707715,27709763,27711811,27713859,27715907,27717955,27720003,27722051,27724099,27726147,27728195,27730243,27732291,27734339,27736387,27738435,27740483,27742531,27744579,27746627,27748675,27750723,27752771,27754819,27756867,27758915,27760963,27763011,27765059,27767107,27769155,27771203,27773251,27775299,27777347,27779395,27781443,27783491,27785539,27787587,27789635,27791683,27793731,27795779,27797827,27799875,27801923,27803971,27806019,27808067,27810115,27812163,27814211,27816259,27818307,27820355,27822403,27824451,27826499,27828547,27830595,27832643,27834691,27836739,27838787,27840835,27842883,27844931,27846979,27849027,27851075,27853123,27855171,27857219,27859267,27861315,27863363,27865411,27867459,27869507,27871555,27873603,27875651,27877699,27879747,27881795,27883843,27885891,27887939,27889987,27892035,27894083,27896131,27898179,27900227,27902275,27904323,27906371,27908419,27910467,27912515,27914563,27916611,27918659,27920707,27922755,27924803,27926851,27928899,27930947,27932995,27935043,27937091,27939139,27941187,27943235,27945283,27947331,27949379,27951427,27953475,27955523,27957571,27959619,27961667,27963715,27965763,27967811,27969859,27971907,27973955,27976003,27978051,27980099,27982147,27984195,27986243,27988291,27990339,27992387,27994435,27996483,27998531,28000579,28002627,28004675,28006723,28008771,28010819,28012867,28014815,28016863,28018911,28020959,28023016,28025064,28027112,28029160,28031208,28033256,28035304,28037352,28039400,28041448,28043502,28045555,28047603,28049651,28051699,28053747,28055795,28057843,28059891,28061939,28063987,28066035,28068083,28070131,28072179,28074227,28076275,28078323,28080371,28082419,28084467,28086515,28088563,28090611,28092659,28094707,28096755,28098803,28100851,28102899,28104947,28106995,28109043,28111091,28113139,28115187,28117235,28119283,28121331,28123379,28125427,28127475,28129523,28131571,28133619,28135667,28137715,28139763,28141811,28143859,28145907,28147955,28150003,28152051,28154099,28156147,28158195,28160243,28162291,28164339,28166387,28168435,28170483,28172531,28174579,28176627,28178675,28180723,28182771,28184819,28186867,28188915,28190963,28193011,28195059,28197107,28199155,28201203,28203251,28205299,28207356,28209404,28211452,28213500,28215548,28217596,28219644,28221692,28223740,28225788,28227836,28229884,28231932,28233980,28236036,28238084,28240132,28242180,28244228,28246276,28248324,28250372,28252420,28254468,28256516,28258564,28260612,28262660,28264708,28266756,28268804,28270852,28272900,28274948,28276996,28279044,28281092,28283140,28285188,28287236,28289284,28291332,28293380,28295428,28297476,28299524,28301572,28303620,28305668,28307716,28309764,28311812,28313860,28315908,28317956,28320004,28322052,28324100,28326148,28328196,28330244,28332292,28334340,28336388,28338436,28340484,28342532,28344580,28346628,28348676,28350724,28352772,28354820,28356868,28358916,28360964,28363012,28365060,28367108,28369156,28371204,28373252,28375300,28377348,28379396,28381444,28383492,28385540,28387588,28389636,28391684,28393732,28395780,28397828,28399876,28401924,28403972,28406020,28408068,28410116,28412164,28414212,28416260,28418308,28420356,28422404,28424452,28426500,28428548,28430596,28432644,28434692,28436740,28438788,28440836,28442884,28444932,28446980,28449028,28451076,28453124,28455172,28457220,28459268,28461316,28463364,28465412,28467460,28469508,28471556,28473604,28475652,28477700,28479748,28481796,28483844,28485892,28487940,28489988,28492036,28494084,28496132,28498180,28500228,28502276,28504324,28506372,28508420,28510468,28512516,28514564,28516612,28518660,28520708,28522756,28524804,28526852,28528900,28530948,28532996,28535044,28537092,28539140,28541196,28543244,28545292,28547340,28549388,28551436,28553484,28555532,28557580,28559628,28561676,28563724,28565772,28567820,28569868,28571916,28573964,28576012,28578060,28580108,28582156,28584204,28586252,28588300,28590348,28592396,28594444,28596492,28598540,28600588,28602636,28604684,28606732,28608780,28610828,28612876,28614924,28616972,28619020,28621068,28623116,28625164,28627212,28629260,28631308,28633356,28635404,28637452,28639500,28641548,28643596,28645644,28647692,28649740,28651788,28653836,28655884,28657932,28659980,28662028,28664076,28666124,28668172,28670220,28672268,28674316,28676364,28678412,28680460,28682508,28684556,28686604,28688652,28690700,28692748,28694796,28696844,28698892,28700940,28702988,28705036,28707084,28709132,28711180,28713228,28715276,28717324,28719372,28721420,28723468,28725516,28727564,28729612,28731660,28733708,28735756,28737804,28739852,28741900,28743948,28745996,28748044,28750092,28752140,28754188,28756236,28758284,28760332,28762380,28764428,28766476,28768524,28770572,28772620,28774668,28776716,28778764,28780812,28782860,28784908,28786956,28789004,28791052,28793100,28795148,28797196,28799244,28801292,28803340,28805388,28807436,28809484,28811532,28813580,28815628,28817676,28819724,28821772,28823820,28825868,28827916,28829964,28832012,28834060,28836108,28838156,28840204,28842252,28844300,28846348,28848396,28850444,28852492,28854540,28856588,28858636,28860684,28862732,28864780,28866828,28868876,28870924,28872972,28875020,28877068,28879116,28881164,28883212,28885260,28887308,28889356,28891404,28893452,28895500,28897548,28899596,28901644,28903692,28905740,28907788,28909836,28911884,28913932,28915980,28918028,28920076,28922124,28924172,28926198,28928204,28930252,28932300,28934348,28936396,28938444,28940492,28942540,28944588,28946636,28948684,28950732,28952774,28954822,28956858,28958906,28960954,28963002,28965050,28967098,28969146,28971194,28973242,28975290,28977338,28979386,28981434,28983482,28985530,28987578,28989626,28991674,28993722,28995770,28997818,28999866,29001914,29003962,29006010,29008058,29010106,29012154,29014202,29016250,29018298,29020346,29022394,29024442,29026490,29028538,29030586,29032634,29034682,29036730,29038778,29040826,29042874,29044922,29046970,29049018,29051066,29053114,29055162,29057210,29059258,29061306,29063354,29065402,29067450,29069498,29071546,29073594,29075642,29077690,29079738,29081786,29083834,29085882,29087930,29089978,29092026,29094074,29096122,29098170,29100218,29102266,29104314,29106362,29108410,29110458,29112506,29114554,29116602,29118650,29120698,29122746,29124794,29126842,29128890,29130938,29132986,29135034,29137082,29139130,29141178,29143226,29145274,29147322,29149370,29151418,29153466,29155514,29157562,29159610,29161658,29163706,29165754,29167802,29169850,29171898,29173946,29175994,29178042,29180090,29182138,29184186,29186234,29188282,29190330,29192378,29194426,29196474,29198522,29200570,29202618,29204666,29206714,29208762,29210810,29212858,29214906,29216954,29219002,29221050,29223098,29225146,29227194,29229242,29231290,29233338,29235386,29237434,29239482,29241530,29243578,29245626,29247674,29249722,29251770,29253818,29255866,29257914,29259962,29262010,29264058,29266106,29268154,29270202,29272250,29274298,29276346,29278394,29280442,29282490,29284538,29286586,29288634,29290682,29292730,29294778,29296826,29298874,29300922,29302970,29305018,29307066,29309114,29311162,29313210,29315258,29317306,29319354,29321402,29323450,29325498,29327546,29329594,29331642,29333690,29335738,29337786,29339834,29341882,29343930,29345978,29348026,29350074,29352122,29354170,29356218,29358266,29360314,29362362,29364410,29366458,29368506,29370554,29372602,29374650,29376698,29378746,29380794,29382842,29384890,29386938,29388986,29391034,29393082,29395130,29397178,29399226,29401274,29403322,29405370,29407418,29409466,29411514,29413562,29415610,29417658,29419706,29421754,29423802,29425850,29427898,29429946,29431994,29434042,29436090,29438138,29440186,29442234,29444282,29446330,29448378,29450426,29452474,29454522,29456570,29458618,29460666,29462714,29464762,29466810,29468858,29470906,29472954,29475002,29477050,29479098,29481146,29483194,29485242,29487290,29489338,29491386,29493434,29495482,29497530,29499578,29501626,29503674,29505722,29507770,29509818,29511866,29513914,29515962,29518010,29520058,29522106,29524154,29526202,29528250,29530298,29532346,29534394,29536442,29538490,29540538,29542586,29544634,29546682,29548730,29550778,29552826,29554874,29556922,29558970,29561018,29563066,29565114,29567162,29569210,29571258,29573306,29575354,29577402,29579450,29581498,29583546,29585594,29587642,29589690,29591738,29593786,29595834,29597882,29599930,29601978,29604026,29606074,29608122,29610170,29612218,29614266,29616314,29618362,29620410,29622458,29624506,29626554,29628602,29630650,29632698,29634746,29636794,29638842,29640890,29642938,29644986,29647034,29649082,29651130,29653178,29655226,29657274,29659322,29661370,29663418,29665466,29667514,29669562,29671610,29673658,29675706,29677754,29679802,29681850,29683898,29685946,29687994,29690042,29692090,29694138,29696186,29698234,29700282,29702330,29704378,29706426,29708474,29710522,29712570,29714618,29716666,29718714,29720762,29722810,29724858,29726906,29728954,29731002,29733050,29735098,29737146,29739194,29741242,29743290,29745338,29747386,29749434,29751482,29753530,29755578,29757626,29759674,29761722,29763779,29765827,29767875,29769923,29771971,29774019,29776067,29778115,29780163,29782211,29784259,29786307,29788355,29790403,29792366,29794414,29796462,29798510,29800558,29802606,29804654,29806702,29808750,29810798,29812846,29814894,29816949,29819005,29821052,29823099,29825147,29827195,29829243,29831291,29833339,29835387,29837435,29839483,29841531,29843579,29845627,29847675,29849723,29851771,29853819,29855867,29857915,29859963,29862011,29864059,29866107,29868155,29870203,29872251,29874299,29876347,29878395,29880443,29882491,29884539,29886587,29888635,29890683,29892731,29894779,29896827,29898875,29900923,29902971,29905019,29907067,29909115,29911163,29913211,29915259,29917307,29919355,29921403,29923451,29925499,29927547,29929595,29931643,29933691,29935739,29937787,29939835,29941883,29943931,29945979,29948027,29950075,29952123,29954171,29956219,29958267,29960315,29962363,29964411,29966459,29968507,29970555,29972603,29974651,29976699,29978747,29980795,29982843,29984891,29986939,29988987,29991035,29993083,29995131,29997179,29999227,30001275,30003323,30005371,30007419,30009467,30011522,30013570,30015618,30017666,30019714,30021762,30023810,30025858,30027906,30029954,30032002,30034050,30036098,30038146,30040194,30042242,30044290,30046338,30048386,30050434,30052482,30054530,30056578,30058626,30060674,30062722,30064770,30066818,30068866,30070914,30072962,30075010,30077058,30079106,30081154,30083202,30085250,30087298,30089346,30091394,30093442,30095490,30097538,30099586,30101634,30103682,30105730,30107778,30109826,30111874,30113922,30115970,30118018,30120066,30122114,30124162,30126210,30128258,30130306,30132354,30134402,30136450,30138498,30140546,30142594,30144642,30146690,30148738,30150786,30152834,30154882,30156930,30158978,30161026,30163074,30165122,30167170,30169218,30171266,30173314,30175362,30177410,30179458,30181506,30183554,30185602,30187650,30189698,30191746,30193794,30195842,30197890,30199938,30201986,30204034,30206082,30208130,30210178,30212226,30214274,30216322,30218370,30220418,30222466,30224514,30226562,30228610,30230658,30232706,30234754,30236802,30238850,30240898,30242946,30244994,30247042,30249090,30251138,30253186,30255234,30257282,30259330,30261378,30263426,30265474,30267522,30269570,30271618,30273666,30275714,30277762,30279810,30281858,30283906,30285954,30288002,30290050,30292098,30294146,30296194,30298242,30300290,30302338,30304386,30306434,30308482,30310530,30312578,30314626,30316674,30318722,30320770,30322818,30324866,30326914,30328962,30331010,30333058,30335106,30337154,30339202,30341250,30343298,30345346,30347394,30349442,30351490,30353538,30355594,30357642,30359690,30361738,30363786,30365834,30367882,30369930,30371978,30374026,30376074,30378122,30380170,30382218,30384266,30386314,30388362,30390410,30392458,30394506,30396554,30398602,30400650,30402698,30404746,30406794,30408842,30410890,30412938,30414986,30417034,30419082,30421130,30423178,30425226,30427274,30429322,30431370,30433418,30435466,30437514,30439562,30441610,30443658,30445706,30447754,30449802,30451850,30453898,30455946,30457994,30460042,30462090,30464138,30466186,30468234,30470282,30472330,30474378,30476426,30478474,30480522,30482570,30484618,30486666,30488714,30490762,30492810,30494858,30496906,30498954,30501002,30503050,30505098,30507146,30509194,30511242,30513290,30515338,30517386,30519434,30521482,30523530,30525578,30527626,30529674,30531722,30533770,30535818,30537866,30539914,30541962,30544010,30546058,30548106,30550154,30552202,30554250,30556298,30558346,30560394,30562442,30564490,30566538,30568586,30570634,30572682,30574730,30576778,30578826,30580874,30582922,30584970,30587018,30589066,30591114,30593162,30595210,30597258,30599306,30601354,30603402,30605457,30607505,30609553,30611601,30613649,30615697,30617745,30619793,30621841,30623889,30625937,30627985,30630033,30632081,30634129,30636177,30638225,30640273,30642321,30644369,30646352,30648400,30650448,30652496,30654544,30656592,30658640,30660688,30662736,30664784,30666832,30668880,30670928,30672974,30675030,30677078,30679126,30681174,30683222,30685270,30687318,30689366,30691414,30693462,30695510,30697558,30699606,30701654,30703702,30705750,30707798,30709846,30711894,30713942,30715990,30718038,30720086,30722134,30724182,30726230,30728278,30730326,30732374,30734422,30736470,30738518,30740566,30742614,30744662,30746710,30748758,30750806,30752854,30754902,30756950,30758998,30761046,30763094,30765142,30767190,30769238,30771286,30773334,30775382,30777430,30779478,30781526,30783574,30785622,30787670,30789718,30791766,30793814,30795862,30797910,30799958,30802006,30804054,30806102,30808150,30810198,30812246,30814294,30816342,30818390,30820438,30822486,30824534,30826582,30828630,30830678,30832726,30834774,30836822,30838870,30840918,30842966,30845014,30847062,30849110,30851158,30853206,30855254,30857302,30859350,30861398,30863446,30865494,30867542,30869590,30871638,30873686,30875734,30877782,30879830,30881878,30883926,30885974,30888022,30890070,30892118,30894166,30896214,30898262,30900310,30902358,30904406,30906454,30908502,30910550,30912598,30914646,30916694,30918742,30920790,30922838,30924886,30926934,30928982,30931030,30933078,30935126,30937174,30939222,30941270,30943318,30945366,30947414,30949462,30951510,30953558,30955606,30957654,30959702,30961750,30963798,30965846,30967894,30969942,30971990,30974038,30976086,30978134,30980182,30982230,30984278,30986326,30988374,30990422,30992470,30994518,30996566,30998614,31000662,31002710,31004758,31006806,31008854,31010902,31012950,31014998,31017046,31019094,31021142,31023190,31025238,31027286,31029334,31031382,31033430,31035478,31037526,31039574,31041622,31043670,31045718,31047766,31049814,31051862,31053910,31055958,31058006,31060054,31062102,31064150,31066198,31068246,31070294,31072342,31074390,31076438,31078486,31080534,31082582,31084630,31086678,31088726,31090774,31092822,31094870,31096918,31098966,31101014,31103062,31105110,31107158,31109206,31111254,31113302,31115350,31117398,31119446,31121494,31123542,31125590,31127638,31129686,31131734,31133782,31135830,31137878,31139926,31141974,31144022,31146070,31148118,31150166,31152214,31154262,31156310,31158358,31160406,31162454,31164502,31166550,31168598,31170646,31172694,31174742,31176790,31178838,31180886,31182934,31184982,31187030,31189078,31191126,31193174,31195222,31197270,31199318,31201366,31203414,31205462,31207510,31209558,31211606,31213654,31215702,31217750,31219798,31221846,31223894,31225942,31227990,31230038,31232086,31234134,31236182,31238230,31240278,31242326,31244374,31246422,31248470,31250518,31252566,31254614,31256662,31258710,31260758,31262806,31264854,31266902,31268950,31270998,31273046,31275094,31277142,31279190,31281238,31283286,31285334,31287382,31289430,31291478,31293526,31295574,31297622,31299670,31301718,31303766,31305814,31307862,31309910,31311958,31314006,31316054,31318102,31320150,31322198,31324246,31326294,31328342,31330390,31332438,31334486,31336534,31338582,31340630,31342678,31344726,31346774,31348822,31350870,31352918,31354966,31357014,31359062,31361110,31363158,31365206,31367254,31369302,31371350,31373398,31375446,31377494,31379542,31381590,31383638,31385686,31387734,31389782,31391830,31393878,31395926,31397974,31400022,31402070,31404118,31406166,31408214,31410262,31412310,31414358,31416406,31418454,31420502,31422550,31424598,31426646,31428694,31430742,31432790,31434838,31436886,31438934,31440982,31443030,31445078,31447126,31449174,31451222,31453270,31455318,31457366,31459414,31461462,31463510,31465558,31467606,31469654,31471702,31473750,31475798,31477846,31479894,31481942,31483970,31486018,31488066,31490114,31492162,31494210,31496258,31498306,31500354,31502402,31504450,31506498,31508546,31510594,31512642,31514612,31516660,31518708,31520756,31522804,31524852,31526900,31528900,31530933,31532988,31535036,31537084,31539132,31541180,31543228,31545284,31547332,31549380,31551428,31553476,31555524,31557572,31559620,31561668,31563716,31565764,31567812,31569860,31571908,31573956,31576004,31578052,31580100,31582148,31584196,31586244,31588292,31590340,31592388,31594436,31596484,31598532,31600580,31602628,31604676,31606724,31608772,31610820,31612868,31614916,31616964,31619012,31621060,31623108,31625156,31627204,31629252,31631300,31633348,31635396,31637444,31639492,31641540,31643588,31645636,31647684,31649732,31651780,31653828,31655876,31657924,31659972,31662020,31664068,31666116,31668164,31670212,31672260,31674308,31676356,31678404,31680452,31682500,31684548,31686596,31688644,31690692,31692740,31694788,31696836,31698884,31700932,31702980,31705028,31707076,31709124,31711172,31713220,31715268,31717316,31719364,31721412,31723460,31725508,31727556,31729604,31731652,31733700,31735748,31737796,31739844,31741892,31743940,31745988,31748036,31750084,31752132,31754180,31756228,31758276,31760324,31762372,31764420,31766468,31768516,31770564,31772612,31774660,31776708,31778756,31780804,31782852,31784900,31786948,31788996,31791044,31793092,31795140,31797188,31799236,31801284,31803332,31805380,31807428,31809476,31811524,31813572,31815620,31817668,31819716,31821772,31823820,31825868,31827916,31829964,31832012,31834060,31836108,31838156,31840204,31842252,31844300,31846348,31848396,31850444,31852492,31854540,31856588,31858636,31860684,31862732,31864780,31866828,31868876,31870924,31872972,31875020,31877068,31879116,31881164,31883212,31885260,31887308,31889356,31891404,31893452,31895500,31897548,31899596,31901644,31903692,31905740,31907788,31909836,31911884,31913932,31915980,31918028,31920076,31922124,31924172,31926220,31928268,31930316,31932364,31934412,31936460,31938508,31940556,31942604,31944652,31946700,31948748,31950796,31952844,31954892,31956940,31958988,31961036,31963084,31965132,31967180,31969228,31971276,31973324,31975372,31977420,31979468,31981516,31983564,31985612,31987660,31989708,31991756,31993804,31995852,31997900,31999948,32001996,32004044,32006092,32008140,32010188,32012236,32014284,32016332,32018380,32020428,32022476,32024524,32026572,32028620,32030668,32032716,32034764,32036812,32038860,32040908,32042956,32045004,32047052,32049100,32051149,32053197,32055245,32057293,32059341,32061389,32063437,32065485,32067533,32069581,32071629,32073677,32075725,32077773,32079821,32081869,32083917,32085965,32088013,32090061,32092109,32094157,32096205,32098253,32100301,32102349,32104397,32106445,32108493,32110541,32112589,32114637,32116685,32118733,32120781,32122829,32124877,32126925,32128973,32131021,32133069,32135117,32137165,32139213,32141261,32143309,32145357,32147405,32149453,32151501,32153549,32155597,32157645,32159693,32161741,32163789,32165837,32167885,32169933,32171981,32174029,32176077,32178125,32180173,32182221,32184269,32186317,32188365,32190413,32192461,32194509,32196557,32198605,32200653,32202701,32204749,32206797,32208845,32210893,32212941,32214989,32217037,32219085,32221133,32223181,32225229,32227277,32229325,32231373,32233421,32235469,32237517,32239565,32241613,32243661,32245709,32247757,32249805,32251853,32253901,32255949,32257997,32260045,32262093,32264141,32266189,32268237,32270285,32272333,32274381,32276429,32278477,32280525,32282573,32284621,32286669,32288717,32290765,32292813,32294861,32296909,32298957,32301005,32303053,32305101,32307149,32309197,32311245,32313293,32315341,32317389,32319437,32321485,32323533,32325581,32327629,32329677,32331725,32333773,32335821,32337869,32339917,32341965,32344013,32346061,32348109,32350157,32352205,32354253,32356301,32358349,32360397,32362445,32364493,32366541,32368589,32370637,32372685,32374733,32376781,32378829,32380877,32382925,32384973,32387021,32389069,32391117,32393165,32395213,32397261,32399318,32401366,32403414,32405462,32407510,32409558,32411606,32413654,32415702],"sizesesuccesses":[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0]};compressedData["data"]=byteArray;assert(typeof Module["LZ4"]==="object","LZ4 not present - was your app build with  -s LZ4=1  ?");Module["LZ4"].loadPackage({"metadata":metadata,"compressedData":compressedData},false);Module["removeRunDependency"]("datafile_MaterialIcon.data")}Module["addRunDependency"]("datafile_MaterialIcon.data");if(!Module.preloadResults)Module.preloadResults={};Module.preloadResults[PACKAGE_NAME]={fromCache:false};if(fetched){processPackageData(fetched);fetched=null}else{fetchedCallback=processPackageData}}if(Module["calledRun"]){runWithFS()}else{if(!Module["preRun"])Module["preRun"]=[];Module["preRun"].push(runWithFS)}};loadPackage({"files":[{"filename":"/resources/engine/font/noto-emoji/LICENSE","start":0,"end":4301,"audio":0},{"filename":"/resources/engine/font/noto-emoji/NotoEmoji-Regular.ttf.zstdcmp","start":4301,"end":288027,"audio":0},{"filename":"/resources/engine/font/noto-emoji/NotoColorEmoji.ttf.zstdcmp","start":288027,"end":9108085,"audio":0},{"filename":"/resources/engine/font/materialdesignicons/materialdesignicons-webfont.ttf.zstdcmp","start":9108085,"end":9530447,"audio":0},{"filename":"/resources/engine/font/materialdesignicons/LICENSE","start":9530447,"end":9531439,"audio":0},{"filename":"/resources/engine/font/materialdesignicons/license.md","start":9531439,"end":9536006,"audio":0},{"filename":"/resources/engine/font/fontawesome/LICENSE.txt","start":9536006,"end":9537554,"audio":0},{"filename":"/resources/engine/font/fontawesome/fontawesome-solid.otf.zstdcmp","start":9537554,"end":9767235,"audio":0},{"filename":"/resources/engine/font/fontawesome/fontawesome-brands.otf.zstdcmp","start":9767235,"end":9987967,"audio":0},{"filename":"/resources/engine/font/noto-cjk/NotoSansCJK-Regular.ttc.zstdcmp","start":9987967,"end":22622063,"audio":0},{"filename":"/resources/engine/font/noto-cjk/LICENSE","start":22622063,"end":22626364,"audio":0},{"filename":"/resources/engine/font/noto-cjk/NotoSansJP-Regular.otf.zstdcmp","start":22626364,"end":26381863,"audio":0},{"filename":"/resources/engine/font/mplus/mplus-1p-regular.ttf.zstdcmp","start":26381863,"end":27250731,"audio":0},{"filename":"/resources/engine/font/mplus/mplus-1p-thin.ttf.zstdcmp","start":27250731,"end":27988093,"audio":0},{"filename":"/resources/engine/font/mplus/mplus-1p-bold.ttf.zstdcmp","start":27988093,"end":28905296,"audio":0},{"filename":"/resources/engine/font/mplus/mplus-1p-black.ttf.zstdcmp","start":28905296,"end":29766491,"audio":0},{"filename":"/resources/engine/font/mplus/mplus-1p-light.ttf.zstdcmp","start":29766491,"end":30621850,"audio":0},{"filename":"/resources/engine/font/mplus/mplus-1p-medium.ttf.zstdcmp","start":30621850,"end":31489628,"audio":0},{"filename":"/resources/engine/font/mplus/LICENSE_E","start":31489628,"end":31489975,"audio":0},{"filename":"/resources/engine/font/mplus/mplus-1p-heavy.ttf.zstdcmp","start":31489975,"end":32422012,"audio":0}],"remote_package_size":32419922,"package_uuid":"a7dabfa7-5f68-4833-9011-db043d102def"})})();(function(){Module["onAbort"]=function(e){if(e instanceof WebAssembly.CompileError){const additionalMessage=`WebAssembly compilation failed. \nMaybe some webassembly features are required to execute this program.\nPlease refer https://webassembly.org/roadmap/ to check which webassembly features are supported in your brouser.\n\nOriginal Error: ${e}`;window.alert(additionalMessage)}else{window.alert(e)}}})();if(!Module.expectedDataFileDownloads){Module.expectedDataFileDownloads=0}Module.expectedDataFileDownloads++;(function(){var loadPackage=function(metadata){var PACKAGE_PATH;if(typeof window==="object"){PACKAGE_PATH=window["encodeURIComponent"](window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/")}else if(typeof location!=="undefined"){PACKAGE_PATH=encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/")}else{throw"using preloaded data can only be done on a web page or in a web worker"}var PACKAGE_NAME="Siv3DApp.data";var REMOTE_PACKAGE_BASE="Siv3DApp.data";if(typeof Module["locateFilePackage"]==="function"&&!Module["locateFile"]){Module["locateFile"]=Module["locateFilePackage"];err("warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)")}var REMOTE_PACKAGE_NAME=Module["locateFile"]?Module["locateFile"](REMOTE_PACKAGE_BASE,""):REMOTE_PACKAGE_BASE;var REMOTE_PACKAGE_SIZE=metadata["remote_package_size"];var PACKAGE_UUID=metadata["package_uuid"];function fetchRemotePackage(packageName,packageSize,callback,errback){var xhr=new XMLHttpRequest;xhr.open("GET",packageName,true);xhr.responseType="arraybuffer";xhr.onprogress=function(event){var url=packageName;var size=packageSize;if(event.total)size=event.total;if(event.loaded){if(!xhr.addedTotal){xhr.addedTotal=true;if(!Module.dataFileDownloads)Module.dataFileDownloads={};Module.dataFileDownloads[url]={loaded:event.loaded,total:size}}else{Module.dataFileDownloads[url].loaded=event.loaded}var total=0;var loaded=0;var num=0;for(var download in Module.dataFileDownloads){var data=Module.dataFileDownloads[download];total+=data.total;loaded+=data.loaded;num++}total=Math.ceil(total*Module.expectedDataFileDownloads/num);if(Module["setStatus"])Module["setStatus"]("Downloading data... ("+loaded+"/"+total+")")}else if(!Module.dataFileDownloads){if(Module["setStatus"])Module["setStatus"]("Downloading data...")}};xhr.onerror=function(event){throw new Error("NetworkError for: "+packageName)};xhr.onload=function(event){if(xhr.status==200||xhr.status==304||xhr.status==206||xhr.status==0&&xhr.response){var packageData=xhr.response;callback(packageData)}else{throw new Error(xhr.statusText+" : "+xhr.responseURL)}};xhr.send(null)}function handleError(error){console.error("package error:",error)}var fetchedCallback=null;var fetched=Module["getPreloadedPackage"]?Module["getPreloadedPackage"](REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE):null;if(!fetched)fetchRemotePackage(REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE,function(data){if(fetchedCallback){fetchedCallback(data);fetchedCallback=null}else{fetched=data}},handleError);function runWithFS(){function assert(check,msg){if(!check)throw msg+(new Error).stack}Module["FS_createPath"]("/","resources",true,true);Module["FS_createPath"]("/resources","engine",true,true);Module["FS_createPath"]("/resources/engine","font",true,true);Module["FS_createPath"]("/resources/engine/font","noto-cjk",true,true);Module["FS_createPath"]("/resources/engine/font","noto-emoji",true,true);Module["FS_createPath"]("/resources/engine","shader",true,true);Module["FS_createPath"]("/resources/engine/shader","glsl",true,true);Module["FS_createPath"]("/resources/engine","texture",true,true);Module["FS_createPath"]("/resources/engine/texture","box-shadow",true,true);function processPackageData(arrayBuffer){assert(arrayBuffer,"Loading data file failed.");assert(arrayBuffer instanceof ArrayBuffer,"bad input to processPackageData");var byteArray=new Uint8Array(arrayBuffer);var compressedData={"data":null,"cachedOffset":12896511,"cachedIndexes":[-1,-1],"cachedChunks":[null,null],"offsets":[0,1447,2996,5022,7070,9118,11166,13214,15262,17310,19358,21406,23454,25502,27550,29598,31646,33694,35742,37790,39838,41886,43934,45982,48030,50078,52126,54174,56222,58270,60318,62366,64414,66462,68510,70558,72606,74654,76702,78750,80798,82846,84894,86942,88990,91038,93086,95134,97182,99230,101278,103326,105374,107422,109470,111518,113566,115614,117662,119710,121758,123806,125854,127902,129950,131998,134046,136094,138142,140190,142238,144286,146334,148382,150430,152478,154526,156574,158622,160670,162718,164766,166814,168862,170910,172958,175006,177054,179102,181150,183198,185246,187294,189342,191390,193438,195486,197534,199582,201638,203686,205734,207782,209830,211878,213926,215983,218031,220079,222127,224175,226223,228271,230319,232367,234415,236463,238511,240559,242607,244655,246703,248751,250799,252847,254895,256943,258991,261039,263096,265144,267192,269240,271288,273336,275384,277441,279489,281537,283585,285633,287681,289729,291777,293825,295873,297921,299969,302017,304065,306113,308161,310209,312257,314305,316353,318401,320449,322497,324545,326593,328641,330689,332737,334785,336833,338881,340929,342985,345033,347081,349129,351177,353225,355273,357321,359369,361417,363465,365513,367561,369609,371657,373705,375753,377801,379849,381897,383945,385993,388041,390089,392137,394185,396233,398281,400329,402377,404425,406473,408521,410569,412617,414665,416713,418761,420809,422857,424905,426953,429001,431049,433097,435145,437193,439241,441289,443337,445385,447433,449481,451529,453577,455625,457673,459721,461769,463817,465865,467913,469961,472009,474057,476105,478153,480201,482249,484297,486345,488393,490441,492489,494537,496585,498633,500681,502729,504777,506825,508873,510921,512969,515017,517065,519113,521161,523209,525257,527305,529353,531401,533449,535497,537545,539593,541641,543689,545737,547785,549833,551881,553929,555977,558025,560073,562121,564169,566217,568265,570313,572361,574409,576457,578505,580553,582601,584649,586697,588745,590793,592841,594889,596937,598985,601033,603081,605129,607177,609225,611273,613321,615369,617417,619465,621513,623561,625609,627657,629705,631753,633801,635849,637897,639945,641993,644041,646089,648137,650185,652233,654281,656329,658377,660425,662473,664521,666569,668617,670665,672713,674761,676809,678857,680905,682959,685007,687055,689103,691151,693199,695247,697295,699343,701391,703439,705487,707535,709583,711631,713679,715727,717775,719823,721871,723919,725967,728015,730063,732111,734159,736207,738255,740303,742351,744399,746447,748495,750543,752591,754639,756687,758735,760783,762831,764879,766927,768975,771023,773071,775119,777167,779215,781263,783311,785359,787407,789455,791503,793551,795599,797647,799695,801743,803791,805839,807887,809935,811983,814031,816079,818127,820175,822223,824271,826319,828367,830415,832463,834511,836559,838607,840655,842703,844751,846799,848847,850895,852943,854991,857039,859087,861135,863183,865231,867279,869327,871375,873423,875471,877519,879567,881615,883663,885711,887759,889807,891855,893903,895951,897999,900047,902095,904143,906191,908239,910287,912335,914383,916431,918479,920536,922584,924632,926680,928728,930776,932824,934872,936920,938968,941016,943064,945112,947160,949208,951256,953304,955352,957400,959448,961496,963544,965592,967640,969688,971736,973784,975832,977880,979928,981976,984024,986072,988120,990168,992216,994264,996312,998360,1000408,1002456,1004504,1006552,1008600,1010648,1012696,1014744,1016792,1018840,1020888,1022936,1024984,1027032,1029080,1031128,1033176,1035224,1037272,1039320,1041368,1043416,1045464,1047512,1049560,1051608,1053656,1055704,1057752,1059800,1061848,1063896,1065944,1067992,1070040,1072088,1074136,1076184,1078232,1080280,1082328,1084376,1086424,1088472,1090520,1092568,1094616,1096664,1098712,1100760,1102808,1104856,1106904,1108952,1111e3,1113048,1115096,1117144,1119192,1121240,1123288,1125336,1127384,1129432,1131480,1133528,1135576,1137624,1139672,1141720,1143768,1145816,1147864,1149912,1151960,1154008,1156056,1158104,1160152,1162200,1164248,1166296,1168344,1170392,1172440,1174488,1176536,1178584,1180632,1182680,1184728,1186776,1188824,1190872,1192920,1194968,1197016,1199064,1201112,1203160,1205208,1207256,1209304,1211352,1213400,1215448,1217496,1219544,1221592,1223640,1225688,1227736,1229784,1231832,1233880,1235928,1237976,1240024,1242072,1244120,1246168,1248216,1250264,1252312,1254360,1256408,1258456,1260504,1262552,1264600,1266648,1268696,1270744,1272792,1274840,1276888,1278936,1280984,1283032,1285080,1287128,1289176,1291224,1293272,1295320,1297368,1299416,1301464,1303512,1305560,1307608,1309656,1311704,1313752,1315800,1317848,1319896,1321944,1323992,1326040,1328088,1330136,1332184,1334232,1336280,1338328,1340376,1342424,1344472,1346520,1348568,1350616,1352664,1354712,1356760,1358808,1360856,1362904,1364952,1367e3,1369048,1371096,1373144,1375192,1377240,1379288,1381336,1383384,1385432,1387480,1389528,1391576,1393624,1395672,1397720,1399768,1401816,1403864,1405912,1407960,1410008,1412056,1414104,1416152,1418200,1420248,1422296,1424344,1426392,1428440,1430488,1432536,1434584,1436632,1438680,1440728,1442776,1444824,1446872,1448920,1450968,1453016,1455064,1457112,1459160,1461208,1463256,1465304,1467352,1469400,1471448,1473496,1475544,1477592,1479640,1481688,1483736,1485784,1487832,1489880,1491928,1493976,1496024,1498072,1500120,1502168,1504216,1506264,1508312,1510360,1512408,1514456,1516504,1518552,1520600,1522648,1524696,1526744,1528792,1530840,1532888,1534936,1536984,1539032,1541080,1543128,1545176,1547224,1549272,1551320,1553368,1555416,1557464,1559512,1561560,1563608,1565656,1567704,1569752,1571800,1573848,1575896,1577944,1579992,1582040,1584088,1586136,1588184,1590232,1592280,1594328,1596376,1598424,1600472,1602520,1604568,1606616,1608664,1610712,1612760,1614808,1616856,1618904,1620952,1623esizessuccesses":[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1]};compressedData["data"]=byteArray;assert(typeof Module["LZ4"]==="object","LZ4 not present - was your app build with  -s LZ4=1  ?");Module["LZ4"].loadPackage({"metadata":metadata,"compressedData":compressedData},false);Module["removeRunDependency"]("datafile_Siv3DApp.data")}Module["addRunDependency"]("datafile_Siv3DApp.data");if(!Module.preloadResults)Module.preloadResults={};Module.preloadResults[PACKAGE_NAME]={fromCache:false};if(fetched){processPackageData(fetched);fetched=null}else{fetchedCallback=processPackageData}}if(Module["calledRun"]){runWithFS()}else{if(!Module["preRun"])Module["preRun"]=[];Module["preRun"].push(runWithFS)}};loadPackage({"files":[{"filename":"/resources/engine/font/noto-cjk/LICENSE","start":0,"end":4301,"audio":0},{"filename":"/resources/engine/font/noto-cjk/NotoSansJP-Regular.otf.zstdcmp","start":4301,"end":3759800,"audio":0},{"filename":"/resources/engine/font/noto-emoji/LICENSE","start":3759800,"end":3764101,"audio":0},{"filename":"/resources/engine/font/noto-emoji/NotoEmoji-Regular.ttf.zstdcmp","start":3764101,"end":4047827,"audio":0},{"filename":"/resources/engine/font/noto-emoji/NotoColorEmoji.ttf.zstdcmp","start":4047827,"end":12867885,"audio":0},{"filename":"/resources/engine/shader/glsl/msdffont_shadow.frag","start":12867885,"end":12869456,"audio":0},{"filename":"/resources/engine/shader/glsl/forward3d.vert","start":12869456,"end":12870370,"audio":0},{"filename":"/resources/engine/shader/glsl/forward3d.frag","start":12870370,"end":12872564,"audio":0},{"filename":"/resources/engine/shader/glsl/sdffont.frag","start":12872564,"end":12873398,"audio":0},{"filename":"/resources/engine/shader/glsl/bitmapfont.frag","start":12873398,"end":12874187,"audio":0},{"filename":"/resources/engine/shader/glsl/msdfprint.frag","start":12874187,"end":12875555,"audio":0},{"filename":"/resources/engine/shader/glsl/msdffont.frag","start":12875555,"end":12876672,"audio":0},{"filename":"/resources/engine/shader/glsl/sprite.vert","start":12876672,"end":12877574,"audio":0},{"filename":"/resources/engine/shader/glsl/fullscreen_triangle.vert","start":12877574,"end":12878103,"audio":0},{"filename":"/resources/engine/shader/glsl/square_dot.frag","start":12878103,"end":12878918,"audio":0},{"filename":"/resources/engine/shader/glsl/msdffont_outline.frag","start":12878918,"end":12880298,"audio":0},{"filename":"/resources/engine/shader/glsl/copy.frag","start":12880298,"end":12881037,"audio":0},{"filename":"/resources/engine/shader/glsl/line3d.frag","start":12881037,"end":12881525,"audio":0},{"filename":"/resources/engine/shader/glsl/sky.frag","start":12881525,"end":12893236,"audio":0},{"filename":"/resources/engine/shader/glsl/round_dot.frag","start":12893236,"end":12894115,"audio":0},{"filename":"/resources/engine/shader/glsl/fullscreen_triangle.frag","start":12894115,"end":12894641,"audio":0},{"filename":"/resources/engine/shader/glsl/texture.frag","start":12894641,"end":12895387,"audio":0},{"filename":"/resources/engine/shader/glsl/msdffont_outlineshadow.frag","start":12895387,"end":12897285,"audio":0},{"filename":"/resources/engine/shader/glsl/sdffont_shadow.frag","start":12897285,"end":12898588,"audio":0},{"filename":"/resources/engine/shader/glsl/sdffont_outlineshadow.frag","start":12898588,"end":12900206,"audio":0},{"filename":"/resources/engine/shader/glsl/linear_to_screen.frag","start":12900206,"end":12900883,"audio":0},{"filename":"/resources/engine/shader/glsl/gaussian_blur_9.frag","start":12900883,"end":12902162,"audio":0},{"filename":"/resources/engine/shader/glsl/line3d.vert","start":12902162,"end":12902977,"audio":0},{"filename":"/resources/engine/shader/glsl/sdffont_outline.frag","start":12902977,"end":12904083,"audio":0},{"filename":"/resources/engine/shader/glsl/apply_srgb_curve.frag","start":12904083,"end":12906595,"audio":0},{"filename":"/resources/engine/shader/glsl/shape.frag","start":12906595,"end":12907227,"audio":0},{"filename":"/resources/engine/texture/box-shadow/16.png","start":12907227,"end":12907490,"audio":0},{"filename":"/resources/engine/texture/box-shadow/8.png","start":12907490,"end":12907630,"audio":0},{"filename":"/resources/engine/texture/box-shadow/256.png","start":12907630,"end":12913269,"audio":0},{"filename":"/resources/engine/texture/box-shadow/128.png","start":12913269,"end":12915824,"audio":0},{"filename":"/resources/engine/texture/box-shadow/32.png","start":12915824,"end":12916441,"audio":0},{"filename":"/resources/engine/texture/box-shadow/64.png","start":12916441,"end":12917810,"audio":0}],"remote_package_size":12900607,"package_uuid":"d4e93751-4816-4ac2-bdbb-631f5350ac15"})})();var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram="./this.program";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1)}else{scriptDirectory=""}{read_=function(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module["print"]||console.log.bind(console);var err=Module["printErr"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"];if(Module["quit"])quit_=Module["quit"];var STACK_ALIGN=16;function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;return Math.ceil(size/factor)*factor}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var getTempRet0=function(){return tempRet0};var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];var noExitRuntime=Module["noExitRuntime"]||true;if(typeof WebAssembly!=="object"){abort("no native wasm support detected")}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for getValue: "+type)}return null}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}var ALLOC_NORMAL=0;var ALLOC_STACK=1;function allocate(slab,allocator){var ret;if(allocator==ALLOC_STACK){ret=stackAlloc(slab.length)}else{ret=_malloc(slab.length)}if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str="";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function allocateUTF8OnStack(str){var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8Array(str,HEAP8,ret,size);return ret}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module["HEAP8"]=HEAP8=new Int8Array(buf);Module["HEAP16"]=HEAP16=new Int16Array(buf);Module["HEAP32"]=HEAP32=new Int32Array(buf);Module["HEAPU8"]=HEAPU8=new Uint8Array(buf);Module["HEAPU16"]=HEAPU16=new Uint16Array(buf);Module["HEAPU32"]=HEAPU32=new Uint32Array(buf);Module["HEAPF32"]=HEAPF32=new Float32Array(buf);Module["HEAPF64"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module["INITIAL_MEMORY"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module["noFSInit"]&&!FS.init.initialized)FS.init();TTY.init();callRuntimeCallbacks(__ATINIT__)}function preMain(){FS.ignorePermissions=false;callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}what+="";err(what);ABORT=true;EXITSTATUS=1;what="abort("+what+"). Build with -s ASSERTIONS=1 for more info.";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile="MaterialIcon.wasm";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw"both async and sync fetching of the wasm failed"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()}).catch(function(){return getBinary(wasmBinaryFile)})}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={"a":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;exports=Asyncify.instrumentWasmExports(exports);Module["asm"]=exports;wasmMemory=Module["asm"]["Xi"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module["asm"]["Zi"];addOnInit(Module["asm"]["Yi"]);removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");function receiveInstantiationResult(result){receiveInstance(result["instance"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){var result=WebAssembly.instantiate(binary,info);return result}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==="function"&&!isDataURI(wasmBinaryFile)&&typeof fetch==="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module["instantiateWasm"]){try{var exports=Module["instantiateWasm"](info,receiveInstance);exports=Asyncify.instrumentWasmExports(exports);return exports}catch(e){err("Module.instantiateWasm callback failed with error: "+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var ASM_CONSTS={1916208:function($0,$1,$2){var w=$0;var h=$1;var pixels=$2;if(!Module["SDL2"])Module["SDL2"]={};var SDL2=Module["SDL2"];if(SDL2.ctxCanvas!==Module["canvas"]){SDL2.ctx=Module["createContext"](Module["canvas"],false,true);SDL2.ctxCanvas=Module["canvas"]}if(SDL2.w!==w||SDL2.h!==h||SDL2.imageCtx!==SDL2.ctx){SDL2.image=SDL2.ctx.createImageData(w,h);SDL2.w=w;SDL2.h=h;SDL2.imageCtx=SDL2.ctx}var data=SDL2.image.data;var src=pixels>>2;var dst=0;var num;if(typeof CanvasPixelArray!=="undefined"&&data instanceof CanvasPixelArray){num=data.length;while(dst<num){var val=HEAP32[src];data[dst]=val&255;data[dst+1]=val>>8&255;data[dst+2]=val>>16&255;data[dst+3]=255;src++;dst+=4}}else{if(SDL2.data32Data!==data){SDL2.data32=new Int32Array(data.buffer);SDL2.data8=new Uint8Array(data.buffer)}var data32=SDL2.data32;num=data32.length;data32.set(HEAP32.subarray(src,src+num));var data8=SDL2.data8;var i=3;var j=i+4*num;if(num%8==0){while(i<j){data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0}}else{while(i<j){data8[i]=255;i=i+4|0}}}SDL2.ctx.putImageData(SDL2.image,0,0);return 0},1917663:function($0,$1,$2,$3,$4){var w=$0;var h=$1;var hot_x=$2;var hot_y=$3;var pixels=$4;var canvas=document.createElement("canvas");canvas.width=w;canvas.height=h;var ctx=canvas.getContext("2d");var image=ctx.createImageData(w,h);var data=image.data;var src=pixels>>2;var dst=0;var num;if(typeof CanvasPixelArray!=="undefined"&&data instanceof CanvasPixelArray){num=data.length;while(dst<num){var val=HEAP32[src];data[dst]=val&255;data[dst+1]=val>>8&255;data[dst+2]=val>>16&255;data[dst+3]=val>>24&255;src++;dst+=4}}else{var data32=new Int32Array(data.buffer);num=data32.length;data32.set(HEAP32.subarray(src,src+num))}ctx.putImageData(image,0,0);var url=hot_x===0&&hot_y===0?"url("+canvas.toDataURL()+"), auto":"url("+canvas.toDataURL()+") "+hot_x+" "+hot_y+", auto";var urlBuf=_malloc(url.length+1);stringToUTF8(url,urlBuf,url.length+1);return urlBuf},1918652:function($0){if(Module["canvas"]){Module["canvas"].style["cursor"]=UTF8ToString($0)}return 0},1918745:function(){if(Module["canvas"]){Module["canvas"].style["cursor"]="none"}},1918814:function(){return screen.width},1918839:function(){return screen.height},1918865:function(){return window.innerWidth},1918895:function(){return window.innerHeight},1918926:function($0){if(typeof setWindowTitle!=="undefined"){setWindowTitle(UTF8ToString($0))}return 0},1919021:function(){if(typeof AudioContext!=="undefined"){return 1}else if(typeof webkitAudioContext!=="undefined"){return 1}return 0},1919158:function(){if(typeof navigator.mediaDevices!=="undefined"&&typeof navigator.mediaDevices.getUserMedia!=="undefined"){return 1}else if(typeof navigator.webkitGetUserMedia!=="undefined"){return 1}return 0},1919382:function($0){if(typeof Module["SDL2"]==="undefined"){Module["SDL2"]={}}var SDL2=Module["SDL2"];if(!$0){SDL2.audio={}}else{SDL2.capture={}}if(!SDL2.audioContext){if(typeof AudioContext!=="undefined"){SDL2.audioContext=new AudioContext}else if(typeof webkitAudioContext!=="undefined"){SDL2.audioContext=new webkitAudioContext}if(SDL2.audioContext){autoResumeAudioContext(SDL2.audioContext)}}return SDL2.audioContext===undefined?-1:0},1919875:function(){var SDL2=Module["SDL2"];return SDL2.audioContext.sampleRate},1919943:function($0,$1,$2,$3){var SDL2=Module["SDL2"];var have_microphone=function(stream){if(SDL2.capture.silenceTimer!==undefined){clearTimeout(SDL2.capture.silenceTimer);SDL2.capture.silenceTimer=undefined}SDL2.capture.mediaStreamNode=SDL2.audioContext.createMediaStreamSource(stream);SDL2.capture.scriptProcessorNode=SDL2.audioContext.createScriptProcessor($1,$0,1);SDL2.capture.scriptProcessorNode.onaudioprocess=function(audioProcessingEvent){if(SDL2===undefined||SDL2.capture===undefined){return}audioProcessingEvent.outputBuffer.getChannelData(0).fill(0);SDL2.capture.currentCaptureBuffer=audioProcessingEvent.inputBuffer;dynCall("vi",$2,[$3])};SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode);SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination);SDL2.capture.stream=stream};var no_microphone=function(error){};SDL2.capture.silenceBuffer=SDL2.audioContext.createBuffer($0,$1,SDL2.audioContext.sampleRate);SDL2.capture.silenceBuffer.getChannelData(0).fill(0);var silence_callback=function(){SDL2.capture.currentCaptureBuffer=SDL2.capture.silenceBuffer;dynCall("vi",$2,[$3])};SDL2.capture.silenceTimer=setTimeout(silence_callback,$1/SDL2.audioContext.sampleRate*1e3);if(navigator.mediaDevices!==undefined&&navigator.mediaDevices.getUserMedia!==undefined){navigator.mediaDevices.getUserMedia({audio:true,video:false}).then(have_microphone).catch(no_microphone)}else if(navigator.webkitGetUserMedia!==undefined){navigator.webkitGetUserMedia({audio:true,video:false},have_microphone,no_microphone)}},1921595:function($0,$1,$2,$3){var SDL2=Module["SDL2"];SDL2.audio.scriptProcessorNode=SDL2.audioContext["createScriptProcessor"]($1,0,$0);SDL2.audio.scriptProcessorNode["onaudioprocess"]=function(e){if(SDL2===undefined||SDL2.audio===undefined){return}SDL2.audio.currentOutputBuffer=e["outputBuffer"];dynCall("vi",$2,[$3])};SDL2.audio.scriptProcessorNode["connect"](SDL2.audioContext["destination"])},1922005:function($0,$1){var SDL2=Module["SDL2"];var numChannels=SDL2.capture.currentCaptureBuffer.numberOfChannels;for(var c=0;c<numChannels;++c){var channelData=SDL2.capture.currentCaptureBuffer.getChannelData(c);if(channelData.length!=$1){throw"Web Audio capture buffer length mismatch! Destination size: "+channelData.length+" samples vs expected "+$1+" samples!"}if(numChannels==1){for(var j=0;j<$1;++j){setValue($0+j*4,channelData[j],"float")}}else{for(var j=0;j<$1;++j){setValue($0+(j*numChannels+c)*4,channelData[j],"float")}}}},1922610:function($0,$1){var SDL2=Module["SDL2"];var numChannels=SDL2.audio.currentOutputBuffer["numberOfChannels"];for(var c=0;c<numChannels;++c){var channelData=SDL2.audio.currentOutputBuffer["getChannelData"](c);if(channelData.length!=$1){throw"Web Audio output buffer length mismatch! Destination size: "+channelData.length+" samples vs expected "+$1+" samples!"}for(var j=0;j<$1;++j){channelData[j]=HEAPF32[$0+(j*numChannels+c<<2)>>2]}}},1923090:function($0){var SDL2=Module["SDL2"];if($0){if(SDL2.capture.silenceTimer!==undefined){clearTimeout(SDL2.capture.silenceTimer)}if(SDL2.capture.stream!==undefined){var tracks=SDL2.capture.stream.getAudioTracks();for(var i=0;i<tracks.length;i++){SDL2.capture.stream.removeTrack(tracks[i])}SDL2.capture.stream=undefined}if(SDL2.capture.scriptProcessorNode!==undefined){SDL2.capture.scriptProcessorNode.onaudioprocess=function(audioProcessingEvent){};SDL2.capture.scriptProcessorNode.disconnect();SDL2.capture.scriptProcessorNode=undefined}if(SDL2.capture.mediaStreamNode!==undefined){SDL2.capture.mediaStreamNode.disconnect();SDL2.capture.mediaStreamNode=undefined}if(SDL2.capture.silenceBuffer!==undefined){SDL2.capture.silenceBuffer=undefined}SDL2.capture=undefined}else{if(SDL2.audio.scriptProcessorNode!=undefined){SDL2.audio.scriptProcessorNode.disconnect();SDL2.audio.scriptProcessorNode=undefined}SDL2.audio=undefined}if(SDL2.audioContext!==undefined&&SDL2.audio===undefined&&SDL2.capture===undefined){SDL2.audioContext.close();SDL2.audioContext=undefined}}};function listenOnce(object,event,func){object.addEventListener(event,func,{"once":true})}function autoResumeAudioContext(ctx,elements){if(!elements){elements=[document,document.getElementById("canvas")]}["keydown","mousedown","touchstart"].forEach(function(event){elements.forEach(function(element){if(element){listenOnce(element,event,function(){if(ctx.state==="suspended")ctx.resume()})}})})}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback(Module);continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){(function(){dynCall_v.call(null,func)})()}else{(function(a1){dynCall_vi.apply(null,[func,a1])})(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function dynCallLegacy(sig,ptr,args){var f=Module["dynCall_"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){return dynCallLegacy(sig,ptr,args)}var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}var ExceptionInfoAttrs={DESTRUCTOR_OFFSET:0,REFCOUNT_OFFSET:4,TYPE_OFFSET:8,CAUGHT_OFFSET:12,RETHROWN_OFFSET:13,SIZE:16};function ___cxa_allocate_exception(size){return _malloc(size+ExceptionInfoAttrs.SIZE)+ExceptionInfoAttrs.SIZE}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-ExceptionInfoAttrs.SIZE;this.set_type=function(type){HEAP32[this.ptr+ExceptionInfoAttrs.TYPE_OFFSET>>2]=type};this.get_type=function(){return HEAP32[this.ptr+ExceptionInfoAttrs.TYPE_OFFSET>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+ExceptionInfoAttrs.DESTRUCTOR_OFFSET>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+ExceptionInfoAttrs.DESTRUCTOR_OFFSET>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr+ExceptionInfoAttrs.REFCOUNT_OFFSET>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+ExceptionInfoAttrs.CAUGHT_OFFSET>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+ExceptionInfoAttrs.CAUGHT_OFFSET>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+ExceptionInfoAttrs.RETHROWN_OFFSET>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+ExceptionInfoAttrs.RETHROWN_OFFSET>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr+ExceptionInfoAttrs.REFCOUNT_OFFSET>>2];HEAP32[this.ptr+ExceptionInfoAttrs.REFCOUNT_OFFSET>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr+ExceptionInfoAttrs.REFCOUNT_OFFSET>>2];HEAP32[this.ptr+ExceptionInfoAttrs.REFCOUNT_OFFSET>>2]=prev-1;return prev===1}}function CatchInfo(ptr){this.free=function(){_free(this.ptr);this.ptr=0};this.set_base_ptr=function(basePtr){HEAP32[this.ptr>>2]=basePtr};this.get_base_ptr=function(){return HEAP32[this.ptr>>2]};this.set_adjusted_ptr=function(adjustedPtr){var ptrSize=4;HEAP32[this.ptr+ptrSize>>2]=adjustedPtr};this.get_adjusted_ptr=function(){var ptrSize=4;return HEAP32[this.ptr+ptrSize>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_exception_info().get_type());if(isPointer){return HEAP32[this.get_base_ptr()>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.get_base_ptr()};this.get_exception_info=function(){return new ExceptionInfo(this.get_base_ptr())};if(ptr===undefined){this.ptr=_malloc(8);this.set_adjusted_ptr(0)}else{this.ptr=ptr}}var exceptionCaught=[];function exception_addRef(info){info.add_ref()}var uncaughtExceptionCount=0;function ___cxa_begin_catch(ptr){var catchInfo=new CatchInfo(ptr);var info=catchInfo.get_exception_info();if(!info.get_caught()){info.set_caught(true);uncaughtExceptionCount--}info.set_rethrown(false);exceptionCaught.push(catchInfo);exception_addRef(info);return catchInfo.get_exception_ptr()}var exceptionLast=0;function ___cxa_free_exception(ptr){return _free(new ExceptionInfo(ptr).ptr)}function exception_decRef(info){if(info.release_ref()&&!info.get_rethrown()){var destructor=info.get_destructor();if(destructor){(function(a1){return dynCall_ii.apply(null,[destructor,a1])})(info.excPtr)}___cxa_free_exception(info.excPtr)}}function ___cxa_end_catch(){_setThrew(0);var catchInfo=exceptionCaught.pop();exception_decRef(catchInfo.get_exception_info());catchInfo.free();exceptionLast=0}function ___resumeException(catchInfoPtr){var catchInfo=new CatchInfo(catchInfoPtr);var ptr=catchInfo.get_base_ptr();if(!exceptionLast){exceptionLast=ptr}catchInfo.free();throw ptr}function ___cxa_find_matching_catch_2(){var thrown=exceptionLast;if(!thrown){setTempRet0(0);return 0|0}var info=new ExceptionInfo(thrown);var thrownType=info.get_type();var catchInfo=new CatchInfo;catchInfo.set_base_ptr(thrown);if(!thrownType){setTempRet0(0);return catchInfo.ptr|0}var typeArray=Array.prototype.slice.call(arguments);var stackTop=stackSave();var exceptionThrowBuf=stackAlloc(4);HEAP32[exceptionThrowBuf>>2]=thrown;for(var i=0;i<typeArray.length;i++){var caughtType=typeArray[i];if(caughtType===0||caughtType===thrownType){break}if(___cxa_can_catch(caughtType,thrownType,exceptionThrowBuf)){var adjusted=HEAP32[exceptionThrowBuf>>2];if(thrown!==adjusted){catchInfo.set_adjusted_ptr(adjusted)}setTempRet0(caughtType);return catchInfo.ptr|0}}stackRestore(stackTop);setTempRet0(thrownType);return catchInfo.ptr|0}function ___cxa_find_matching_catch_3(){var thrown=exceptionLast;if(!thrown){setTempRet0(0);return 0|0}var info=new ExceptionInfo(thrown);var thrownType=info.get_type();var catchInfo=new CatchInfo;catchInfo.set_base_ptr(thrown);if(!thrownType){setTempRet0(0);return catchInfo.ptr|0}var typeArray=Array.prototype.slice.call(arguments);var stackTop=stackSave();var exceptionThrowBuf=stackAlloc(4);HEAP32[exceptionThrowBuf>>2]=thrown;for(var i=0;i<typeArray.length;i++){var caughtType=typeArray[i];if(caughtType===0||caughtType===thrownType){break}if(___cxa_can_catch(caughtType,thrownType,exceptionThrowBuf)){var adjusted=HEAP32[exceptionThrowBuf>>2];if(thrown!==adjusted){catchInfo.set_adjusted_ptr(adjusted)}setTempRet0(caughtType);return catchInfo.ptr|0}}stackRestore(stackTop);setTempRet0(thrownType);return catchInfo.ptr|0}function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function ___stack_chk_fail(){err("missing function: __stack_chk_fail");abort(-1)}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value}var PATH={splitPath:function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift("..")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter(function(p){return!!p}),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path==="/")return"/";path=PATH.normalize(path);path=path.replace(/\/$/,"");var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))},join2:function(l,r){return PATH.normalize(l+"/"+r)}};function getRandomDevice(){if(typeof crypto==="object"&&typeof crypto["getRandomValues"]==="function"){var randomBuffer=new Uint8Array(1);return function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else return function(){abort("randomDevice")}}var PATH_FS={resolve:function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(function(p){return!!p}),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."},relative:function(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};function mmapAlloc(size){var alignedSize=alignMemory(size,65536);var ptr=_malloc(alignedSize);while(size<alignedSize)HEAP8[ptr+size++]=0;return ptr}var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,"/",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir:function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,address,length,position,prot,flags){if(address!==0){throw new FS.ErrnoError(28)}if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};var ERRNO_CODES={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};var LZ4={DIR_MODE:16895,FILE_MODE:33279,CHUNK_SIZE:-1,codec:null,init:function(){if(LZ4.codec)return;LZ4.codec=function(){var MiniLZ4=function(){var exports={};exports.uncompress=function(input,output,sIdx,eIdx){sIdx=sIdx||0;eIdx=eIdx||input.length-sIdx;for(var i=sIdx,n=eIdx,j=0;i<n;){var token=input[i++];var literals_length=token>>4;if(literals_length>0){var l=literals_length+240;while(l===255){l=input[i++];literals_length+=l}var end=i+literals_length;while(i<end)output[j++]=input[i++];if(i===n)return j}var offset=input[i++]|input[i++]<<8;if(offset===0)return j;if(offset>j)return-(i-2);var match_length=token&15;var l=match_length+240;while(l===255){l=input[i++];match_length+=l}var pos=j-offset;var end=j+match_length+4;while(j<end)output[j++]=output[pos++]}return j};var maxInputSize=2113929216,minMatch=4,hashLog=16,hashShift=minMatch*8-hashLog,copyLength=8,mfLimit=copyLength+minMatch,skipStrength=6,mlBits=4,mlMask=(1<<mlBits)-1,runBits=8-mlBits,runMask=(1<<runBits)-1,hasher=2654435761;assert(hashShift===16);var hashTable=new Int16Array(1<<16);var empty=new Int16Array(hashTable.length);exports.compressBound=function(isize){return isize>maxInputSize?0:isize+isize/255+16|0};exports.compress=function(src,dst,sIdx,eIdx){hashTable.set(empty);return compressBlock(src,dst,0,sIdx||0,eIdx||dst.length)};function compressBlock(src,dst,pos,sIdx,eIdx){var dpos=sIdx;var dlen=eIdx-sIdx;var anchor=0;if(src.length>=maxInputSize)throw new Error("input too large");if(src.length>mfLimit){var n=exports.compressBound(src.length);if(dlen<n)throw Error("output too small: "+dlen+" < "+n);var step=1,findMatchAttempts=(1<<skipStrength)+3,srcLength=src.length-mfLimit;while(pos+minMatch<srcLength){var sequenceLowBits=src[pos+1]<<8|src[pos];var sequenceHighBits=src[pos+3]<<8|src[pos+2];var hash=Math.imul(sequenceLowBits|sequenceHighBits<<16,hasher)>>>hashShift;var ref=hashTable[hash]-1;hashTable[hash]=pos+1;if(ref<0||pos-ref>>>16>0||((src[ref+3]<<8|src[ref+2])!=sequenceHighBits||(src[ref+1]<<8|src[ref])!=sequenceLowBits)){step=findMatchAttempts++>>skipStrength;pos+=step;continue}findMatchAttempts=(1<<skipStrength)+3;var literals_length=pos-anchor;var offset=pos-ref;pos+=minMatch;ref+=minMatch;var match_length=pos;while(pos<srcLength&&src[pos]==src[ref]){pos++;ref++}match_length=pos-match_length;var token=match_length<mlMask?match_length:mlMask;if(literals_length>=runMask){dst[dpos++]=(runMask<<mlBits)+token;for(var len=literals_length-runMask;len>254;len-=255){dst[dpos++]=255}dst[dpos++]=len}else{dst[dpos++]=(literals_length<<mlBits)+token}for(var i=0;i<literals_length;i++){dst[dpos++]=src[anchor+i]}dst[dpos++]=offset;dst[dpos++]=offset>>8;if(match_length>=mlMask){match_length-=mlMask;while(match_length>=255){match_length-=255;dst[dpos++]=255}dst[dpos++]=match_length}anchor=pos}}if(anchor==0)return 0;literals_length=src.length-anchor;if(literals_length>=runMask){dst[dpos++]=runMask<<mlBits;for(var ln=literals_length-runMask;ln>254;ln-=255){dst[dpos++]=255}dst[dpos++]=ln}else{dst[dpos++]=literals_length<<mlBits}pos=anchor;while(pos<src.length){dst[dpos++]=src[pos++]}return dpos}exports.CHUNK_SIZE=2048;exports.compressPackage=function(data,verify){if(verify){var temp=new Uint8Array(exports.CHUNK_SIZE)}assert(data instanceof ArrayBuffer);data=new Uint8Array(data);console.log("compressing package of size "+data.length);var compressedChunks=[];var successes=[];var offset=0;var total=0;while(offset<data.length){var chunk=data.subarray(offset,offset+exports.CHUNK_SIZE);offset+=exports.CHUNK_SIZE;var bound=exports.compressBound(chunk.length);var compressed=new Uint8Array(bound);var compressedSize=exports.compress(chunk,compressed);if(compressedSize>0){assert(compressedSize<=bound);compressed=compressed.subarray(0,compressedSize);compressedChunks.push(compressed);total+=compressedSize;successes.push(1);if(verify){var back=exports.uncompress(compressed,temp);assert(back===chunk.length,[back,chunk.length]);for(var i=0;i<chunk.length;i++){assert(chunk[i]===temp[i])}}}else{assert(compressedSize===0);compressedChunks.push(chunk);total+=chunk.length;successes.push(0)}}data=null;var compressedData={"data":new Uint8Array(total+exports.CHUNK_SIZE*2),"cachedOffset":total,"cachedIndexes":[-1,-1],"cachedChunks":[null,null],"offsets":[],"sizes":[],"successes":successes};offset=0;for(var i=0;i<compressedChunks.length;i++){compressedData["data"].set(compressedChunks[i],offset);compressedData["offsets"][i]=offset;compressedData["sizes"][i]=compressedChunks[i].length;offset+=compressedChunks[i].length}console.log("compressed package into "+[compressedData["data"].length]);assert(offset===total);return compressedData};assert(exports.CHUNK_SIZE<1<<15);return exports}();return MiniLZ4}();LZ4.CHUNK_SIZE=LZ4.codec.CHUNK_SIZE},loadPackage:function(pack,preloadPlugin){LZ4.init();var compressedData=pack["compressedData"];if(!compressedData)compressedData=LZ4.codec.compressPackage(pack["data"]);assert(compressedData["cachedIndexes"].length===compressedData["cachedChunks"].length);for(var i=0;i<compressedData["cachedIndexes"].length;i++){compressedData["cachedIndexes"][i]=-1;compressedData["cachedChunks"][i]=compressedData["data"].subarray(compressedData["cachedOffset"]+i*LZ4.CHUNK_SIZE,compressedData["cachedOffset"]+(i+1)*LZ4.CHUNK_SIZE);assert(compressedData["cachedChunks"][i].length===LZ4.CHUNK_SIZE)}pack["metadata"].files.forEach(function(file){var dir=PATH.dirname(file.filename);var name=PATH.basename(file.filename);FS.createPath("",dir,true,true);var parent=FS.analyzePath(dir).object;LZ4.createNode(parent,name,LZ4.FILE_MODE,0,{compressedData:compressedData,start:file.start,end:file.end})});if(preloadPlugin){Browser.init();pack["metadata"].files.forEach(function(file){var handled=false;var fullname=file.filename;Module["preloadPlugins"].forEach(function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){var dep=getUniqueRunDependency("fp "+fullname);addRunDependency(dep);var finish=function(){removeRunDependency(dep)};var byteArray=FS.readFile(fullname);plugin["handle"](byteArray,fullname,finish,finish);handled=true}})})}},createNode:function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=LZ4.node_ops;node.stream_ops=LZ4.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(LZ4.FILE_MODE!==LZ4.DIR_MODE);if(mode===LZ4.FILE_MODE){node.size=contents.end-contents.start;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node},node_ops:{getattr:function(node){return{dev:1,ino:node.id,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}},lookup:function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)},mknod:function(parent,name,mode,dev){throw new FS.ErrnoError(ERRNO_CODES.EPERM)},rename:function(oldNode,newDir,newName){throw new FS.ErrnoError(ERRNO_CODES.EPERM)},unlink:function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)},rmdir:function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)},readdir:function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)},symlink:function(parent,newName,oldPath){throw new FS.ErrnoError(ERRNO_CODES.EPERM)},readlink:function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}},stream_ops:{read:function(stream,buffer,offset,length,position){length=Math.min(length,stream.node.size-position);if(length<=0)return 0;var contents=stream.node.contents;var compressedData=contents.compressedData;var written=0;while(written<length){var start=contents.start+position+written;var desired=length-written;var chunkIndex=Math.floor(start/LZ4.CHUNK_SIZE);var compressedStart=compressedData["offsets"][chunkIndex];var compressedSize=compressedData["sizes"][chunkIndex];var currChunk;if(compressedData["successes"][chunkIndex]){var found=compressedData["cachedIndexes"].indexOf(chunkIndex);if(found>=0){currChunk=compressedData["cachedChunks"][found]}else{compressedData["cachedIndexes"].pop();compressedData["cachedIndexes"].unshift(chunkIndex);currChunk=compressedData["cachedChunks"].pop();compressedData["cachedChunks"].unshift(currChunk);if(compressedData["debug"]){console.log("decompressing chunk "+chunkIndex);Module["decompressedChunks"]=(Module["decompressedChunks"]||0)+1}var compressed=compressedData["data"].subarray(compressedStart,compressedStart+compressedSize);var originalSize=LZ4.codec.uncompress(compressed,currChunk);if(chunkIndex<compressedData["successes"].length-1)assert(originalSize===LZ4.CHUNK_SIZE)}}else{currChunk=compressedData["data"].subarray(compressedStart,compressedStart+LZ4.CHUNK_SIZE)}var startInChunk=start%LZ4.CHUNK_SIZE;var endInChunk=Math.min(startInChunk+desired,LZ4.CHUNK_SIZE);buffer.set(currChunk.subarray(startInChunk,endInChunk),offset+written);var currWritten=endInChunk-startInChunk;written+=currWritten}return written},write:function(stream,buffer,offset,length,position){throw new FS.ErrnoError(ERRNO_CODES.EIO)},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}}};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(path,opts){path=PATH_FS.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split("/").filter(function(p){return!!p}),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}},hashName:function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:function(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:function(parent,name,mode,rdev){var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:function(node){FS.hashRemoveNode(node)},isRoot:function(node){return node===node.parent},isMountpoint:function(node){return!!node.mounted},isFile:function(mode){return(mode&61440)===32768},isDir:function(mode){return(mode&61440)===16384},isLink:function(mode){return(mode&61440)===40960},isChrdev:function(mode){return(mode&61440)===8192},isBlkdev:function(mode){return(mode&61440)===24576},isFIFO:function(mode){return(mode&61440)===4096},isSocket:function(mode){return(mode&49152)===49152},flagModes:{"r":0,"r+":2,"w":577,"w+":578,"a":1089,"a+":1090},modeStringToFlags:function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags},flagsToPermissionString:function(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms},nodePermissions:function(node,perms){if(FS.ignorePermissions){return 0}if(perms.includes("r")&&!(node.mode&292)){return 2}else if(perms.includes("w")&&!(node.mode&146)){return 2}else if(perms.includes("x")&&!(node.mode&73)){return 2}return 0},mayLookup:function(dir){var errCode=FS.nodePermissions(dir,"x");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:function(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,"wx")},mayDelete:function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,"wx");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:function(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:function(fd){return FS.streams[fd]},createStream:function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}}}}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:function(fd){FS.streams[fd]=null},chrdev_stream_ops:{open:function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:function(){throw new FS.ErrnoError(70)}},major:function(dev){return dev>>8},minor:function(dev){return dev&255},makedev:function(ma,mi){return ma<<8|mi},registerDevice:function(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:function(dev){return FS.devices[dev]},getMounts:function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:function(parent,name){return parent.node_ops.lookup(parent,name)},mknod:function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:function(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:function(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,"w");if(errCode){throw new FS.ErrnoError(errCode)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){err("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){err("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}},rmdir:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){err("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){err("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}},readdir:function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){err("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){err("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}},readlink:function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:function(path){return FS.stat(path,true)},chmod:function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:function(path,mode){FS.chmod(path,mode,true)},fchmod:function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:function(path,uid,gid){FS.chown(path,uid,gid,true)},fchown:function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:function(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,"w");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(44)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;err("FS.trackingDelegate error on read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){err("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream},close:function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:function(stream){return stream.fd===null},llseek:function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){err("FS.trackingDelegate['onWriteToFile']('"+stream.path+"') threw an exception: "+e.message)}return bytesWritten},allocate:function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:function(stream,address,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,address,length,position,prot,flags)},msync:function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:function(stream){return 0},ioctl:function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:function(path,opts){opts=opts||{};opts.flags=opts.flags||0;opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret},writeFile:function(path,data,opts){opts=opts||{};opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error("Unsupported data type")}FS.close(stream)},cwd:function(){return FS.currentPath},chdir:function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,"x");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories:function(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")},createDefaultDevices:function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(stream,buffer,offset,length,pos){return length}});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device=getRandomDevice();FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){FS.mkdir("/proc");var proc_self=FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount:function(){var node=FS.createNode(proc_self,"fd",16384|511,73);node.node_ops={lookup:function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return stream.path}}};ret.parent=ret;return ret}};return node}},{},"/proc/self/fd")},createStandardStreams:function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin",0);var stdout=FS.open("/dev/stdout",1);var stderr=FS.open("/dev/stderr",1)},ensureErrnoError:function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message="FS error"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"})},staticInit:function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS}},init:function(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()},quit:function(){FS.init.initialized=false;var fflush=Module["_fflush"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},findObject:function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{return null}},analyzePath:function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret},createPath:function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function(stream){stream.seekable=false},close:function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read:function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}},createLazyFile:function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){FS.forceLoadFile(node);var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node},createPreloadedFile:function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module["preloadPlugins"].forEach(function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep)});handled=true}});if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){Browser.asyncLoad(url,function(byteArray){processData(byteArray)},onerror)}else{processData(url)}},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){out("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={mappings:{},DEFAULT_POLLMASK:5,umask:511,calculateAt:function(dirfd,path,allowEmpty){if(path[0]==="/"){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(8);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags,offset){var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}FS.mknod(path,mode,dev);return 0},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len},doAccess:function(path,amode){if(amode&~7){return-28}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;if(!node){return-44}var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-2}return 0},doDup:function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream},get64:function(low,high){return low}};function ___sys_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 12:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0}case 13:case 14:return 0;case 16:case 8:return-28;case 9:setErrNo(28);return-1;default:{return-28}}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_fstat64(fd,buf){try{var stream=SYSCALLS.getStreamFromFD(fd);return SYSCALLS.doStat(FS.stat,stream.path,buf)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_getcwd(buf,size){try{if(size===0)return-28;var cwd=FS.cwd();var cwdLengthInBytes=lengthBytesUTF8(cwd);if(size<cwdLengthInBytes+1)return-68;stringToUTF8(cwd,buf,size);return buf}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_getdents64(fd,dirp,count){try{var stream=SYSCALLS.getStreamFromFD(fd);if(!stream.getdents){stream.getdents=FS.readdir(stream.path)}var struct_size=280;var pos=0;var off=FS.llseek(stream,0,1);var idx=Math.floor(off/struct_size);while(idx<stream.getdents.length&&pos+struct_size<=count){var id;var type;var name=stream.getdents[idx];if(name[0]==="."){id=1;type=4}else{var child=FS.lookupNode(stream.node,name);id=child.id;type=FS.isChrdev(child.mode)?2:FS.isDir(child.mode)?4:FS.isLink(child.mode)?10:8}tempI64=[id>>>0,(tempDouble=id,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[dirp+pos>>2]=tempI64[0],HEAP32[dirp+pos+4>>2]=tempI64[1];tempI64=[(idx+1)*struct_size>>>0,(tempDouble=(idx+1)*struct_size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[dirp+pos+8>>2]=tempI64[0],HEAP32[dirp+pos+12>>2]=tempI64[1];HEAP16[dirp+pos+16>>1]=280;HEAP8[dirp+pos+18>>0]=type;stringToUTF8(name,dirp+pos+19,256);pos+=struct_size;idx+=1}FS.llseek(stream,idx*struct_size,0);return pos}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(op){case 21509:case 21505:{if(!stream.tty)return-59;return 0}case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-59;return 0}case 21519:{if(!stream.tty)return-59;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0}case 21520:{if(!stream.tty)return-59;return-28}case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-59;return 0}case 21524:{if(!stream.tty)return-59;return 0}default:abort("bad ioctl syscall "+op)}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_lstat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.lstat,path,buf)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_mkdir(path,mode){try{path=SYSCALLS.getStr(path);return SYSCALLS.doMkdir(path,mode)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_open(path,flags,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(path);var mode=varargs?SYSCALLS.get():0;var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_readlink(path,buf,bufsize){try{path=SYSCALLS.getStr(path);return SYSCALLS.doReadlink(path,buf,bufsize)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_rmdir(path){try{path=SYSCALLS.getStr(path);FS.rmdir(path);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_stat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.stat,path,buf)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_unlink(path){try{path=SYSCALLS.getStr(path);FS.unlink(path);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _abort(){abort()}var _emscripten_get_now;_emscripten_get_now=function(){return performance.now()};var _emscripten_get_now_is_monotonic=true;function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if((clk_id===1||clk_id===4)&&_emscripten_get_now_is_monotonic){now=_emscripten_get_now()}else{setErrNo(28);return-1}HEAP32[tp>>2]=now/1e3|0;HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0;return 0}function _dlclose(handle){abort("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking")}function _emscripten_set_main_loop_timing(mode,value){Browser.mainLoop.timingMode=mode;Browser.mainLoop.timingValue=value;if(!Browser.mainLoop.func){return 1}if(!Browser.mainLoop.running){Browser.mainLoop.running=true}if(mode==0){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setTimeout(){var timeUntilNextTick=Math.max(0,Browser.mainLoop.tickStartTime+value-_emscripten_get_now())|0;setTimeout(Browser.mainLoop.runner,timeUntilNextTick)};Browser.mainLoop.method="timeout"}else if(mode==1){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_rAF(){Browser.requestAnimationFrame(Browser.mainLoop.runner)};Browser.mainLoop.method="rAF"}else if(mode==2){if(typeof setImmediate==="undefined"){var setImmediates=[];var emscriptenMainLoopMessageId="setimmediate";var Browser_setImmediate_messageHandler=function(event){if(event.data===emscriptenMainLoopMessageId||event.data.target===emscriptenMainLoopMessageId){event.stopPropagation();setImmediates.shift()()}};addEventListener("message",Browser_setImmediate_messageHandler,true);setImmediate=function Browser_emulated_setImmediate(func){setImmediates.push(func);if(ENVIRONMENT_IS_WORKER){if(Module["setImmediates"]===undefined)Module["setImmediates"]=[];Module["setImmediates"].push(func);postMessage({target:emscriptenMainLoopMessageId})}else postMessage(emscriptenMainLoopMessageId,"*")}}Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setImmediate(){setImmediate(Browser.mainLoop.runner)};Browser.mainLoop.method="immediate"}return 0}function _exit(status){exit(status)}function maybeExit(){if(!keepRuntimeAlive()){try{_exit(EXITSTATUS)}catch(e){if(e instanceof ExitStatus){return}throw e}}}function setMainLoop(browserIterationFunc,fps,simulateInfiniteLoop,arg,noSetTiming){assert(!Browser.mainLoop.func,"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.");Browser.mainLoop.func=browserIterationFunc;Browser.mainLoop.arg=arg;var thisMainLoopId=Browser.mainLoop.currentlyRunningMainloop;function checkIsRunning(){if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop){maybeExit();return false}return true}Browser.mainLoop.running=false;Browser.mainLoop.runner=function Browser_mainLoop_runner(){if(ABORT)return;if(Browser.mainLoop.queue.length>0){var start=Date.now();var blocker=Browser.mainLoop.queue.shift();blocker.func(blocker.arg);if(Browser.mainLoop.remainingBlockers){var remaining=Browser.mainLoop.remainingBlockers;var next=remaining%1==0?remaining-1:Math.floor(remaining);if(blocker.counted){Browser.mainLoop.remainingBlockers=next}else{next=next+.5;Browser.mainLoop.remainingBlockers=(8*remaining+next)/9}}console.log('main loop blocker "'+blocker.name+'" took '+(Date.now()-start)+" ms");Browser.mainLoop.updateStatus();if(!checkIsRunning())return;setTimeout(Browser.mainLoop.runner,0);return}if(!checkIsRunning())return;Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0;if(Browser.mainLoop.timingMode==1&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0){Browser.mainLoop.scheduler();return}else if(Browser.mainLoop.timingMode==0){Browser.mainLoop.tickStartTime=_emscripten_get_now()}GL.newRenderingFrameStarted();Browser.mainLoop.runIter(browserIterationFunc);if(!checkIsRunning())return;if(typeof SDL==="object"&&SDL.audio&&SDL.audio.queueNewAudioData)SDL.audio.queueNewAudioData();Browser.mainLoop.scheduler()};if(!noSetTiming){if(fps&&fps>0)_emscripten_set_main_loop_timing(0,1e3/fps);else _emscripten_set_main_loop_timing(1,1);Browser.mainLoop.scheduler()}if(simulateInfiniteLoop){throw"unwind"}}function callUserCallback(func,synchronous){if(ABORT){return}if(synchronous){func();return}try{func()}catch(e){if(e instanceof ExitStatus){return}else if(e!=="unwind"){if(e&&typeof e==="object"&&e.stack)err("exception thrown: "+[e,e.stack]);throw e}}}var Browser={mainLoop:{running:false,scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function(){Browser.mainLoop.scheduler=null;Browser.mainLoop.currentlyRunningMainloop++},resume:function(){Browser.mainLoop.currentlyRunningMainloop++;var timingMode=Browser.mainLoop.timingMode;var timingValue=Browser.mainLoop.timingValue;var func=Browser.mainLoop.func;Browser.mainLoop.func=null;setMainLoop(func,0,false,Browser.mainLoop.arg,true);_emscripten_set_main_loop_timing(timingMode,timingValue);Browser.mainLoop.scheduler()},updateStatus:function(){if(Module["setStatus"]){var message=Module["statusMessage"]||"Please wait...";var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module["setStatus"](message+" ("+(expected-remaining)+"/"+expected+")")}else{Module["setStatus"](message)}}else{Module["setStatus"]("")}}},runIter:function(func){if(ABORT)return;if(Module["preMainLoop"]){var preRet=Module["preMainLoop"]();if(preRet===false){return}}callUserCallback(func);if(Module["postMainLoop"])Module["postMainLoop"]()}},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function(){if(!Module["preloadPlugins"])Module["preloadPlugins"]=[];if(Browser.initted)return;Browser.initted=true;try{new Blob;Browser.hasBlobConstructor=true}catch(e){Browser.hasBlobConstructor=false;console.log("warning: no blob constructor, cannot create blobs with mimetypes")}Browser.BlobBuilder=typeof MozBlobBuilder!="undefined"?MozBlobBuilder:typeof WebKitBlobBuilder!="undefined"?WebKitBlobBuilder:!Browser.hasBlobConstructor?console.log("warning: no BlobBuilder"):null;Browser.URLObject=typeof window!="undefined"?window.URL?window.URL:window.webkitURL:undefined;if(!Module.noImageDecoding&&typeof Browser.URLObject==="undefined"){console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");Module.noImageDecoding=true}var imagePlugin={};imagePlugin["canHandle"]=function imagePlugin_canHandle(name){return!Module.noImageDecoding&&/\.(jpg|jpeg|png|bmp)$/i.test(name)};imagePlugin["handle"]=function imagePlugin_handle(byteArray,name,onload,onerror){var b=null;if(Browser.hasBlobConstructor){try{b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){b=new Blob([new Uint8Array(byteArray).buffer],{type:Browser.getMimetype(name)})}}catch(e){warnOnce("Blob constructor present but fails: "+e+"; falling back to blob builder")}}if(!b){var bb=new Browser.BlobBuilder;bb.append(new Uint8Array(byteArray).buffer);b=bb.getBlob()}var url=Browser.URLObject.createObjectURL(b);var img=new Image;img.onload=function img_onload(){assert(img.complete,"Image "+name+" could not be decoded");var canvas=document.createElement("canvas");canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext("2d");ctx.drawImage(img,0,0);Module["preloadedImages"][name]=canvas;Browser.URLObject.revokeObjectURL(url);if(onload)onload(byteArray)};img.onerror=function img_onerror(event){console.log("Image "+url+" could not be decoded");if(onerror)onerror()};img.src=url};Module["preloadPlugins"].push(imagePlugin);var audioPlugin={};audioPlugin["canHandle"]=function audioPlugin_canHandle(name){return!Module.noAudioDecoding&&name.substr(-4)in{".ogg":1,".wav":1,".mp3":1}};audioPlugin["handle"]=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;Module["preloadedAudios"][name]=audio;if(onload)onload(byteArray)}function fail(){if(done)return;done=true;Module["preloadedAudios"][name]=new Audio;if(onerror)onerror()}if(Browser.hasBlobConstructor){try{var b=new Blob([byteArray],{type:Browser.getMimetype(name)})}catch(e){return fail()}var url=Browser.URLObject.createObjectURL(b);var audio=new Audio;audio.addEventListener("canplaythrough",function(){finish(audio)},false);audio.onerror=function audio_onerror(event){if(done)return;console.log("warning: browser could not fully decode audio "+name+", trying slower base64 approach");function encode64(data){var BASE="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var PAD="=";var ret="";var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&63;leftbits-=6;ret+=BASE[curr]}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD}else if(leftbits==4){ret+=BASE[(leftchar&15)<<2];ret+=PAD}return ret}audio.src="data:audio/x-"+name.substr(-3)+";base64,"+encode64(byteArray);finish(audio)};audio.src=url;Browser.safeSetTimeout(function(){finish(audio)},1e4)}else{return fail()}};Module["preloadPlugins"].push(audioPlugin);function pointerLockChange(){Browser.pointerLock=document["pointerLockElement"]===Module["canvas"]||document["mozPointerLockElement"]===Module["canvas"]||document["webkitPointerLockElement"]===Module["canvas"]||document["msPointerLockElement"]===Module["canvas"]}var canvas=Module["canvas"];if(canvas){canvas.requestPointerLock=canvas["requestPointerLock"]||canvas["mozRequestPointerLock"]||canvas["webkitRequestPointerLock"]||canvas["msRequestPointerLock"]||function(){};canvas.exitPointerLock=document["exitPointerLock"]||document["mozExitPointerLock"]||document["webkitExitPointerLock"]||document["msExitPointerLock"]||function(){};canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener("pointerlockchange",pointerLockChange,false);document.addEventListener("mozpointerlockchange",pointerLockChange,false);document.addEventListener("webkitpointerlockchange",pointerLockChange,false);document.addEventListener("mspointerlockchange",pointerLockChange,false);if(Module["elementPointerLock"]){canvas.addEventListener("click",function(ev){if(!Browser.pointerLock&&Module["canvas"].requestPointerLock){Module["canvas"].requestPointerLock();ev.preventDefault()}},false)}}},createContext:function(canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx&&canvas==Module.canvas)return Module.ctx;var ctx;var contextHandle;if(useWebGL){var contextAttributes={antialias:false,alpha:false,majorVersion:2};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute]}}if(typeof GL!=="undefined"){contextHandle=GL.createContext(canvas,contextAttributes);if(contextHandle){ctx=GL.getContext(contextHandle).GLctx}}}else{ctx=canvas.getContext("2d")}if(!ctx)return null;if(setInModule){if(!useWebGL)assert(typeof GLctx==="undefined","cannot set in module if GLctx is used, but we are a non-GL context that would replace it");Module.ctx=ctx;if(useWebGL)GL.makeContextCurrent(contextHandle);Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach(function(callback){callback()});Browser.init()}return ctx},destroyContext:function(canvas,useWebGL,setInModule){},fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:function(lockPointer,resizeCanvas){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;if(typeof Browser.lockPointer==="undefined")Browser.lockPointer=true;if(typeof Browser.resizeCanvas==="undefined")Browser.resizeCanvas=false;var canvas=Module["canvas"];function fullscreenChange(){Browser.isFullscreen=false;var canvasContainer=canvas.parentNode;if((document["fullscreenElement"]||document["mozFullScreenElement"]||document["msFullscreenElement"]||document["webkitFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvasContainer){canvas.exitFullscreen=Browser.exitFullscreen;if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullscreen=true;if(Browser.resizeCanvas){Browser.setFullscreenCanvasSize()}else{Browser.updateCanvasDimensions(canvas)}}else{canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas){Browser.setWindowedCanvasSize()}else{Browser.updateCanvasDimensions(canvas)}}if(Module["onFullScreen"])Module["onFullScreen"](Browser.isFullscreen);if(Module["onFullscreen"])Module["onFullscreen"](Browser.isFullscreen)}if(!Browser.fullscreenHandlersInstalled){Browser.fullscreenHandlersInstalled=true;document.addEventListener("fullscreenchange",fullscreenChange,false);document.addEventListener("mozfullscreenchange",fullscreenChange,false);document.addEventListener("webkitfullscreenchange",fullscreenChange,false);document.addEventListener("MSFullscreenChange",fullscreenChange,false)}var canvasContainer=document.createElement("div");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);canvasContainer.requestFullscreen=canvasContainer["requestFullscreen"]||canvasContainer["mozRequestFullScreen"]||canvasContainer["msRequestFullscreen"]||(canvasContainer["webkitRequestFullscreen"]?function(){canvasContainer["webkitRequestFullscreen"](Element["ALLOW_KEYBOARD_INPUT"])}:null)||(canvasContainer["webkitRequestFullScreen"]?function(){canvasContainer["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"])}:null);canvasContainer.requestFullscreen()},exitFullscreen:function(){if(!Browser.isFullscreen){return false}var CFS=document["exitFullscreen"]||document["cancelFullScreen"]||document["mozCancelFullScreen"]||document["msExitFullscreen"]||document["webkitCancelFullScreen"]||function(){};CFS.apply(document,[]);return true},nextRAF:0,fakeRequestAnimationFrame:function(func){var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1e3/60}else{while(now+2>=Browser.nextRAF){Browser.nextRAF+=1e3/60}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay)},requestAnimationFrame:function(func){if(typeof requestAnimationFrame==="function"){requestAnimationFrame(func);return}var RAF=Browser.fakeRequestAnimationFrame;RAF(func)},safeRequestAnimationFrame:function(func){return Browser.requestAnimationFrame(function(){callUserCallback(func)})},safeSetTimeout:function(func,timeout){return setTimeout(function(){callUserCallback(func)},timeout)},getMimetype:function(name){return{"jpg":"image/jpeg","jpeg":"image/jpeg","png":"image/png","bmp":"image/bmp","ogg":"audio/ogg","wav":"audio/wav","mp3":"audio/mpeg"}[name.substr(name.lastIndexOf(".")+1)]},getUserMedia:function(func){if(!window.getUserMedia){window.getUserMedia=navigator["getUserMedia"]||navigator["mozGetUserMedia"]}window.getUserMedia(func)},getMovementX:function(event){return event["movementX"]||event["mozMovementX"]||event["webkitMovementX"]||0},getMovementY:function(event){return event["movementY"]||event["mozMovementY"]||event["webkitMovementY"]||0},getMouseWheelDelta:function(event){var delta=0;switch(event.type){case"DOMMouseScroll":delta=event.detail/3;break;case"mousewheel":delta=event.wheelDelta/120;break;case"wheel":delta=event.deltaY;switch(event.deltaMode){case 0:delta/=100;break;case 1:delta/=3;break;case 2:delta*=80;break;default:throw"unrecognized mouse wheel delta mode: "+event.deltaMode}break;default:throw"unrecognized mouse wheel event: "+event.type}return delta},mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function(event){if(Browser.pointerLock){if(event.type!="mousemove"&&"mozMovementX"in event){Browser.mouseMovementX=Browser.mouseMovementY=0}else{Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event)}if(typeof SDL!="undefined"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY}else{Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY}}else{var rect=Module["canvas"].getBoundingClientRect();var cw=Module["canvas"].width;var ch=Module["canvas"].height;var scrollX=typeof window.scrollX!=="undefined"?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!=="undefined"?window.scrollY:window.pageYOffset;if(event.type==="touchstart"||event.type==="touchend"||event.type==="touchmove"){var touch=event.touch;if(touch===undefined){return}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type==="touchstart"){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords}else if(event.type==="touchend"||event.type==="touchmove"){var last=Browser.touches[touch.identifier];if(!last)last=coords;Browser.lastTouches[touch.identifier]=last;Browser.touches[touch.identifier]=coords}return}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y}},asyncLoad:function(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency("al "+url):"";readAsync(url,function(arrayBuffer){assert(arrayBuffer,'Loading data file "'+url+'" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},function(event){if(onerror){onerror()}else{throw'Loading data file "'+url+'" failed.'}});if(dep)addRunDependency(dep)},resizeListeners:[],updateResizeListeners:function(){var canvas=Module["canvas"];Browser.resizeListeners.forEach(function(listener){listener(canvas.width,canvas.height)})},setCanvasSize:function(width,height,noUpdates){var canvas=Module["canvas"];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners()},windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen>>2];flags=flags|8388608;HEAP32[SDL.screen>>2]=flags}Browser.updateCanvasDimensions(Module["canvas"]);Browser.updateResizeListeners()},setWindowedCanvasSize:function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen>>2];flags=flags&~8388608;HEAP32[SDL.screen>>2]=flags}Browser.updateCanvasDimensions(Module["canvas"]);Browser.updateResizeListeners()},updateCanvasDimensions:function(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative}else{wNative=canvas.widthNative;hNative=canvas.heightNative}var w=wNative;var h=hNative;if(Module["forcedAspectRatio"]&&Module["forcedAspectRatio"]>0){if(w/h<Module["forcedAspectRatio"]){w=Math.round(h*Module["forcedAspectRatio"])}else{h=Math.round(w/Module["forcedAspectRatio"])}}if((document["fullscreenElement"]||document["mozFullScreenElement"]||document["msFullscreenElement"]||document["webkitFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvas.parentNode&&typeof screen!="undefined"){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor)}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!="undefined"){canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}else{if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!="undefined"){if(w!=wNative||h!=hNative){canvas.style.setProperty("width",w+"px","important");canvas.style.setProperty("height",h+"px","important")}else{canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}}},wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function(){var handle=Browser.nextWgetRequestHandle;Browser.nextWgetRequestHandle++;return handle}};var EGL={errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,contextAttributes:{alpha:false,depth:false,stencil:false,antialias:false},stringCache:{},setErrorCode:function(code){EGL.errorCode=code},chooseConfig:function(display,attribList,config,config_size,numConfigs){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(attribList){for(;;){var param=HEAP32[attribList>>2];if(param==12321){var alphaSize=HEAP32[attribList+4>>2];EGL.contextAttributes.alpha=alphaSize>0}else if(param==12325){var depthSize=HEAP32[attribList+4>>2];EGL.contextAttributes.depth=depthSize>0}else if(param==12326){var stencilSize=HEAP32[attribList+4>>2];EGL.contextAttributes.stencil=stencilSize>0}else if(param==12337){var samples=HEAP32[attribList+4>>2];EGL.contextAttributes.antialias=samples>0}else if(param==12338){var samples=HEAP32[attribList+4>>2];EGL.contextAttributes.antialias=samples==1}else if(param==12544){var requestedPriority=HEAP32[attribList+4>>2];EGL.contextAttributes.lowLatency=requestedPriority!=12547}else if(param==12344){break}attribList+=8}}if((!config||!config_size)&&!numConfigs){EGL.setErrorCode(12300);return 0}if(numConfigs){HEAP32[numConfigs>>2]=1}if(config&&config_size>0){HEAP32[config>>2]=62002}EGL.setErrorCode(12288);return 1}};function _eglBindAPI(api){if(api==12448){EGL.setErrorCode(12288);return 1}else{EGL.setErrorCode(12300);return 0}}function _eglChooseConfig(display,attrib_list,configs,config_size,numConfigs){return EGL.chooseConfig(display,attrib_list,configs,config_size,numConfigs)}function __webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(ctx){return!!(ctx.dibvbi=ctx.getExtension("WEBGL_draw_instanced_base_vertex_base_instance"))}function __webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(ctx){return!!(ctx.mdibvbi=ctx.getExtension("WEBGL_multi_draw_instanced_base_vertex_base_instance"))}function __webgl_enable_WEBGL_multi_draw(ctx){return!!(ctx.multiDrawWebgl=ctx.getExtension("WEBGL_multi_draw"))}var GL={counter:1,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:[],offscreenCanvases:{},queries:[],samplers:[],transformFeedbacks:[],syncs:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],stringCache:{},stringiCache:{},unpackAlignment:4,recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret},MAX_TEMP_BUFFER_SIZE:2097152,numTempVertexBuffersPerSize:64,log2ceilLookup:function(i){return 32-Math.clz32(i===0?0:i-1)},generateTempBuffers:function(quads,context){var largestIndex=GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);context.tempVertexBufferCounters1=[];context.tempVertexBufferCounters2=[];context.tempVertexBufferCounters1.length=context.tempVertexBufferCounters2.length=largestIndex+1;context.tempVertexBuffers1=[];context.tempVertexBuffers2=[];context.tempVertexBuffers1.length=context.tempVertexBuffers2.length=largestIndex+1;context.tempIndexBuffers=[];context.tempIndexBuffers.length=largestIndex+1;for(var i=0;i<=largestIndex;++i){context.tempIndexBuffers[i]=null;context.tempVertexBufferCounters1[i]=context.tempVertexBufferCounters2[i]=0;var ringbufferLength=GL.numTempVertexBuffersPerSize;context.tempVertexBuffers1[i]=[];context.tempVertexBuffers2[i]=[];var ringbuffer1=context.tempVertexBuffers1[i];var ringbuffer2=context.tempVertexBuffers2[i];ringbuffer1.length=ringbuffer2.length=ringbufferLength;for(var j=0;j<ringbufferLength;++j){ringbuffer1[j]=ringbuffer2[j]=null}}if(quads){context.tempQuadIndexBuffer=GLctx.createBuffer();context.GLctx.bindBuffer(34963,context.tempQuadIndexBuffer);var numIndexes=GL.MAX_TEMP_BUFFER_SIZE>>1;var quadIndexes=new Uint16Array(numIndexes);var i=0,v=0;while(1){quadIndexes[i++]=v;if(i>=numIndexes)break;quadIndexes[i++]=v+1;if(i>=numIndexes)break;quadIndexes[i++]=v+2;if(i>=numIndexes)break;quadIndexes[i++]=v;if(i>=numIndexes)break;quadIndexes[i++]=v+2;if(i>=numIndexes)break;quadIndexes[i++]=v+3;if(i>=numIndexes)break;v+=4}context.GLctx.bufferData(34963,quadIndexes,35044);context.GLctx.bindBuffer(34963,null)}},getTempVertexBuffer:function getTempVertexBuffer(sizeBytes){var idx=GL.log2ceilLookup(sizeBytes);var ringbuffer=GL.currentContext.tempVertexBuffers1[idx];var nextFreeBufferIndex=GL.currentContext.tempVertexBufferCounters1[idx];GL.currentContext.tempVertexBufferCounters1[idx]=GL.currentContext.tempVertexBufferCounters1[idx]+1&GL.numTempVertexBuffersPerSize-1;var vbo=ringbuffer[nextFreeBufferIndex];if(vbo){return vbo}var prevVBO=GLctx.getParameter(34964);ringbuffer[nextFreeBufferIndex]=GLctx.createBuffer();GLctx.bindBuffer(34962,ringbuffer[nextFreeBufferIndex]);GLctx.bufferData(34962,1<<idx,35048);GLctx.bindBuffer(34962,prevVBO);return ringbuffer[nextFreeBufferIndex]},getTempIndexBuffer:function getTempIndexBuffer(sizeBytes){var idx=GL.log2ceilLookup(sizeBytes);var ibo=GL.currentContext.tempIndexBuffers[idx];if(ibo){return ibo}var prevIBO=GLctx.getParameter(34965);GL.currentContext.tempIndexBuffers[idx]=GLctx.createBuffer();GLctx.bindBuffer(34963,GL.currentContext.tempIndexBuffers[idx]);GLctx.bufferData(34963,1<<idx,35048);GLctx.bindBuffer(34963,prevIBO);return GL.currentContext.tempIndexBuffers[idx]},newRenderingFrameStarted:function newRenderingFrameStarted(){if(!GL.currentContext){return}var vb=GL.currentContext.tempVertexBuffers1;GL.currentContext.tempVertexBuffers1=GL.currentContext.tempVertexBuffers2;GL.currentContext.tempVertexBuffers2=vb;vb=GL.currentContext.tempVertexBufferCounters1;GL.currentContext.tempVertexBufferCounters1=GL.currentContext.tempVertexBufferCounters2;GL.currentContext.tempVertexBufferCounters2=vb;var largestIndex=GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);for(var i=0;i<=largestIndex;++i){GL.currentContext.tempVertexBufferCounters1[i]=0}},getSource:function(shader,count,string,length){var source="";for(var i=0;i<count;++i){var len=length?HEAP32[length+i*4>>2]:-1;source+=UTF8ToString(HEAP32[string+i*4>>2],len<0?undefined:len)}return source},calcBufLength:function calcBufLength(size,type,stride,count){if(stride>0){return count*stride}var typeSize=GL.byteSizeByType[type-GL.byteSizeByTypeRoot];return size*typeSize*count},usedTempBuffers:[],preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count){GL.resetBufferBinding=false;for(var i=0;i<GL.currentContext.maxVertexAttribs;++i){var cb=GL.currentContext.clientBuffers[i];if(!cb.clientside||!cb.enabled)continue;GL.resetBufferBinding=true;var size=GL.calcBufLength(cb.size,cb.type,cb.stride,count);var buf=GL.getTempVertexBuffer(size);GLctx.bindBuffer(34962,buf);GLctx.bufferSubData(34962,0,HEAPU8.subarray(cb.ptr,cb.ptr+size));cb.vertexAttribPointerAdaptor.call(GLctx,i,cb.size,cb.type,cb.normalized,cb.stride,0)}},postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings(){if(GL.resetBufferBinding){GLctx.bindBuffer(34962,GL.buffers[GLctx.currentArrayBufferBinding])}},createContext:function(canvas,webGLContextAttributes){if(!canvas.getContextSafariWebGL2Fixed){canvas.getContextSafariWebGL2Fixed=canvas.getContext;canvas.getContext=function(ver,attrs){var gl=canvas.getContextSafariWebGL2Fixed(ver,attrs);return ver=="webgl"==gl instanceof WebGLRenderingContext?gl:null}}var ctx=canvas.getContext("webgl2",webGLContextAttributes);if(!ctx)return 0;var handle=GL.registerContext(ctx,webGLContextAttributes);return handle},registerContext:function(ctx,webGLContextAttributes){var handle=GL.getNewId(GL.contexts);var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes.majorVersion,GLctx:ctx};if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes.enableExtensionsByDefault==="undefined"||webGLContextAttributes.enableExtensionsByDefault){GL.initExtensions(context)}context.maxVertexAttribs=context.GLctx.getParameter(34921);context.clientBuffers=[];for(var i=0;i<context.maxVertexAttribs;i++){context.clientBuffers[i]={enabled:false,clientside:false,size:0,type:0,normalized:0,stride:0,ptr:0,vertexAttribPointerAdaptor:null}}GL.generateTempBuffers(false,context);return handle},makeContextCurrent:function(contextHandle){GL.currentContext=GL.contexts[contextHandle];Module.ctx=GLctx=GL.currentContext&&GL.currentContext.GLctx;return!(contextHandle&&!GLctx)},getContext:function(contextHandle){return GL.contexts[contextHandle]},deleteContext:function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents==="object")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;GL.contexts[contextHandle]=null},initExtensions:function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;__webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);__webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);if(context.version>=2){GLctx.disjointTimerQueryExt=GLctx.getExtension("EXT_disjoint_timer_query_webgl2")}if(context.version<2||!GLctx.disjointTimerQueryExt){GLctx.disjointTimerQueryExt=GLctx.getExtension("EXT_disjoint_timer_query")}__webgl_enable_WEBGL_multi_draw(GLctx);var exts=GLctx.getSupportedExtensions()||[];exts.forEach(function(ext){if(!ext.includes("lose_context")&&!ext.includes("debug")){GLctx.getExtension(ext)}})}};function _eglCreateContext(display,config,hmm,contextAttribs){if(display!=62e3){EGL.setErrorCode(12296);return 0}var glesContextVersion=1;for(;;){var param=HEAP32[contextAttribs>>2];if(param==12440){glesContextVersion=HEAP32[contextAttribs+4>>2]}else if(param==12344){break}else{EGL.setErrorCode(12292);return 0}contextAttribs+=8}if(glesContextVersion<2||glesContextVersion>3){EGL.setErrorCode(12293);return 0}EGL.contextAttributes.majorVersion=glesContextVersion-1;EGL.contextAttributes.minorVersion=0;EGL.context=GL.createContext(Module["canvas"],EGL.contextAttributes);if(EGL.context!=0){EGL.setErrorCode(12288);GL.makeContextCurrent(EGL.context);Module.useWebGL=true;Browser.moduleContextCreatedCallbacks.forEach(function(callback){callback()});GL.makeContextCurrent(null);return 62004}else{EGL.setErrorCode(12297);return 0}}function _eglCreateWindowSurface(display,config,win,attrib_list){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(config!=62002){EGL.setErrorCode(12293);return 0}EGL.setErrorCode(12288);return 62006}function _eglDestroyContext(display,context){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(context!=62004){EGL.setErrorCode(12294);return 0}GL.deleteContext(EGL.context);EGL.setErrorCode(12288);if(EGL.currentContext==context){EGL.currentContext=0}return 1}function _eglDestroySurface(display,surface){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(surface!=62006){EGL.setErrorCode(12301);return 1}if(EGL.currentReadSurface==surface){EGL.currentReadSurface=0}if(EGL.currentDrawSurface==surface){EGL.currentDrawSurface=0}EGL.setErrorCode(12288);return 1}function _eglGetConfigAttrib(display,config,attribute,value){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(config!=62002){EGL.setErrorCode(12293);return 0}if(!value){EGL.setErrorCode(12300);return 0}EGL.setErrorCode(12288);switch(attribute){case 12320:HEAP32[value>>2]=EGL.contextAttributes.alpha?32:24;return 1;case 12321:HEAP32[value>>2]=EGL.contextAttributes.alpha?8:0;return 1;case 12322:HEAP32[value>>2]=8;return 1;case 12323:HEAP32[value>>2]=8;return 1;case 12324:HEAP32[value>>2]=8;return 1;case 12325:HEAP32[value>>2]=EGL.contextAttributes.depth?24:0;return 1;case 12326:HEAP32[value>>2]=EGL.contextAttributes.stencil?8:0;return 1;case 12327:HEAP32[value>>2]=12344;return 1;case 12328:HEAP32[value>>2]=62002;return 1;case 12329:HEAP32[value>>2]=0;return 1;case 12330:HEAP32[value>>2]=4096;return 1;case 12331:HEAP32[value>>2]=16777216;return 1;case 12332:HEAP32[value>>2]=4096;return 1;case 12333:HEAP32[value>>2]=0;return 1;case 12334:HEAP32[value>>2]=0;return 1;case 12335:HEAP32[value>>2]=12344;return 1;case 12337:HEAP32[value>>2]=EGL.contextAttributes.antialias?4:0;return 1;case 12338:HEAP32[value>>2]=EGL.contextAttributes.antialias?1:0;return 1;case 12339:HEAP32[value>>2]=4;return 1;case 12340:HEAP32[value>>2]=12344;return 1;case 12341:case 12342:case 12343:HEAP32[value>>2]=-1;return 1;case 12345:case 12346:HEAP32[value>>2]=0;return 1;case 12347:HEAP32[value>>2]=0;return 1;case 12348:HEAP32[value>>2]=1;return 1;case 12349:case 12350:HEAP32[value>>2]=0;return 1;case 12351:HEAP32[value>>2]=12430;return 1;case 12352:HEAP32[value>>2]=4;return 1;case 12354:HEAP32[value>>2]=0;return 1;default:EGL.setErrorCode(12292);return 0}}function _eglGetDisplay(nativeDisplayType){EGL.setErrorCode(12288);return 62e3}function _eglGetError(){return EGL.errorCode}function _eglInitialize(display,majorVersion,minorVersion){if(display==62e3){if(majorVersion){HEAP32[majorVersion>>2]=1}if(minorVersion){HEAP32[minorVersion>>2]=4}EGL.defaultDisplayInitialized=true;EGL.setErrorCode(12288);return 1}else{EGL.setErrorCode(12296);return 0}}function _eglMakeCurrent(display,draw,read,context){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(context!=0&&context!=62004){EGL.setErrorCode(12294);return 0}if(read!=0&&read!=62006||draw!=0&&draw!=62006){EGL.setErrorCode(12301);return 0}GL.makeContextCurrent(context?EGL.context:null);EGL.currentContext=context;EGL.currentDrawSurface=draw;EGL.currentReadSurface=read;EGL.setErrorCode(12288);return 1}function _eglQueryString(display,name){if(display!=62e3){EGL.setErrorCode(12296);return 0}EGL.setErrorCode(12288);if(EGL.stringCache[name])return EGL.stringCache[name];var ret;switch(name){case 12371:ret=allocateUTF8("Emscripten");break;case 12372:ret=allocateUTF8("1.4 Emscripten EGL");break;case 12373:ret=allocateUTF8("");break;case 12429:ret=allocateUTF8("OpenGL_ES");break;default:EGL.setErrorCode(12300);return 0}EGL.stringCache[name]=ret;return ret}function _eglSwapBuffers(){if(!EGL.defaultDisplayInitialized){EGL.setErrorCode(12289)}else if(!Module.ctx){EGL.setErrorCode(12290)}else if(Module.ctx.isContextLost()){EGL.setErrorCode(12302)}else{EGL.setErrorCode(12288);return 1}return 0}function _eglSwapInterval(display,interval){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(interval==0)_emscripten_set_main_loop_timing(0,0);else _emscripten_set_main_loop_timing(1,interval);EGL.setErrorCode(12288);return 1}function _eglTerminate(display){if(display!=62e3){EGL.setErrorCode(12296);return 0}EGL.currentContext=0;EGL.currentReadSurface=0;EGL.currentDrawSurface=0;EGL.defaultDisplayInitialized=false;EGL.setErrorCode(12288);return 1}function _eglWaitClient(){EGL.setErrorCode(12288);return 1}function _eglWaitGL(){return _eglWaitClient()}function _eglWaitNative(nativeEngineId){EGL.setErrorCode(12288);return 1}var readAsmConstArgsArray=[];function readAsmConstArgs(sigPtr,buf){readAsmConstArgsArray.length=0;var ch;buf>>=2;while(ch=HEAPU8[sigPtr++]){var double=ch<105;if(double&&buf&1)buf++;readAsmConstArgsArray.push(double?HEAPF64[buf++>>1]:HEAP32[buf]);++buf}return readAsmConstArgsArray}function _emscripten_asm_const_int(code,sigPtr,argbuf){var args=readAsmConstArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}var JSEvents={inEventHandler:0,removeAllEventListeners:function(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i)}JSEvents.eventHandlers=[];JSEvents.deferredCalls=[]},registerRemoveEventListeners:function(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push(JSEvents.removeAllEventListeners);JSEvents.removeEventListenersRegistered=true}},deferredCalls:[],deferCall:function(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false}return true}for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort(function(x,y){return x.precedence<y.precedence})},removeDeferredCalls:function(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i}}},canPerformEventHandlerRequests:function(){return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!JSEvents.canPerformEventHandlerRequests()){return}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(null,call.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--)}}},_removeHandler:function(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1)},registerOrRemoveHandler:function(eventHandler){var jsEventHandler=function jsEventHandler(event){++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;JSEvents.runDeferredCalls();eventHandler.handlerFunc(event);JSEvents.runDeferredCalls();--JSEvents.inEventHandler};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners()}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--)}}}},getNodeNameForTarget:function(target){if(!target)return"";if(target==window)return"#window";if(target==screen)return"#screen";return target&&target.nodeName?target.nodeName:""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};var currentFullscreenStrategy={};function maybeCStringToJsString(cString){return cString>2?UTF8ToString(cString):cString}var specialHTMLTargets=[0,document,window];function findEventTarget(target){target=maybeCStringToJsString(target);var domElement=specialHTMLTargets[target]||document.querySelector(target);return domElement}function findCanvasEventTarget(target){return findEventTarget(target)}function _emscripten_get_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;HEAP32[width>>2]=canvas.width;HEAP32[height>>2]=canvas.height}function getCanvasElementSize(target){var stackTop=stackSave();var w=stackAlloc(8);var h=w+4;var targetInt=stackAlloc(target.id.length+1);stringToUTF8(target.id,targetInt,target.id.length+1);var ret=_emscripten_get_canvas_element_size(targetInt,w,h);var size=[HEAP32[w>>2],HEAP32[h>>2]];stackRestore(stackTop);return size}function _emscripten_set_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;canvas.width=width;canvas.height=height;return 0}function setCanvasElementSize(target,width,height){if(!target.controlTransferredOffscreen){target.width=width;target.height=height}else{var stackTop=stackSave();var targetInt=stackAlloc(target.id.length+1);stringToUTF8(target.id,targetInt,target.id.length+1);_emscripten_set_canvas_element_size(targetInt,width,height);stackRestore(stackTop)}}function registerRestoreOldStyle(canvas){var canvasSize=getCanvasElementSize(canvas);var oldWidth=canvasSize[0];var oldHeight=canvasSize[1];var oldCssWidth=canvas.style.width;var oldCssHeight=canvas.style.height;var oldBackgroundColor=canvas.style.backgroundColor;var oldDocumentBackgroundColor=document.body.style.backgroundColor;var oldPaddingLeft=canvas.style.paddingLeft;var oldPaddingRight=canvas.style.paddingRight;var oldPaddingTop=canvas.style.paddingTop;var oldPaddingBottom=canvas.style.paddingBottom;var oldMarginLeft=canvas.style.marginLeft;var oldMarginRight=canvas.style.marginRight;var oldMarginTop=canvas.style.marginTop;var oldMarginBottom=canvas.style.marginBottom;var oldDocumentBodyMargin=document.body.style.margin;var oldDocumentOverflow=document.documentElement.style.overflow;var oldDocumentScroll=document.body.scroll;var oldImageRendering=canvas.style.imageRendering;function restoreOldStyle(){var fullscreenElement=document.fullscreenElement||document.webkitFullscreenElement||document.msFullscreenElement;if(!fullscreenElement){document.removeEventListener("fullscreenchange",restoreOldStyle);document.removeEventListener("webkitfullscreenchange",restoreOldStyle);setCanvasElementSize(canvas,oldWidth,oldHeight);canvas.style.width=oldCssWidth;canvas.style.height=oldCssHeight;canvas.style.backgroundColor=oldBackgroundColor;if(!oldDocumentBackgroundColor)document.body.style.backgroundColor="white";document.body.style.backgroundColor=oldDocumentBackgroundColor;canvas.style.paddingLeft=oldPaddingLeft;canvas.style.paddingRight=oldPaddingRight;canvas.style.paddingTop=oldPaddingTop;canvas.style.paddingBottom=oldPaddingBottom;canvas.style.marginLeft=oldMarginLeft;canvas.style.marginRight=oldMarginRight;canvas.style.marginTop=oldMarginTop;canvas.style.marginBottom=oldMarginBottom;document.body.style.margin=oldDocumentBodyMargin;document.documentElement.style.overflow=oldDocumentOverflow;document.body.scroll=oldDocumentScroll;canvas.style.imageRendering=oldImageRendering;if(canvas.GLctxObject)canvas.GLctxObject.GLctx.viewport(0,0,oldWidth,oldHeight);if(currentFullscreenStrategy.canvasResizedCallback){(function(a1,a2,a3){return dynCall_iiii.apply(null,[currentFullscreenStrategy.canvasResizedCallback,a1,a2,a3])})(37,0,currentFullscreenStrategy.canvasResizedCallbackUserData)}}}document.addEventListener("fullscreenchange",restoreOldStyle);document.addEventListener("webkitfullscreenchange",restoreOldStyle);return restoreOldStyle}function setLetterbox(element,topBottom,leftRight){element.style.paddingLeft=element.style.paddingRight=leftRight+"px";element.style.paddingTop=element.style.paddingBottom=topBottom+"px"}function getBoundingClientRect(e){return specialHTMLTargets.indexOf(e)<0?e.getBoundingClientRect():{"left":0,"top":0}}function _JSEvents_resizeCanvasForFullscreen(target,strategy){var restoreOldStyle=registerRestoreOldStyle(target);var cssWidth=strategy.softFullscreen?innerWidth:screen.width;var cssHeight=strategy.softFullscreen?innerHeight:screen.height;var rect=getBoundingClientRect(target);var windowedCssWidth=rect.width;var windowedCssHeight=rect.height;var canvasSize=getCanvasElementSize(target);var windowedRttWidth=canvasSize[0];var windowedRttHeight=canvasSize[1];if(strategy.scaleMode==3){setLetterbox(target,(cssHeight-windowedCssHeight)/2,(cssWidth-windowedCssWidth)/2);cssWidth=windowedCssWidth;cssHeight=windowedCssHeight}else if(strategy.scaleMode==2){if(cssWidth*windowedRttHeight<windowedRttWidth*cssHeight){var desiredCssHeight=windowedRttHeight*cssWidth/windowedRttWidth;setLetterbox(target,(cssHeight-desiredCssHeight)/2,0);cssHeight=desiredCssHeight}else{var desiredCssWidth=windowedRttWidth*cssHeight/windowedRttHeight;setLetterbox(target,0,(cssWidth-desiredCssWidth)/2);cssWidth=desiredCssWidth}}if(!target.style.backgroundColor)target.style.backgroundColor="black";if(!document.body.style.backgroundColor)document.body.style.backgroundColor="black";target.style.width=cssWidth+"px";target.style.height=cssHeight+"px";if(strategy.filteringMode==1){target.style.imageRendering="optimizeSpeed";target.style.imageRendering="-moz-crisp-edges";target.style.imageRendering="-o-crisp-edges";target.style.imageRendering="-webkit-optimize-contrast";target.style.imageRendering="optimize-contrast";target.style.imageRendering="crisp-edges";target.style.imageRendering="pixelated"}var dpiScale=strategy.canvasResolutionScaleMode==2?devicePixelRatio:1;if(strategy.canvasResolutionScaleMode!=0){var newWidth=cssWidth*dpiScale|0;var newHeight=cssHeight*dpiScale|0;setCanvasElementSize(target,newWidth,newHeight);if(target.GLctxObject)target.GLctxObject.GLctx.viewport(0,0,newWidth,newHeight)}return restoreOldStyle}function _JSEvents_requestFullscreen(target,strategy){if(strategy.scaleMode!=0||strategy.canvasResolutionScaleMode!=0){_JSEvents_resizeCanvasForFullscreen(target,strategy)}if(target.requestFullscreen){target.requestFullscreen()}else if(target.webkitRequestFullscreen){target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT)}else{return JSEvents.fullscreenEnabled()?-3:-1}currentFullscreenStrategy=strategy;if(strategy.canvasResizedCallback){(function(a1,a2,a3){return dynCall_iiii.apply(null,[strategy.canvasResizedCallback,a1,a2,a3])})(37,0,strategy.canvasResizedCallbackUserData)}return 0}function _emscripten_exit_fullscreen(){if(!JSEvents.fullscreenEnabled())return-1;JSEvents.removeDeferredCalls(_JSEvents_requestFullscreen);var d=specialHTMLTargets[1];if(d.exitFullscreen){d.fullscreenElement&&d.exitFullscreen()}else if(d.webkitExitFullscreen){d.webkitFullscreenElement&&d.webkitExitFullscreen()}else{return-1}return 0}function requestPointerLock(target){if(target.requestPointerLock){target.requestPointerLock()}else if(target.msRequestPointerLock){target.msRequestPointerLock()}else{if(document.body.requestPointerLock||document.body.msRequestPointerLock){return-3}else{return-1}}return 0}function _emscripten_exit_pointerlock(){JSEvents.removeDeferredCalls(requestPointerLock);if(document.exitPointerLock){document.exitPointerLock()}else if(document.msExitPointerLock){document.msExitPointerLock()}else{return-1}return 0}function _emscripten_get_device_pixel_ratio(){return devicePixelRatio}function _emscripten_get_element_css_size(target,width,height){target=findEventTarget(target);if(!target)return-4;var rect=getBoundingClientRect(target);HEAPF64[width>>3]=rect.width;HEAPF64[height>>3]=rect.height;return 0}function fillGamepadEventData(eventStruct,e){HEAPF64[eventStruct>>3]=e.timestamp;for(var i=0;i<e.axes.length;++i){HEAPF64[eventStruct+i*8+16>>3]=e.axes[i]}for(var i=0;i<e.buttons.length;++i){if(typeof e.buttons[i]==="object"){HEAPF64[eventStruct+i*8+528>>3]=e.buttons[i].value}else{HEAPF64[eventStruct+i*8+528>>3]=e.buttons[i]}}for(var i=0;i<e.buttons.length;++i){if(typeof e.buttons[i]==="object"){HEAP32[eventStruct+i*4+1040>>2]=e.buttons[i].pressed}else{HEAP32[eventStruct+i*4+1040>>2]=e.buttons[i]==1}}HEAP32[eventStruct+1296>>2]=e.connected;HEAP32[eventStruct+1300>>2]=e.index;HEAP32[eventStruct+8>>2]=e.axes.length;HEAP32[eventStruct+12>>2]=e.buttons.length;stringToUTF8(e.id,eventStruct+1304,64);stringToUTF8(e.mapping,eventStruct+1368,64)}function _emscripten_get_gamepad_status(index,gamepadState){if(index<0||index>=JSEvents.lastGamepadState.length)return-5;if(!JSEvents.lastGamepadState[index])return-7;fillGamepadEventData(gamepadState,JSEvents.lastGamepadState[index]);return 0}function _emscripten_get_num_gamepads(){return JSEvents.lastGamepadState.length}function _emscripten_glActiveTexture(x0){GLctx["activeTexture"](x0)}function _emscripten_glAttachShader(program,shader){GLctx.attachShader(GL.programs[program],GL.shaders[shader])}function _emscripten_glBeginQuery(target,id){GLctx["beginQuery"](target,GL.queries[id])}function _emscripten_glBeginQueryEXT(target,id){GLctx.disjointTimerQueryExt["beginQueryEXT"](target,GL.queries[id])}function _emscripten_glBeginTransformFeedback(x0){GLctx["beginTransformFeedback"](x0)}function _emscripten_glBindAttribLocation(program,index,name){GLctx.bindAttribLocation(GL.programs[program],index,UTF8ToString(name))}function _emscripten_glBindBuffer(target,buffer){if(target==34962){GLctx.currentArrayBufferBinding=buffer}else if(target==34963){GLctx.currentElementArrayBufferBinding=buffer}if(target==35051){GLctx.currentPixelPackBufferBinding=buffer}else if(target==35052){GLctx.currentPixelUnpackBufferBinding=buffer}GLctx.bindBuffer(target,GL.buffers[buffer])}function _emscripten_glBindBufferBase(target,index,buffer){GLctx["bindBufferBase"](target,index,GL.buffers[buffer])}function _emscripten_glBindBufferRange(target,index,buffer,offset,ptrsize){GLctx["bindBufferRange"](target,index,GL.buffers[buffer],offset,ptrsize)}function _emscripten_glBindFramebuffer(target,framebuffer){GLctx.bindFramebuffer(target,GL.framebuffers[framebuffer])}function _emscripten_glBindRenderbuffer(target,renderbuffer){GLctx.bindRenderbuffer(target,GL.renderbuffers[renderbuffer])}function _emscripten_glBindSampler(unit,sampler){GLctx["bindSampler"](unit,GL.samplers[sampler])}function _emscripten_glBindTexture(target,texture){GLctx.bindTexture(target,GL.textures[texture])}function _emscripten_glBindTransformFeedback(target,id){GLctx["bindTransformFeedback"](target,GL.transformFeedbacks[id])}function _emscripten_glBindVertexArray(vao){GLctx["bindVertexArray"](GL.vaos[vao]);var ibo=GLctx.getParameter(34965);GLctx.currentElementArrayBufferBinding=ibo?ibo.name|0:0}function _emscripten_glBindVertexArrayOES(vao){GLctx["bindVertexArray"](GL.vaos[vao]);var ibo=GLctx.getParameter(34965);GLctx.currentElementArrayBufferBinding=ibo?ibo.name|0:0}function _emscripten_glBlendColor(x0,x1,x2,x3){GLctx["blendColor"](x0,x1,x2,x3)}function _emscripten_glBlendEquation(x0){GLctx["blendEquation"](x0)}function _emscripten_glBlendEquationSeparate(x0,x1){GLctx["blendEquationSeparate"](x0,x1)}function _emscripten_glBlendFunc(x0,x1){GLctx["blendFunc"](x0,x1)}function _emscripten_glBlendFuncSeparate(x0,x1,x2,x3){GLctx["blendFuncSeparate"](x0,x1,x2,x3)}function _emscripten_glBlitFramebuffer(x0,x1,x2,x3,x4,x5,x6,x7,x8,x9){GLctx["blitFramebuffer"](x0,x1,x2,x3,x4,x5,x6,x7,x8,x9)}function _emscripten_glBufferData(target,size,data,usage){if(true){if(data){GLctx.bufferData(target,HEAPU8,usage,data,size)}else{GLctx.bufferData(target,size,usage)}}else{GLctx.bufferData(target,data?HEAPU8.subarray(data,data+size):size,usage)}}function _emscripten_glBufferSubData(target,offset,size,data){if(true){GLctx.bufferSubData(target,offset,HEAPU8,data,size);return}GLctx.bufferSubData(target,offset,HEAPU8.subarray(data,data+size))}function _emscripten_glCheckFramebufferStatus(x0){return GLctx["checkFramebufferStatus"](x0)}function _emscripten_glClear(x0){GLctx["clear"](x0)}function _emscripten_glClearBufferfi(x0,x1,x2,x3){GLctx["clearBufferfi"](x0,x1,x2,x3)}function _emscripten_glClearBufferfv(buffer,drawbuffer,value){GLctx["clearBufferfv"](buffer,drawbuffer,HEAPF32,value>>2)}function _emscripten_glClearBufferiv(buffer,drawbuffer,value){GLctx["clearBufferiv"](buffer,drawbuffer,HEAP32,value>>2)}function _emscripten_glClearBufferuiv(buffer,drawbuffer,value){GLctx["clearBufferuiv"](buffer,drawbuffer,HEAPU32,value>>2)}function _emscripten_glClearColor(x0,x1,x2,x3){GLctx["clearColor"](x0,x1,x2,x3)}function _emscripten_glClearDepthf(x0){GLctx["clearDepth"](x0)}function _emscripten_glClearStencil(x0){GLctx["clearStencil"](x0)}function convertI32PairToI53(lo,hi){return(lo>>>0)+hi*4294967296}function _emscripten_glClientWaitSync(sync,flags,timeoutLo,timeoutHi){return GLctx.clientWaitSync(GL.syncs[sync],flags,convertI32PairToI53(timeoutLo,timeoutHi))}function _emscripten_glColorMask(red,green,blue,alpha){GLctx.colorMask(!!red,!!green,!!blue,!!alpha)}function _emscripten_glCompileShader(shader){GLctx.compileShader(GL.shaders[shader])}function _emscripten_glCompressedTexImage2D(target,level,internalFormat,width,height,border,imageSize,data){if(true){if(GLctx.currentPixelUnpackBufferBinding){GLctx["compressedTexImage2D"](target,level,internalFormat,width,height,border,imageSize,data)}else{GLctx["compressedTexImage2D"](target,level,internalFormat,width,height,border,HEAPU8,data,imageSize)}return}GLctx["compressedTexImage2D"](target,level,internalFormat,width,height,border,data?HEAPU8.subarray(data,data+imageSize):null)}function _emscripten_glCompressedTexImage3D(target,level,internalFormat,width,height,depth,border,imageSize,data){if(GLctx.currentPixelUnpackBufferBinding){GLctx["compressedTexImage3D"](target,level,internalFormat,width,height,depth,border,imageSize,data)}else{GLctx["compressedTexImage3D"](target,level,internalFormat,width,height,depth,border,HEAPU8,data,imageSize)}}function _emscripten_glCompressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,imageSize,data){if(true){if(GLctx.currentPixelUnpackBufferBinding){GLctx["compressedTexSubImage2D"](target,level,xoffset,yoffset,width,height,format,imageSize,data)}else{GLctx["compressedTexSubImage2D"](target,level,xoffset,yoffset,width,height,format,HEAPU8,data,imageSize)}return}GLctx["compressedTexSubImage2D"](target,level,xoffset,yoffset,width,height,format,data?HEAPU8.subarray(data,data+imageSize):null)}function _emscripten_glCompressedTexSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,imageSize,data){if(GLctx.currentPixelUnpackBufferBinding){GLctx["compressedTexSubImage3D"](target,level,xoffset,yoffset,zoffset,width,height,depth,format,imageSize,data)}else{GLctx["compressedTexSubImage3D"](target,level,xoffset,yoffset,zoffset,width,height,depth,format,HEAPU8,data,imageSize)}}function _emscripten_glCopyBufferSubData(x0,x1,x2,x3,x4){GLctx["copyBufferSubData"](x0,x1,x2,x3,x4)}function _emscripten_glCopyTexImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx["copyTexImage2D"](x0,x1,x2,x3,x4,x5,x6,x7)}function _emscripten_glCopyTexSubImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx["copyTexSubImage2D"](x0,x1,x2,x3,x4,x5,x6,x7)}function _emscripten_glCopyTexSubImage3D(x0,x1,x2,x3,x4,x5,x6,x7,x8){GLctx["copyTexSubImage3D"](x0,x1,x2,x3,x4,x5,x6,x7,x8)}function _emscripten_glCreateProgram(){var id=GL.getNewId(GL.programs);var program=GLctx.createProgram();program.name=id;program.maxUniformLength=program.maxAttributeLength=program.maxUniformBlockNameLength=0;program.uniformIdCounter=1;GL.programs[id]=program;return id}function _emscripten_glCreateShader(shaderType){var id=GL.getNewId(GL.shaders);GL.shaders[id]=GLctx.createShader(shaderType);return id}function _emscripten_glCullFace(x0){GLctx["cullFace"](x0)}function _emscripten_glDeleteBuffers(n,buffers){for(var i=0;i<n;i++){var id=HEAP32[buffers+i*4>>2];var buffer=GL.buffers[id];if(!buffer)continue;GLctx.deleteBuffer(buffer);buffer.name=0;GL.buffers[id]=null;if(id==GLctx.currentArrayBufferBinding)GLctx.currentArrayBufferBinding=0;if(id==GLctx.currentElementArrayBufferBinding)GLctx.currentElementArrayBufferBinding=0;if(id==GLctx.currentPixelPackBufferBinding)GLctx.currentPixelPackBufferBinding=0;if(id==GLctx.currentPixelUnpackBufferBinding)GLctx.currentPixelUnpackBufferBinding=0}}function _emscripten_glDeleteFramebuffers(n,framebuffers){for(var i=0;i<n;++i){var id=HEAP32[framebuffers+i*4>>2];var framebuffer=GL.framebuffers[id];if(!framebuffer)continue;GLctx.deleteFramebuffer(framebuffer);framebuffer.name=0;GL.framebuffers[id]=null}}function _emscripten_glDeleteProgram(id){if(!id)return;var program=GL.programs[id];if(!program){GL.recordError(1281);return}GLctx.deleteProgram(program);program.name=0;GL.programs[id]=null}function _emscripten_glDeleteQueries(n,ids){for(var i=0;i<n;i++){var id=HEAP32[ids+i*4>>2];var query=GL.queries[id];if(!query)continue;GLctx["deleteQuery"](query);GL.queries[id]=null}}function _emscripten_glDeleteQueriesEXT(n,ids){for(var i=0;i<n;i++){var id=HEAP32[ids+i*4>>2];var query=GL.queries[id];if(!query)continue;GLctx.disjointTimerQueryExt["deleteQueryEXT"](query);GL.queries[id]=null}}function _emscripten_glDeleteRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var id=HEAP32[renderbuffers+i*4>>2];var renderbuffer=GL.renderbuffers[id];if(!renderbuffer)continue;GLctx.deleteRenderbuffer(renderbuffer);renderbuffer.name=0;GL.renderbuffers[id]=null}}function _emscripten_glDeleteSamplers(n,samplers){for(var i=0;i<n;i++){var id=HEAP32[samplers+i*4>>2];var sampler=GL.samplers[id];if(!sampler)continue;GLctx["deleteSampler"](sampler);sampler.name=0;GL.samplers[id]=null}}function _emscripten_glDeleteShader(id){if(!id)return;var shader=GL.shaders[id];if(!shader){GL.recordError(1281);return}GLctx.deleteShader(shader);GL.shaders[id]=null}function _emscripten_glDeleteSync(id){if(!id)return;var sync=GL.syncs[id];if(!sync){GL.recordError(1281);return}GLctx.deleteSync(sync);sync.name=0;GL.syncs[id]=null}function _emscripten_glDeleteTextures(n,textures){for(var i=0;i<n;i++){var id=HEAP32[textures+i*4>>2];var texture=GL.textures[id];if(!texture)continue;GLctx.deleteTexture(texture);texture.name=0;GL.textures[id]=null}}function _emscripten_glDeleteTransformFeedbacks(n,ids){for(var i=0;i<n;i++){var id=HEAP32[ids+i*4>>2];var transformFeedback=GL.transformFeedbacks[id];if(!transformFeedback)continue;GLctx["deleteTransformFeedback"](transformFeedback);transformFeedback.name=0;GL.transformFeedbacks[id]=null}}function _emscripten_glDeleteVertexArrays(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx["deleteVertexArray"](GL.vaos[id]);GL.vaos[id]=null}}function _emscripten_glDeleteVertexArraysOES(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx["deleteVertexArray"](GL.vaos[id]);GL.vaos[id]=null}}function _emscripten_glDepthFunc(x0){GLctx["depthFunc"](x0)}function _emscripten_glDepthMask(flag){GLctx.depthMask(!!flag)}function _emscripten_glDepthRangef(x0,x1){GLctx["depthRange"](x0,x1)}function _emscripten_glDetachShader(program,shader){GLctx.detachShader(GL.programs[program],GL.shaders[shader])}function _emscripten_glDisable(x0){GLctx["disable"](x0)}function _emscripten_glDisableVertexAttribArray(index){var cb=GL.currentContext.clientBuffers[index];cb.enabled=false;GLctx.disableVertexAttribArray(index)}function _emscripten_glDrawArrays(mode,first,count){GL.preDrawHandleClientVertexAttribBindings(first+count);GLctx.drawArrays(mode,first,count);GL.postDrawHandleClientVertexAttribBindings()}function _emscripten_glDrawArraysInstanced(mode,first,count,primcount){GLctx["drawArraysInstanced"](mode,first,count,primcount)}function _emscripten_glDrawArraysInstancedANGLE(mode,first,count,primcount){GLctx["drawArraysInstanced"](mode,first,count,primcount)}function _emscripten_glDrawArraysInstancedARB(mode,first,count,primcount){GLctx["drawArraysInstanced"](mode,first,count,primcount)}function _emscripten_glDrawArraysInstancedEXT(mode,first,count,primcount){GLctx["drawArraysInstanced"](mode,first,count,primcount)}function _emscripten_glDrawArraysInstancedNV(mode,first,count,primcount){GLctx["drawArraysInstanced"](mode,first,count,primcount)}var tempFixedLengthArray=[];function _emscripten_glDrawBuffers(n,bufs){var bufArray=tempFixedLengthArray[n];for(var i=0;i<n;i++){bufArray[i]=HEAP32[bufs+i*4>>2]}GLctx["drawBuffers"](bufArray)}function _emscripten_glDrawBuffersEXT(n,bufs){var bufArray=tempFixedLengthArray[n];for(var i=0;i<n;i++){bufArray[i]=HEAP32[bufs+i*4>>2]}GLctx["drawBuffers"](bufArray)}function _emscripten_glDrawBuffersWEBGL(n,bufs){var bufArray=tempFixedLengthArray[n];for(var i=0;i<n;i++){bufArray[i]=HEAP32[bufs+i*4>>2]}GLctx["drawBuffers"](bufArray)}function _emscripten_glDrawElements(mode,count,type,indices){var buf;if(!GLctx.currentElementArrayBufferBinding){var size=GL.calcBufLength(1,type,0,count);buf=GL.getTempIndexBuffer(size);GLctx.bindBuffer(34963,buf);GLctx.bufferSubData(34963,0,HEAPU8.subarray(indices,indices+size));indices=0}GL.preDrawHandleClientVertexAttribBindings(count);GLctx.drawElements(mode,count,type,indices);GL.postDrawHandleClientVertexAttribBindings(count);if(!GLctx.currentElementArrayBufferBinding){GLctx.bindBuffer(34963,null)}}function _emscripten_glDrawElementsInstanced(mode,count,type,indices,primcount){GLctx["drawElementsInstanced"](mode,count,type,indices,primcount)}function _emscripten_glDrawElementsInstancedANGLE(mode,count,type,indices,primcount){GLctx["drawElementsInstanced"](mode,count,type,indices,primcount)}function _emscripten_glDrawElementsInstancedARB(mode,count,type,indices,primcount){GLctx["drawElementsInstanced"](mode,count,type,indices,primcount)}function _emscripten_glDrawElementsInstancedEXT(mode,count,type,indices,primcount){GLctx["drawElementsInstanced"](mode,count,type,indices,primcount)}function _emscripten_glDrawElementsInstancedNV(mode,count,type,indices,primcount){GLctx["drawElementsInstanced"](mode,count,type,indices,primcount)}function _glDrawElements(mode,count,type,indices){var buf;if(!GLctx.currentElementArrayBufferBinding){var size=GL.calcBufLength(1,type,0,count);buf=GL.getTempIndexBuffer(size);GLctx.bindBuffer(34963,buf);GLctx.bufferSubData(34963,0,HEAPU8.subarray(indices,indices+size));indices=0}GL.preDrawHandleClientVertexAttribBindings(count);GLctx.drawElements(mode,count,type,indices);GL.postDrawHandleClientVertexAttribBindings(count);if(!GLctx.currentElementArrayBufferBinding){GLctx.bindBuffer(34963,null)}}function _emscripten_glDrawRangeElements(mode,start,end,count,type,indices){_glDrawElements(mode,count,type,indices)}function _emscripten_glEnable(x0){GLctx["enable"](x0)}function _emscripten_glEnableVertexAttribArray(index){var cb=GL.currentContext.clientBuffers[index];cb.enabled=true;GLctx.enableVertexAttribArray(index)}function _emscripten_glEndQuery(x0){GLctx["endQuery"](x0)}function _emscripten_glEndQueryEXT(target){GLctx.disjointTimerQueryExt["endQueryEXT"](target)}function _emscripten_glEndTransformFeedback(){GLctx["endTransformFeedback"]()}function _emscripten_glFenceSync(condition,flags){var sync=GLctx.fenceSync(condition,flags);if(sync){var id=GL.getNewId(GL.syncs);sync.name=id;GL.syncs[id]=sync;return id}else{return 0}}function _emscripten_glFinish(){GLctx["finish"]()}function _emscripten_glFlush(){GLctx["flush"]()}function emscriptenWebGLGetBufferBinding(target){switch(target){case 34962:target=34964;break;case 34963:target=34965;break;case 35051:target=35053;break;case 35052:target=35055;break;case 35982:target=35983;break;case 36662:target=36662;break;case 36663:target=36663;break;case 35345:target=35368;break}var buffer=GLctx.getParameter(target);if(buffer)return buffer.name|0;else return 0}function emscriptenWebGLValidateMapBufferTarget(target){switch(target){case 34962:case 34963:case 36662:case 36663:case 35051:case 35052:case 35882:case 35982:case 35345:return true;default:return false}}function _emscripten_glFlushMappedBufferRange(target,offset,length){if(!emscriptenWebGLValidateMapBufferTarget(target)){GL.recordError(1280);err("GL_INVALID_ENUM in glFlushMappedBufferRange");return}var mapping=GL.mappedBuffers[emscriptenWebGLGetBufferBinding(target)];if(!mapping){GL.recordError(1282);err("buffer was never mapped in glFlushMappedBufferRange");return}if(!(mapping.access&16)){GL.recordError(1282);err("buffer was not mapped with GL_MAP_FLUSH_EXPLICIT_BIT in glFlushMappedBufferRange");return}if(offset<0||length<0||offset+length>mapping.length){GL.recordError(1281);err("invalid range in glFlushMappedBufferRange");return}GLctx.bufferSubData(target,mapping.offset,HEAPU8.subarray(mapping.mem+offset,mapping.mem+offset+length))}function _emscripten_glFramebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer){GLctx.framebufferRenderbuffer(target,attachment,renderbuffertarget,GL.renderbuffers[renderbuffer])}function _emscripten_glFramebufferTexture2D(target,attachment,textarget,texture,level){GLctx.framebufferTexture2D(target,attachment,textarget,GL.textures[texture],level)}function _emscripten_glFramebufferTextureLayer(target,attachment,texture,level,layer){GLctx.framebufferTextureLayer(target,attachment,GL.textures[texture],level,layer)}function _emscripten_glFrontFace(x0){GLctx["frontFace"](x0)}function __glGenObject(n,buffers,createFunction,objectTable){for(var i=0;i<n;i++){var buffer=GLctx[createFunction]();var id=buffer&&GL.getNewId(objectTable);if(buffer){buffer.name=id;objectTable[id]=buffer}else{GL.recordError(1282)}HEAP32[buffers+i*4>>2]=id}}function _emscripten_glGenBuffers(n,buffers){__glGenObject(n,buffers,"createBuffer",GL.buffers)}function _emscripten_glGenFramebuffers(n,ids){__glGenObject(n,ids,"createFramebuffer",GL.framebuffers)}function _emscripten_glGenQueries(n,ids){__glGenObject(n,ids,"createQuery",GL.queries)}function _emscripten_glGenQueriesEXT(n,ids){for(var i=0;i<n;i++){var query=GLctx.disjointTimerQueryExt["createQueryEXT"]();if(!query){GL.recordError(1282);while(i<n)HEAP32[ids+i++*4>>2]=0;return}var id=GL.getNewId(GL.queries);query.name=id;GL.queries[id]=query;HEAP32[ids+i*4>>2]=id}}function _emscripten_glGenRenderbuffers(n,renderbuffers){__glGenObject(n,renderbuffers,"createRenderbuffer",GL.renderbuffers)}function _emscripten_glGenSamplers(n,samplers){__glGenObject(n,samplers,"createSampler",GL.samplers)}function _emscripten_glGenTextures(n,textures){__glGenObject(n,textures,"createTexture",GL.textures)}function _emscripten_glGenTransformFeedbacks(n,ids){__glGenObject(n,ids,"createTransformFeedback",GL.transformFeedbacks)}function _emscripten_glGenVertexArrays(n,arrays){__glGenObject(n,arrays,"createVertexArray",GL.vaos)}function _emscripten_glGenVertexArraysOES(n,arrays){__glGenObject(n,arrays,"createVertexArray",GL.vaos)}function _emscripten_glGenerateMipmap(x0){GLctx["generateMipmap"](x0)}function __glGetActiveAttribOrUniform(funcName,program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx[funcName](program,index);if(info){var numBytesWrittenExclNull=name&&stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull;if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}}function _emscripten_glGetActiveAttrib(program,index,bufSize,length,size,type,name){__glGetActiveAttribOrUniform("getActiveAttrib",program,index,bufSize,length,size,type,name)}function _emscripten_glGetActiveUniform(program,index,bufSize,length,size,type,name){__glGetActiveAttribOrUniform("getActiveUniform",program,index,bufSize,length,size,type,name)}function _emscripten_glGetActiveUniformBlockName(program,uniformBlockIndex,bufSize,length,uniformBlockName){program=GL.programs[program];var result=GLctx["getActiveUniformBlockName"](program,uniformBlockIndex);if(!result)return;if(uniformBlockName&&bufSize>0){var numBytesWrittenExclNull=stringToUTF8(result,uniformBlockName,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetActiveUniformBlockiv(program,uniformBlockIndex,pname,params){if(!params){GL.recordError(1281);return}program=GL.programs[program];if(pname==35393){var name=GLctx["getActiveUniformBlockName"](program,uniformBlockIndex);HEAP32[params>>2]=name.length+1;return}var result=GLctx["getActiveUniformBlockParameter"](program,uniformBlockIndex,pname);if(result===null)return;if(pname==35395){for(var i=0;i<result.length;i++){HEAP32[params+i*4>>2]=result[i]}}else{HEAP32[params>>2]=result}}function _emscripten_glGetActiveUniformsiv(program,uniformCount,uniformIndices,pname,params){if(!params){GL.recordError(1281);return}if(uniformCount>0&&uniformIndices==0){GL.recordError(1281);return}program=GL.programs[program];var ids=[];for(var i=0;i<uniformCount;i++){ids.push(HEAP32[uniformIndices+i*4>>2])}var result=GLctx["getActiveUniforms"](program,ids,pname);if(!result)return;var len=result.length;for(var i=0;i<len;i++){HEAP32[params+i*4>>2]=result[i]}}function _emscripten_glGetAttachedShaders(program,maxCount,count,shaders){var result=GLctx.getAttachedShaders(GL.programs[program]);var len=result.length;if(len>maxCount){len=maxCount}HEAP32[count>>2]=len;for(var i=0;i<len;++i){var id=GL.shaders.indexOf(result[i]);HEAP32[shaders+i*4>>2]=id}}function _emscripten_glGetAttribLocation(program,name){return GLctx.getAttribLocation(GL.programs[program],UTF8ToString(name))}function writeI53ToI64(ptr,num){HEAPU32[ptr>>2]=num;HEAPU32[ptr+4>>2]=(num-HEAPU32[ptr>>2])/4294967296}function emscriptenWebGLGet(name_,p,type){if(!p){GL.recordError(1281);return}var ret=undefined;switch(name_){case 36346:ret=1;break;case 36344:if(type!=0&&type!=1){GL.recordError(1280)}return;case 34814:case 36345:ret=0;break;case 34466:var formats=GLctx.getParameter(34467);ret=formats?formats.length:0;break;case 33309:if(GL.currentContext.version<2){GL.recordError(1282);return}var exts=GLctx.getSupportedExtensions()||[];ret=2*exts.length;break;case 33307:case 33308:if(GL.currentContext.version<2){GL.recordError(1280);return}ret=name_==33307?3:0;break}if(ret===undefined){var result=GLctx.getParameter(name_);switch(typeof result){case"number":ret=result;break;case"boolean":ret=result?1:0;break;case"string":GL.recordError(1280);return;case"object":if(result===null){switch(name_){case 34964:case 35725:case 34965:case 36006:case 36007:case 32873:case 34229:case 36662:case 36663:case 35053:case 35055:case 36010:case 35097:case 35869:case 32874:case 36389:case 35983:case 35368:case 34068:{ret=0;break}default:{GL.recordError(1280);return}}}else if(result instanceof Float32Array||result instanceof Uint32Array||result instanceof Int32Array||result instanceof Array){for(var i=0;i<result.length;++i){switch(type){case 0:HEAP32[p+i*4>>2]=result[i];break;case 2:HEAPF32[p+i*4>>2]=result[i];break;case 4:HEAP8[p+i>>0]=result[i]?1:0;break}}return}else{try{ret=result.name|0}catch(e){GL.recordError(1280);err("GL_INVALID_ENUM in glGet"+type+"v: Unknown object returned from WebGL getParameter("+name_+")! (error: "+e+")");return}}break;default:GL.recordError(1280);err("GL_INVALID_ENUM in glGet"+type+"v: Native code calling glGet"+type+"v("+name_+") and it returns "+result+" of type "+typeof result+"!");return}}switch(type){case 1:writeI53ToI64(p,ret);break;case 0:HEAP32[p>>2]=ret;break;case 2:HEAPF32[p>>2]=ret;break;case 4:HEAP8[p>>0]=ret?1:0;break}}function _emscripten_glGetBooleanv(name_,p){emscriptenWebGLGet(name_,p,4)}function _emscripten_glGetBufferParameteri64v(target,value,data){if(!data){GL.recordError(1281);return}writeI53ToI64(data,GLctx.getBufferParameter(target,value))}function _emscripten_glGetBufferParameteriv(target,value,data){if(!data){GL.recordError(1281);return}HEAP32[data>>2]=GLctx.getBufferParameter(target,value)}function _emscripten_glGetBufferPointerv(target,pname,params){if(pname==35005){var ptr=0;var mappedBuffer=GL.mappedBuffers[emscriptenWebGLGetBufferBinding(target)];if(mappedBuffer){ptr=mappedBuffer.mem}HEAP32[params>>2]=ptr}else{GL.recordError(1280);err("GL_INVALID_ENUM in glGetBufferPointerv")}}function _emscripten_glGetError(){var error=GLctx.getError()||GL.lastError;GL.lastError=0;return error}function _emscripten_glGetFloatv(name_,p){emscriptenWebGLGet(name_,p,2)}function _emscripten_glGetFragDataLocation(program,name){return GLctx["getFragDataLocation"](GL.programs[program],UTF8ToString(name))}function _emscripten_glGetFramebufferAttachmentParameteriv(target,attachment,pname,params){var result=GLctx.getFramebufferAttachmentParameter(target,attachment,pname);if(result instanceof WebGLRenderbuffer||result instanceof WebGLTexture){result=result.name|0}HEAP32[params>>2]=result}function emscriptenWebGLGetIndexed(target,index,data,type){if(!data){GL.recordError(1281);return}var result=GLctx["getIndexedParameter"](target,index);var ret;switch(typeof result){case"boolean":ret=result?1:0;break;case"number":ret=result;break;case"object":if(result===null){switch(target){case 35983:case 35368:ret=0;break;default:{GL.recordError(1280);return}}}else if(result instanceof WebGLBuffer){ret=result.name|0}else{GL.recordError(1280);return}break;default:GL.recordError(1280);return}switch(type){case 1:writeI53ToI64(data,ret);break;case 0:HEAP32[data>>2]=ret;break;case 2:HEAPF32[data>>2]=ret;break;case 4:HEAP8[data>>0]=ret?1:0;break;default:throw"internal emscriptenWebGLGetIndexed() error, bad type: "+type}}function _emscripten_glGetInteger64i_v(target,index,data){emscriptenWebGLGetIndexed(target,index,data,1)}function _emscripten_glGetInteger64v(name_,p){emscriptenWebGLGet(name_,p,1)}function _emscripten_glGetIntegeri_v(target,index,data){emscriptenWebGLGetIndexed(target,index,data,0)}function _emscripten_glGetIntegerv(name_,p){emscriptenWebGLGet(name_,p,0)}function _emscripten_glGetInternalformativ(target,internalformat,pname,bufSize,params){if(bufSize<0){GL.recordError(1281);return}if(!params){GL.recordError(1281);return}var ret=GLctx["getInternalformatParameter"](target,internalformat,pname);if(ret===null)return;for(var i=0;i<ret.length&&i<bufSize;++i){HEAP32[params+i>>2]=ret[i]}}function _emscripten_glGetProgramBinary(program,bufSize,length,binaryFormat,binary){GL.recordError(1282)}function _emscripten_glGetProgramInfoLog(program,maxLength,length,infoLog){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log="(unknown error)";var numBytesWrittenExclNull=maxLength>0&&infoLog?stringToUTF8(log,infoLog,maxLength):0;if(length)HEAP32[length>>2]=numBytesWrittenExclNull}function _emscripten_glGetProgramiv(program,pname,p){if(!p){GL.recordError(1281);return}if(program>=GL.counter){GL.recordError(1281);return}program=GL.programs[program];if(pname==35716){var log=GLctx.getProgramInfoLog(program);if(log===null)log="(unknown error)";HEAP32[p>>2]=log.length+1}else if(pname==35719){if(!program.maxUniformLength){for(var i=0;i<GLctx.getProgramParameter(program,35718);++i){program.maxUniformLength=Math.max(program.maxUniformLength,GLctx.getActiveUniform(program,i).name.length+1)}}HEAP32[p>>2]=program.maxUniformLength}else if(pname==35722){if(!program.maxAttributeLength){for(var i=0;i<GLctx.getProgramParameter(program,35721);++i){program.maxAttributeLength=Math.max(program.maxAttributeLength,GLctx.getActiveAttrib(program,i).name.length+1)}}HEAP32[p>>2]=program.maxAttributeLength}else if(pname==35381){if(!program.maxUniformBlockNameLength){for(var i=0;i<GLctx.getProgramParameter(program,35382);++i){program.maxUniformBlockNameLength=Math.max(program.maxUniformBlockNameLength,GLctx.getActiveUniformBlockName(program,i).length+1)}}HEAP32[p>>2]=program.maxUniformBlockNameLength}else{HEAP32[p>>2]=GLctx.getProgramParameter(program,pname)}}function _emscripten_glGetQueryObjecti64vEXT(id,pname,params){if(!params){GL.recordError(1281);return}var query=GL.queries[id];var param;if(GL.currentContext.version<2){param=GLctx.disjointTimerQueryExt["getQueryObjectEXT"](query,pname)}else{param=GLctx["getQueryParameter"](query,pname)}var ret;if(typeof param=="boolean"){ret=param?1:0}else{ret=param}writeI53ToI64(params,ret)}function _emscripten_glGetQueryObjectivEXT(id,pname,params){if(!params){GL.recordError(1281);return}var query=GL.queries[id];var param=GLctx.disjointTimerQueryExt["getQueryObjectEXT"](query,pname);var ret;if(typeof param=="boolean"){ret=param?1:0}else{ret=param}HEAP32[params>>2]=ret}function _emscripten_glGetQueryObjectui64vEXT(id,pname,params){if(!params){GL.recordError(1281);return}var query=GL.queries[id];var param;if(GL.currentContext.version<2){param=GLctx.disjointTimerQueryExt["getQueryObjectEXT"](query,pname)}else{param=GLctx["getQueryParameter"](query,pname)}var ret;if(typeof param=="boolean"){ret=param?1:0}else{ret=param}writeI53ToI64(params,ret)}function _emscripten_glGetQueryObjectuiv(id,pname,params){if(!params){GL.recordError(1281);return}var query=GL.queries[id];var param=GLctx["getQueryParameter"](query,pname);var ret;if(typeof param=="boolean"){ret=param?1:0}else{ret=param}HEAP32[params>>2]=ret}function _emscripten_glGetQueryObjectuivEXT(id,pname,params){if(!params){GL.recordError(1281);return}var query=GL.queries[id];var param=GLctx.disjointTimerQueryExt["getQueryObjectEXT"](query,pname);var ret;if(typeof param=="boolean"){ret=param?1:0}else{ret=param}HEAP32[params>>2]=ret}function _emscripten_glGetQueryiv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx["getQuery"](target,pname)}function _emscripten_glGetQueryivEXT(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.disjointTimerQueryExt["getQueryEXT"](target,pname)}function _emscripten_glGetRenderbufferParameteriv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.getRenderbufferParameter(target,pname)}function _emscripten_glGetSamplerParameterfv(sampler,pname,params){if(!params){GL.recordError(1281);return}HEAPF32[params>>2]=GLctx["getSamplerParameter"](GL.samplers[sampler],pname)}function _emscripten_glGetSamplerParameteriv(sampler,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx["getSamplerParameter"](GL.samplers[sampler],pname)}function _emscripten_glGetShaderInfoLog(shader,maxLength,length,infoLog){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log="(unknown error)";var numBytesWrittenExclNull=maxLength>0&&infoLog?stringToUTF8(log,infoLog,maxLength):0;if(length)HEAP32[length>>2]=numBytesWrittenExclNull}function _emscripten_glGetShaderPrecisionFormat(shaderType,precisionType,range,precision){var result=GLctx.getShaderPrecisionFormat(shaderType,precisionType);HEAP32[range>>2]=result.rangeMin;HEAP32[range+4>>2]=result.rangeMax;HEAP32[precision>>2]=result.precision}function _emscripten_glGetShaderSource(shader,bufSize,length,source){var result=GLctx.getShaderSource(GL.shaders[shader]);if(!result)return;var numBytesWrittenExclNull=bufSize>0&&source?stringToUTF8(result,source,bufSize):0;if(length)HEAP32[length>>2]=numBytesWrittenExclNull}function _emscripten_glGetShaderiv(shader,pname,p){if(!p){GL.recordError(1281);return}if(pname==35716){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log="(unknown error)";var logLength=log?log.length+1:0;HEAP32[p>>2]=logLength}else if(pname==35720){var source=GLctx.getShaderSource(GL.shaders[shader]);var sourceLength=source?source.length+1:0;HEAP32[p>>2]=sourceLength}else{HEAP32[p>>2]=GLctx.getShaderParameter(GL.shaders[shader],pname)}}function stringToNewUTF8(jsString){var length=lengthBytesUTF8(jsString)+1;var cString=_malloc(length);stringToUTF8(jsString,cString,length);return cString}function _emscripten_glGetString(name_){var ret=GL.stringCache[name_];if(!ret){switch(name_){case 7939:var exts=GLctx.getSupportedExtensions()||[];exts=exts.concat(exts.map(function(e){return"GL_"+e}));ret=stringToNewUTF8(exts.join(" "));break;case 7936:case 7937:case 37445:case 37446:var s=GLctx.getParameter(name_);if(!s){GL.recordError(1280)}ret=s&&stringToNewUTF8(s);break;case 7938:var glVersion=GLctx.getParameter(7938);if(true)glVersion="OpenGL ES 3.0 ("+glVersion+")";else{glVersion="OpenGL ES 2.0 ("+glVersion+")"}ret=stringToNewUTF8(glVersion);break;case 35724:var glslVersion=GLctx.getParameter(35724);var ver_re=/^WebGL GLSL ES ([0-9]\.[0-9][0-9]?)(?:$| .*)/;var ver_num=glslVersion.match(ver_re);if(ver_num!==null){if(ver_num[1].length==3)ver_num[1]=ver_num[1]+"0";glslVersion="OpenGL ES GLSL ES "+ver_num[1]+" ("+glslVersion+")"}ret=stringToNewUTF8(glslVersion);break;default:GL.recordError(1280)}GL.stringCache[name_]=ret}return ret}function _emscripten_glGetStringi(name,index){if(GL.currentContext.version<2){GL.recordError(1282);return 0}var stringiCache=GL.stringiCache[name];if(stringiCache){if(index<0||index>=stringiCache.length){GL.recordError(1281);return 0}return stringiCache[index]}switch(name){case 7939:var exts=GLctx.getSupportedExtensions()||[];exts=exts.concat(exts.map(function(e){return"GL_"+e}));exts=exts.map(function(e){return stringToNewUTF8(e)});stringiCache=GL.stringiCache[name]=exts;if(index<0||index>=stringiCache.length){GL.recordError(1281);return 0}return stringiCache[index];default:GL.recordError(1280);return 0}}function _emscripten_glGetSynciv(sync,pname,bufSize,length,values){if(bufSize<0){GL.recordError(1281);return}if(!values){GL.recordError(1281);return}var ret=GLctx.getSyncParameter(GL.syncs[sync],pname);if(ret!==null){HEAP32[values>>2]=ret;if(length)HEAP32[length>>2]=1}}function _emscripten_glGetTexParameterfv(target,pname,params){if(!params){GL.recordError(1281);return}HEAPF32[params>>2]=GLctx.getTexParameter(target,pname)}function _emscripten_glGetTexParameteriv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.getTexParameter(target,pname)}function _emscripten_glGetTransformFeedbackVarying(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx["getTransformFeedbackVarying"](program,index);if(!info)return;if(name&&bufSize>0){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}function _emscripten_glGetUniformBlockIndex(program,uniformBlockName){return GLctx["getUniformBlockIndex"](GL.programs[program],UTF8ToString(uniformBlockName))}function _emscripten_glGetUniformIndices(program,uniformCount,uniformNames,uniformIndices){if(!uniformIndices){GL.recordError(1281);return}if(uniformCount>0&&(uniformNames==0||uniformIndices==0)){GL.recordError(1281);return}program=GL.programs[program];var names=[];for(var i=0;i<uniformCount;i++)names.push(UTF8ToString(HEAP32[uniformNames+i*4>>2]));var result=GLctx["getUniformIndices"](program,names);if(!result)return;var len=result.length;for(var i=0;i<len;i++){HEAP32[uniformIndices+i*4>>2]=result[i]}}function jstoi_q(str){return parseInt(str)}function webglGetLeftBracePos(name){return name.slice(-1)=="]"&&name.lastIndexOf("[")}function webglPrepareUniformLocationsBeforeFirstUse(program){var uniformLocsById=program.uniformLocsById,uniformSizeAndIdsByName=program.uniformSizeAndIdsByName,i,j;if(!uniformLocsById){program.uniformLocsById=uniformLocsById={};program.uniformArrayNamesById={};for(i=0;i<GLctx.getProgramParameter(program,35718);++i){var u=GLctx.getActiveUniform(program,i);var nm=u.name;var sz=u.size;var lb=webglGetLeftBracePos(nm);var arrayName=lb>0?nm.slice(0,lb):nm;var id=program.uniformIdCounter;program.uniformIdCounter+=sz;uniformSizeAndIdsByName[arrayName]=[sz,id];for(j=0;j<sz;++j){uniformLocsById[id]=j;program.uniformArrayNamesById[id++]=arrayName}}}}function _emscripten_glGetUniformLocation(program,name){name=UTF8ToString(name);if(program=GL.programs[program]){webglPrepareUniformLocationsBeforeFirstUse(program);var uniformLocsById=program.uniformLocsById;var arrayIndex=0;var uniformBaseName=name;var leftBrace=webglGetLeftBracePos(name);if(leftBrace>0){arrayIndex=jstoi_q(name.slice(leftBrace+1))>>>0;uniformBaseName=name.slice(0,leftBrace)}var sizeAndId=program.uniformSizeAndIdsByName[uniformBaseName];if(sizeAndId&&arrayIndex<sizeAndId[0]){arrayIndex+=sizeAndId[1];if(uniformLocsById[arrayIndex]=uniformLocsById[arrayIndex]||GLctx.getUniformLocation(program,name)){return arrayIndex}}}else{GL.recordError(1281)}return-1}function webglGetUniformLocation(location){var p=GLctx.currentProgram;if(p){var webglLoc=p.uniformLocsById[location];if(typeof webglLoc==="number"){p.uniformLocsById[location]=webglLoc=GLctx.getUniformLocation(p,p.uniformArrayNamesById[location]+(webglLoc>0?"["+webglLoc+"]":""))}return webglLoc}else{GL.recordError(1282)}}function emscriptenWebGLGetUniform(program,location,params,type){if(!params){GL.recordError(1281);return}program=GL.programs[program];webglPrepareUniformLocationsBeforeFirstUse(program);var data=GLctx.getUniform(program,webglGetUniformLocation(location));if(typeof data=="number"||typeof data=="boolean"){switch(type){case 0:HEAP32[params>>2]=data;break;case 2:HEAPF32[params>>2]=data;break}}else{for(var i=0;i<data.length;i++){switch(type){case 0:HEAP32[params+i*4>>2]=data[i];break;case 2:HEAPF32[params+i*4>>2]=data[i];break}}}}function _emscripten_glGetUniformfv(program,location,params){emscriptenWebGLGetUniform(program,location,params,2)}function _emscripten_glGetUniformiv(program,location,params){emscriptenWebGLGetUniform(program,location,params,0)}function _emscripten_glGetUniformuiv(program,location,params){emscriptenWebGLGetUniform(program,location,params,0)}function emscriptenWebGLGetVertexAttrib(index,pname,params,type){if(!params){GL.recordError(1281);return}if(GL.currentContext.clientBuffers[index].enabled){err("glGetVertexAttrib*v on client-side array: not supported, bad data returned")}var data=GLctx.getVertexAttrib(index,pname);if(pname==34975){HEAP32[params>>2]=data&&data["name"]}else if(typeof data=="number"||typeof data=="boolean"){switch(type){case 0:HEAP32[params>>2]=data;break;case 2:HEAPF32[params>>2]=data;break;case 5:HEAP32[params>>2]=Math.fround(data);break}}else{for(var i=0;i<data.length;i++){switch(type){case 0:HEAP32[params+i*4>>2]=data[i];break;case 2:HEAPF32[params+i*4>>2]=data[i];break;case 5:HEAP32[params+i*4>>2]=Math.fround(data[i]);break}}}}function _emscripten_glGetVertexAttribIiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,0)}function _emscripten_glGetVertexAttribIuiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,0)}function _emscripten_glGetVertexAttribPointerv(index,pname,pointer){if(!pointer){GL.recordError(1281);return}if(GL.currentContext.clientBuffers[index].enabled){err("glGetVertexAttribPointer on client-side array: not supported, bad data returned")}HEAP32[pointer>>2]=GLctx.getVertexAttribOffset(index,pname)}function _emscripten_glGetVertexAttribfv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,2)}function _emscripten_glGetVertexAttribiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,5)}function _emscripten_glHint(x0,x1){GLctx["hint"](x0,x1)}function _emscripten_glInvalidateFramebuffer(target,numAttachments,attachments){var list=tempFixedLengthArray[numAttachments];for(var i=0;i<numAttachments;i++){list[i]=HEAP32[attachments+i*4>>2]}GLctx["invalidateFramebuffer"](target,list)}function _emscripten_glInvalidateSubFramebuffer(target,numAttachments,attachments,x,y,width,height){var list=tempFixedLengthArray[numAttachments];for(var i=0;i<numAttachments;i++){list[i]=HEAP32[attachments+i*4>>2]}GLctx["invalidateSubFramebuffer"](target,list,x,y,width,height)}function _emscripten_glIsBuffer(buffer){var b=GL.buffers[buffer];if(!b)return 0;return GLctx.isBuffer(b)}function _emscripten_glIsEnabled(x0){return GLctx["isEnabled"](x0)}function _emscripten_glIsFramebuffer(framebuffer){var fb=GL.framebuffers[framebuffer];if(!fb)return 0;return GLctx.isFramebuffer(fb)}function _emscripten_glIsProgram(program){program=GL.programs[program];if(!program)return 0;return GLctx.isProgram(program)}function _emscripten_glIsQuery(id){var query=GL.queries[id];if(!query)return 0;return GLctx["isQuery"](query)}function _emscripten_glIsQueryEXT(id){var query=GL.queries[id];if(!query)return 0;return GLctx.disjointTimerQueryExt["isQueryEXT"](query)}function _emscripten_glIsRenderbuffer(renderbuffer){var rb=GL.renderbuffers[renderbuffer];if(!rb)return 0;return GLctx.isRenderbuffer(rb)}function _emscripten_glIsSampler(id){var sampler=GL.samplers[id];if(!sampler)return 0;return GLctx["isSampler"](sampler)}function _emscripten_glIsShader(shader){var s=GL.shaders[shader];if(!s)return 0;return GLctx.isShader(s)}function _emscripten_glIsSync(sync){return GLctx.isSync(GL.syncs[sync])}function _emscripten_glIsTexture(id){var texture=GL.textures[id];if(!texture)return 0;return GLctx.isTexture(texture)}function _emscripten_glIsTransformFeedback(id){return GLctx["isTransformFeedback"](GL.transformFeedbacks[id])}function _emscripten_glIsVertexArray(array){var vao=GL.vaos[array];if(!vao)return 0;return GLctx["isVertexArray"](vao)}function _emscripten_glIsVertexArrayOES(array){var vao=GL.vaos[array];if(!vao)return 0;return GLctx["isVertexArray"](vao)}function _emscripten_glLineWidth(x0){GLctx["lineWidth"](x0)}function _emscripten_glLinkProgram(program){program=GL.programs[program];GLctx.linkProgram(program);program.uniformLocsById=0;program.uniformSizeAndIdsByName={}}function _emscripten_glMapBufferRange(target,offset,length,access){if(access!=26&&access!=10){err("glMapBufferRange is only supported when access is MAP_WRITE|INVALIDATE_BUFFER");return 0}if(!emscriptenWebGLValidateMapBufferTarget(target)){GL.recordError(1280);err("GL_INVALID_ENUM in glMapBufferRange");return 0}var mem=_malloc(length);if(!mem)return 0;GL.mappedBuffers[emscriptenWebGLGetBufferBinding(target)]={offset:offset,length:length,mem:mem,access:access};return mem}function _emscripten_glPauseTransformFeedback(){GLctx["pauseTransformFeedback"]()}function _emscripten_glPixelStorei(pname,param){if(pname==3317){GL.unpackAlignment=param}GLctx.pixelStorei(pname,param)}function _emscripten_glPolygonOffset(x0,x1){GLctx["polygonOffset"](x0,x1)}function _emscripten_glProgramBinary(program,binaryFormat,binary,length){GL.recordError(1280)}function _emscripten_glProgramParameteri(program,pname,value){GL.recordError(1280)}function _emscripten_glQueryCounterEXT(id,target){GLctx.disjointTimerQueryExt["queryCounterEXT"](GL.queries[id],target)}function _emscripten_glReadBuffer(x0){GLctx["readBuffer"](x0)}function computeUnpackAlignedImageSize(width,height,sizePerPixel,alignment){function roundedToNextMultipleOf(x,y){return x+y-1&-y}var plainRowSize=width*sizePerPixel;var alignedRowSize=roundedToNextMultipleOf(plainRowSize,alignment);return height*alignedRowSize}function __colorChannelsInGlTextureFormat(format){var colorChannels={5:3,6:4,8:2,29502:3,29504:4,26917:2,26918:2,29846:3,29847:4};return colorChannels[format-6402]||1}function heapObjectForWebGLType(type){type-=5120;if(type==0)return HEAP8;if(type==1)return HEAPU8;if(type==2)return HEAP16;if(type==4)return HEAP32;if(type==6)return HEAPF32;if(type==5||type==28922||type==28520||type==30779||type==30782)return HEAPU32;return HEAPU16}function heapAccessShiftForWebGLHeap(heap){return 31-Math.clz32(heap.BYTES_PER_ELEMENT)}function emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat){var heap=heapObjectForWebGLType(type);var shift=heapAccessShiftForWebGLHeap(heap);var byteSize=1<<shift;var sizePerPixel=__colorChannelsInGlTextureFormat(format)*byteSize;var bytes=computeUnpackAlignedImageSize(width,height,sizePerPixel,GL.unpackAlignment);return heap.subarray(pixels>>shift,pixels+bytes>>shift)}function _emscripten_glReadPixels(x,y,width,height,format,type,pixels){if(true){if(GLctx.currentPixelPackBufferBinding){GLctx.readPixels(x,y,width,height,format,type,pixels)}else{var heap=heapObjectForWebGLType(type);GLctx.readPixels(x,y,width,height,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap))}return}var pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,format);if(!pixelData){GL.recordError(1280);return}GLctx.readPixels(x,y,width,height,format,type,pixelData)}function _emscripten_glReleaseShaderCompiler(){}function _emscripten_glRenderbufferStorage(x0,x1,x2,x3){GLctx["renderbufferStorage"](x0,x1,x2,x3)}function _emscripten_glRenderbufferStorageMultisample(x0,x1,x2,x3,x4){GLctx["renderbufferStorageMultisample"](x0,x1,x2,x3,x4)}function _emscripten_glResumeTransformFeedback(){GLctx["resumeTransformFeedback"]()}function _emscripten_glSampleCoverage(value,invert){GLctx.sampleCoverage(value,!!invert)}function _emscripten_glSamplerParameterf(sampler,pname,param){GLctx["samplerParameterf"](GL.samplers[sampler],pname,param)}function _emscripten_glSamplerParameterfv(sampler,pname,params){var param=HEAPF32[params>>2];GLctx["samplerParameterf"](GL.samplers[sampler],pname,param)}function _emscripten_glSamplerParameteri(sampler,pname,param){GLctx["samplerParameteri"](GL.samplers[sampler],pname,param)}function _emscripten_glSamplerParameteriv(sampler,pname,params){var param=HEAP32[params>>2];GLctx["samplerParameteri"](GL.samplers[sampler],pname,param)}function _emscripten_glScissor(x0,x1,x2,x3){GLctx["scissor"](x0,x1,x2,x3)}function _emscripten_glShaderBinary(){GL.recordError(1280)}function _emscripten_glShaderSource(shader,count,string,length){var source=GL.getSource(shader,count,string,length);GLctx.shaderSource(GL.shaders[shader],source)}function _emscripten_glStencilFunc(x0,x1,x2){GLctx["stencilFunc"](x0,x1,x2)}function _emscripten_glStencilFuncSeparate(x0,x1,x2,x3){GLctx["stencilFuncSeparate"](x0,x1,x2,x3)}function _emscripten_glStencilMask(x0){GLctx["stencilMask"](x0)}function _emscripten_glStencilMaskSeparate(x0,x1){GLctx["stencilMaskSeparate"](x0,x1)}function _emscripten_glStencilOp(x0,x1,x2){GLctx["stencilOp"](x0,x1,x2)}function _emscripten_glStencilOpSeparate(x0,x1,x2,x3){GLctx["stencilOpSeparate"](x0,x1,x2,x3)}function _emscripten_glTexImage2D(target,level,internalFormat,width,height,border,format,type,pixels){if(true){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels)}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap))}else{GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,null)}return}GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels?emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat):null)}function _emscripten_glTexImage3D(target,level,internalFormat,width,height,depth,border,format,type,pixels){if(GLctx.currentPixelUnpackBufferBinding){GLctx["texImage3D"](target,level,internalFormat,width,height,depth,border,format,type,pixels)}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx["texImage3D"](target,level,internalFormat,width,height,depth,border,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap))}else{GLctx["texImage3D"](target,level,internalFormat,width,height,depth,border,format,type,null)}}function _emscripten_glTexParameterf(x0,x1,x2){GLctx["texParameterf"](x0,x1,x2)}function _emscripten_glTexParameterfv(target,pname,params){var param=HEAPF32[params>>2];GLctx.texParameterf(target,pname,param)}function _emscripten_glTexParameteri(x0,x1,x2){GLctx["texParameteri"](x0,x1,x2)}function _emscripten_glTexParameteriv(target,pname,params){var param=HEAP32[params>>2];GLctx.texParameteri(target,pname,param)}function _emscripten_glTexStorage2D(x0,x1,x2,x3,x4){GLctx["texStorage2D"](x0,x1,x2,x3,x4)}function _emscripten_glTexStorage3D(x0,x1,x2,x3,x4,x5){GLctx["texStorage3D"](x0,x1,x2,x3,x4,x5)}function _emscripten_glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels){if(true){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels)}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap))}else{GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,null)}return}var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,0);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixelData)}function _emscripten_glTexSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,pixels){if(GLctx.currentPixelUnpackBufferBinding){GLctx["texSubImage3D"](target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,pixels)}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx["texSubImage3D"](target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap))}else{GLctx["texSubImage3D"](target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,null)}}function _emscripten_glTransformFeedbackVaryings(program,count,varyings,bufferMode){program=GL.programs[program];var vars=[];for(var i=0;i<count;i++)vars.push(UTF8ToString(HEAP32[varyings+i*4>>2]));GLctx["transformFeedbackVaryings"](program,vars,bufferMode)}function _emscripten_glUniform1f(location,v0){GLctx.uniform1f(webglGetUniformLocation(location),v0)}function _emscripten_glUniform1fv(location,count,value){GLctx.uniform1fv(webglGetUniformLocation(location),HEAPF32,value>>2,count)}function _emscripten_glUniform1i(location,v0){GLctx.uniform1i(webglGetUniformLocation(location),v0)}function _emscripten_glUniform1iv(location,count,value){GLctx.uniform1iv(webglGetUniformLocation(location),HEAP32,value>>2,count)}function _emscripten_glUniform1ui(location,v0){GLctx.uniform1ui(webglGetUniformLocation(location),v0)}function _emscripten_glUniform1uiv(location,count,value){GLctx.uniform1uiv(webglGetUniformLocation(location),HEAPU32,value>>2,count)}function _emscripten_glUniform2f(location,v0,v1){GLctx.uniform2f(webglGetUniformLocation(location),v0,v1)}function _emscripten_glUniform2fv(location,count,value){GLctx.uniform2fv(webglGetUniformLocation(location),HEAPF32,value>>2,count*2)}function _emscripten_glUniform2i(location,v0,v1){GLctx.uniform2i(webglGetUniformLocation(location),v0,v1)}function _emscripten_glUniform2iv(location,count,value){GLctx.uniform2iv(webglGetUniformLocation(location),HEAP32,value>>2,count*2)}function _emscripten_glUniform2ui(location,v0,v1){GLctx.uniform2ui(webglGetUniformLocation(location),v0,v1)}function _emscripten_glUniform2uiv(location,count,value){GLctx.uniform2uiv(webglGetUniformLocation(location),HEAPU32,value>>2,count*2)}function _emscripten_glUniform3f(location,v0,v1,v2){GLctx.uniform3f(webglGetUniformLocation(location),v0,v1,v2)}function _emscripten_glUniform3fv(location,count,value){GLctx.uniform3fv(webglGetUniformLocation(location),HEAPF32,value>>2,count*3)}function _emscripten_glUniform3i(location,v0,v1,v2){GLctx.uniform3i(webglGetUniformLocation(location),v0,v1,v2)}function _emscripten_glUniform3iv(location,count,value){GLctx.uniform3iv(webglGetUniformLocation(location),HEAP32,value>>2,count*3)}function _emscripten_glUniform3ui(location,v0,v1,v2){GLctx.uniform3ui(webglGetUniformLocation(location),v0,v1,v2)}function _emscripten_glUniform3uiv(location,count,value){GLctx.uniform3uiv(webglGetUniformLocation(location),HEAPU32,value>>2,count*3)}function _emscripten_glUniform4f(location,v0,v1,v2,v3){GLctx.uniform4f(webglGetUniformLocation(location),v0,v1,v2,v3)}function _emscripten_glUniform4fv(location,count,value){GLctx.uniform4fv(webglGetUniformLocation(location),HEAPF32,value>>2,count*4)}function _emscripten_glUniform4i(location,v0,v1,v2,v3){GLctx.uniform4i(webglGetUniformLocation(location),v0,v1,v2,v3)}function _emscripten_glUniform4iv(location,count,value){GLctx.uniform4iv(webglGetUniformLocation(location),HEAP32,value>>2,count*4)}function _emscripten_glUniform4ui(location,v0,v1,v2,v3){GLctx.uniform4ui(webglGetUniformLocation(location),v0,v1,v2,v3)}function _emscripten_glUniform4uiv(location,count,value){GLctx.uniform4uiv(webglGetUniformLocation(location),HEAPU32,value>>2,count*4)}function _emscripten_glUniformBlockBinding(program,uniformBlockIndex,uniformBlockBinding){program=GL.programs[program];GLctx["uniformBlockBinding"](program,uniformBlockIndex,uniformBlockBinding)}function _emscripten_glUniformMatrix2fv(location,count,transpose,value){GLctx.uniformMatrix2fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*4)}function _emscripten_glUniformMatrix2x3fv(location,count,transpose,value){GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*6)}function _emscripten_glUniformMatrix2x4fv(location,count,transpose,value){GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*8)}function _emscripten_glUniformMatrix3fv(location,count,transpose,value){GLctx.uniformMatrix3fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*9)}function _emscripten_glUniformMatrix3x2fv(location,count,transpose,value){GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*6)}function _emscripten_glUniformMatrix3x4fv(location,count,transpose,value){GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*12)}function _emscripten_glUniformMatrix4fv(location,count,transpose,value){GLctx.uniformMatrix4fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*16)}function _emscripten_glUniformMatrix4x2fv(location,count,transpose,value){GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*8)}function _emscripten_glUniformMatrix4x3fv(location,count,transpose,value){GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*12)}function _emscripten_glUnmapBuffer(target){if(!emscriptenWebGLValidateMapBufferTarget(target)){GL.recordError(1280);err("GL_INVALID_ENUM in glUnmapBuffer");return 0}var buffer=emscriptenWebGLGetBufferBinding(target);var mapping=GL.mappedBuffers[buffer];if(!mapping){GL.recordError(1282);err("buffer was never mapped in glUnmapBuffer");return 0}GL.mappedBuffers[buffer]=null;if(!(mapping.access&16))if(true){GLctx.bufferSubData(target,mapping.offset,HEAPU8,mapping.mem,mapping.length)}else{GLctx.bufferSubData(target,mapping.offset,HEAPU8.subarray(mapping.mem,mapping.mem+mapping.length))}_free(mapping.mem);return 1}function _emscripten_glUseProgram(program){program=GL.programs[program];GLctx.useProgram(program);GLctx.currentProgram=program}function _emscripten_glValidateProgram(program){GLctx.validateProgram(GL.programs[program])}function _emscripten_glVertexAttrib1f(x0,x1){GLctx["vertexAttrib1f"](x0,x1)}function _emscripten_glVertexAttrib1fv(index,v){GLctx.vertexAttrib1f(index,HEAPF32[v>>2])}function _emscripten_glVertexAttrib2f(x0,x1,x2){GLctx["vertexAttrib2f"](x0,x1,x2)}function _emscripten_glVertexAttrib2fv(index,v){GLctx.vertexAttrib2f(index,HEAPF32[v>>2],HEAPF32[v+4>>2])}function _emscripten_glVertexAttrib3f(x0,x1,x2,x3){GLctx["vertexAttrib3f"](x0,x1,x2,x3)}function _emscripten_glVertexAttrib3fv(index,v){GLctx.vertexAttrib3f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2])}function _emscripten_glVertexAttrib4f(x0,x1,x2,x3,x4){GLctx["vertexAttrib4f"](x0,x1,x2,x3,x4)}function _emscripten_glVertexAttrib4fv(index,v){GLctx.vertexAttrib4f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2],HEAPF32[v+12>>2])}function _emscripten_glVertexAttribDivisor(index,divisor){GLctx["vertexAttribDivisor"](index,divisor)}function _emscripten_glVertexAttribDivisorANGLE(index,divisor){GLctx["vertexAttribDivisor"](index,divisor)}function _emscripten_glVertexAttribDivisorARB(index,divisor){GLctx["vertexAttribDivisor"](index,divisor)}function _emscripten_glVertexAttribDivisorEXT(index,divisor){GLctx["vertexAttribDivisor"](index,divisor)}function _emscripten_glVertexAttribDivisorNV(index,divisor){GLctx["vertexAttribDivisor"](index,divisor)}function _emscripten_glVertexAttribI4i(x0,x1,x2,x3,x4){GLctx["vertexAttribI4i"](x0,x1,x2,x3,x4)}function _emscripten_glVertexAttribI4iv(index,v){GLctx.vertexAttribI4i(index,HEAP32[v>>2],HEAP32[v+4>>2],HEAP32[v+8>>2],HEAP32[v+12>>2])}function _emscripten_glVertexAttribI4ui(x0,x1,x2,x3,x4){GLctx["vertexAttribI4ui"](x0,x1,x2,x3,x4)}function _emscripten_glVertexAttribI4uiv(index,v){GLctx.vertexAttribI4ui(index,HEAPU32[v>>2],HEAPU32[v+4>>2],HEAPU32[v+8>>2],HEAPU32[v+12>>2])}function _emscripten_glVertexAttribIPointer(index,size,type,stride,ptr){var cb=GL.currentContext.clientBuffers[index];if(!GLctx.currentArrayBufferBinding){cb.size=size;cb.type=type;cb.normalized=false;cb.stride=stride;cb.ptr=ptr;cb.clientside=true;cb.vertexAttribPointerAdaptor=function(index,size,type,normalized,stride,ptr){this.vertexAttribIPointer(index,size,type,stride,ptr)};return}cb.clientside=false;GLctx["vertexAttribIPointer"](index,size,type,stride,ptr)}function _emscripten_glVertexAttribPointer(index,size,type,normalized,stride,ptr){var cb=GL.currentContext.clientBuffers[index];if(!GLctx.currentArrayBufferBinding){cb.size=size;cb.type=type;cb.normalized=normalized;cb.stride=stride;cb.ptr=ptr;cb.clientside=true;cb.vertexAttribPointerAdaptor=function(index,size,type,normalized,stride,ptr){this.vertexAttribPointer(index,size,type,normalized,stride,ptr)};return}cb.clientside=false;GLctx.vertexAttribPointer(index,size,type,!!normalized,stride,ptr)}function _emscripten_glViewport(x0,x1,x2,x3){GLctx["viewport"](x0,x1,x2,x3)}function _emscripten_glWaitSync(sync,flags,timeoutLo,timeoutHi){GLctx.waitSync(GL.syncs[sync],flags,convertI32PairToI53(timeoutLo,timeoutHi))}function _emscripten_has_asyncify(){return 1}function _longjmp(env,value){_setThrew(env,value||1);throw"longjmp"}function _emscripten_longjmp(a0,a1){return _longjmp(a0,a1)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function doRequestFullscreen(target,strategy){if(!JSEvents.fullscreenEnabled())return-1;target=findEventTarget(target);if(!target)return-4;if(!target.requestFullscreen&&!target.webkitRequestFullscreen){return-3}var canPerformRequests=JSEvents.canPerformEventHandlerRequests();if(!canPerformRequests){if(strategy.deferUntilInEventHandler){JSEvents.deferCall(_JSEvents_requestFullscreen,1,[target,strategy]);return 1}else{return-2}}return _JSEvents_requestFullscreen(target,strategy)}function _emscripten_request_fullscreen_strategy(target,deferUntilInEventHandler,fullscreenStrategy){var strategy={scaleMode:HEAP32[fullscreenStrategy>>2],canvasResolutionScaleMode:HEAP32[fullscreenStrategy+4>>2],filteringMode:HEAP32[fullscreenStrategy+8>>2],deferUntilInEventHandler:deferUntilInEventHandler,canvasResizedCallback:HEAP32[fullscreenStrategy+12>>2],canvasResizedCallbackUserData:HEAP32[fullscreenStrategy+16>>2]};return doRequestFullscreen(target,strategy)}function _emscripten_request_pointerlock(target,deferUntilInEventHandler){target=findEventTarget(target);if(!target)return-4;if(!target.requestPointerLock&&!target.msRequestPointerLock){return-1}var canPerformRequests=JSEvents.canPerformEventHandlerRequests();if(!canPerformRequests){if(deferUntilInEventHandler){JSEvents.deferCall(requestPointerLock,2,[target]);return 1}else{return-2}}return requestPointerLock(target)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}function _emscripten_sample_gamepad_data(){return(JSEvents.lastGamepadState=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads():null)?0:-1}function registerBeforeUnloadEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){var beforeUnloadEventHandlerFunc=function(ev){var e=ev||event;var confirmationMessage=function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3])}(eventTypeId,0,userData);if(confirmationMessage){confirmationMessage=UTF8ToString(confirmationMessage)}if(confirmationMessage){e.preventDefault();e.returnValue=confirmationMessage;return confirmationMessage}};var eventHandler={target:findEventTarget(target),eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:beforeUnloadEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}function _emscripten_set_beforeunload_callback_on_thread(userData,callbackfunc,targetThread){if(typeof onbeforeunload==="undefined")return-1;if(targetThread!==1)return-5;registerBeforeUnloadEventCallback(2,userData,true,callbackfunc,28,"beforeunload");return 0}function registerFocusEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.focusEvent)JSEvents.focusEvent=_malloc(256);var focusEventHandlerFunc=function(ev){var e=ev||event;var nodeName=JSEvents.getNodeNameForTarget(e.target);var id=e.target.id?e.target.id:"";var focusEvent=JSEvents.focusEvent;stringToUTF8(nodeName,focusEvent+0,128);stringToUTF8(id,focusEvent+128,128);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3])}(eventTypeId,focusEvent,userData))e.preventDefault()};var eventHandler={target:findEventTarget(target),eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:focusEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}function _emscripten_set_blur_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerFocusEventCallback(target,userData,useCapture,callbackfunc,12,"blur",targetThread);return 0}function _emscripten_set_element_css_size(target,width,height){target=findEventTarget(target);if(!target)return-4;target.style.width=width+"px";target.style.height=height+"px";return 0}function _emscripten_set_focus_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerFocusEventCallback(target,userData,useCapture,callbackfunc,13,"focus",targetThread);return 0}function fillFullscreenChangeEventData(eventStruct){var fullscreenElement=document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement;var isFullscreen=!!fullscreenElement;HEAP32[eventStruct>>2]=isFullscreen;HEAP32[eventStruct+4>>2]=JSEvents.fullscreenEnabled();var reportedElement=isFullscreen?fullscreenElement:JSEvents.previousFullscreenElement;var nodeName=JSEvents.getNodeNameForTarget(reportedElement);var id=reportedElement&&reportedElement.id?reportedElement.id:"";stringToUTF8(nodeName,eventStruct+8,128);stringToUTF8(id,eventStruct+136,128);HEAP32[eventStruct+264>>2]=reportedElement?reportedElement.clientWidth:0;HEAP32[eventStruct+268>>2]=reportedElement?reportedElement.clientHeight:0;HEAP32[eventStruct+272>>2]=screen.width;HEAP32[eventStruct+276>>2]=screen.height;if(isFullscreen){JSEvents.previousFullscreenElement=fullscreenElement}}function registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.fullscreenChangeEvent)JSEvents.fullscreenChangeEvent=_malloc(280);var fullscreenChangeEventhandlerFunc=function(ev){var e=ev||event;var fullscreenChangeEvent=JSEvents.fullscreenChangeEvent;fillFullscreenChangeEventData(fullscreenChangeEvent);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3])}(eventTypeId,fullscreenChangeEvent,userData))e.preventDefault()};var eventHandler={target:target,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:fullscreenChangeEventhandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}function _emscripten_set_fullscreenchange_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){if(!JSEvents.fullscreenEnabled())return-1;target=findEventTarget(target);if(!target)return-4;registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"fullscreenchange",targetThread);registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"webkitfullscreenchange",targetThread);return 0}function registerGamepadEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.gamepadEvent)JSEvents.gamepadEvent=_malloc(1432);var gamepadEventHandlerFunc=function(ev){var e=ev||event;var gamepadEvent=JSEvents.gamepadEvent;fillGamepadEventData(gamepadEvent,e["gamepad"]);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3])}(eventTypeId,gamepadEvent,userData))e.preventDefault()};var eventHandler={target:findEventTarget(target),allowsDeferredCalls:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:gamepadEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}function _emscripten_set_gamepadconnected_callback_on_thread(userData,useCapture,callbackfunc,targetThread){if(!navigator.getGamepads&&!navigator.webkitGetGamepads)return-1;registerGamepadEventCallback(2,userData,useCapture,callbackfunc,26,"gamepadconnected",targetThread);return 0}function _emscripten_set_gamepaddisconnected_callback_on_thread(userData,useCapture,callbackfunc,targetThread){if(!navigator.getGamepads&&!navigator.webkitGetGamepads)return-1;registerGamepadEventCallback(2,userData,useCapture,callbackfunc,27,"gamepaddisconnected",targetThread);return 0}function registerKeyEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.keyEvent)JSEvents.keyEvent=_malloc(164);var keyEventHandlerFunc=function(e){var keyEventData=JSEvents.keyEvent;var idx=keyEventData>>2;HEAP32[idx+0]=e.location;HEAP32[idx+1]=e.ctrlKey;HEAP32[idx+2]=e.shiftKey;HEAP32[idx+3]=e.altKey;HEAP32[idx+4]=e.metaKey;HEAP32[idx+5]=e.repeat;HEAP32[idx+6]=e.charCode;HEAP32[idx+7]=e.keyCode;HEAP32[idx+8]=e.which;stringToUTF8(e.key||"",keyEventData+36,32);stringToUTF8(e.code||"",keyEventData+68,32);stringToUTF8(e.char||"",keyEventData+100,32);stringToUTF8(e.locale||"",keyEventData+132,32);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3])}(eventTypeId,keyEventData,userData))e.preventDefault()};var eventHandler={target:findEventTarget(target),allowsDeferredCalls:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:keyEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}function _emscripten_set_keydown_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerKeyEventCallback(target,userData,useCapture,callbackfunc,2,"keydown",targetThread);return 0}function _emscripten_set_keypress_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerKeyEventCallback(target,userData,useCapture,callbackfunc,1,"keypress",targetThread);return 0}function _emscripten_set_keyup_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerKeyEventCallback(target,userData,useCapture,callbackfunc,3,"keyup",targetThread);return 0}function fillMouseEventData(eventStruct,e,target){var idx=eventStruct>>2;HEAP32[idx+0]=e.screenX;HEAP32[idx+1]=e.screenY;HEAP32[idx+2]=e.clientX;HEAP32[idx+3]=e.clientY;HEAP32[idx+4]=e.ctrlKey;HEAP32[idx+5]=e.shiftKey;HEAP32[idx+6]=e.altKey;HEAP32[idx+7]=e.metaKey;HEAP16[idx*2+16]=e.button;HEAP16[idx*2+17]=e.buttons;HEAP32[idx+9]=e["movementX"];HEAP32[idx+10]=e["movementY"];var rect=getBoundingClientRect(target);HEAP32[idx+11]=e.clientX-rect.left;HEAP32[idx+12]=e.clientY-rect.top}function registerMouseEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.mouseEvent)JSEvents.mouseEvent=_malloc(64);target=findEventTarget(target);var mouseEventHandlerFunc=function(ev){var e=ev||event;fillMouseEventData(JSEvents.mouseEvent,e,target);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3])}(eventTypeId,JSEvents.mouseEvent,userData))e.preventDefault()};var eventHandler={target:target,allowsDeferredCalls:eventTypeString!="mousemove"&&eventTypeString!="mouseenter"&&eventTypeString!="mouseleave",eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:mouseEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}function _emscripten_set_mousedown_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerMouseEventCallback(target,userData,useCapture,callbackfunc,5,"mousedown",targetThread);return 0}function _emscripten_set_mouseenter_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerMouseEventCallback(target,userData,useCapture,callbackfunc,33,"mouseenter",targetThread);return 0}function _emscripten_set_mouseleave_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerMouseEventCallback(target,userData,useCapture,callbackfunc,34,"mouseleave",targetThread);return 0}function _emscripten_set_mousemove_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerMouseEventCallback(target,userData,useCapture,callbackfunc,8,"mousemove",targetThread);return 0}function _emscripten_set_mouseup_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerMouseEventCallback(target,userData,useCapture,callbackfunc,6,"mouseup",targetThread);return 0}function fillPointerlockChangeEventData(eventStruct){var pointerLockElement=document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement||document.msPointerLockElement;var isPointerlocked=!!pointerLockElement;HEAP32[eventStruct>>2]=isPointerlocked;var nodeName=JSEvents.getNodeNameForTarget(pointerLockElement);var id=pointerLockElement&&pointerLockElement.id?pointerLockElement.id:"";stringToUTF8(nodeName,eventStruct+4,128);stringToUTF8(id,eventStruct+132,128)}function registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.pointerlockChangeEvent)JSEvents.pointerlockChangeEvent=_malloc(260);var pointerlockChangeEventHandlerFunc=function(ev){var e=ev||event;var pointerlockChangeEvent=JSEvents.pointerlockChangeEvent;fillPointerlockChangeEventData(pointerlockChangeEvent);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3])}(eventTypeId,pointerlockChangeEvent,userData))e.preventDefault()};var eventHandler={target:target,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:pointerlockChangeEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}function _emscripten_set_pointerlockchange_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){if(!document||!document.body||!document.body.requestPointerLock&&!document.body.mozRequestPointerLock&&!document.body.webkitRequestPointerLock&&!document.body.msRequestPointerLock){return-1}target=findEventTarget(target);if(!target)return-4;registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"pointerlockchange",targetThread);registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"mozpointerlockchange",targetThread);registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"webkitpointerlockchange",targetThread);registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"mspointerlockchange",targetThread);return 0}function registerUiEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.uiEvent)JSEvents.uiEvent=_malloc(36);target=findEventTarget(target);var uiEventHandlerFunc=function(ev){var e=ev||event;if(e.target!=target){return}var b=document.body;if(!b){return}var uiEvent=JSEvents.uiEvent;HEAP32[uiEvent>>2]=e.detail;HEAP32[uiEvent+4>>2]=b.clientWidth;HEAP32[uiEvent+8>>2]=b.clientHeight;HEAP32[uiEvent+12>>2]=innerWidth;HEAP32[uiEvent+16>>2]=innerHeight;HEAP32[uiEvent+20>>2]=outerWidth;HEAP32[uiEvent+24>>2]=outerHeight;HEAP32[uiEvent+28>>2]=pageXOffset;HEAP32[uiEvent+32>>2]=pageYOffset;if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3])}(eventTypeId,uiEvent,userData))e.preventDefault()};var eventHandler={target:target,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:uiEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}function _emscripten_set_resize_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerUiEventCallback(target,userData,useCapture,callbackfunc,10,"resize",targetThread);return 0}function registerTouchEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.touchEvent)JSEvents.touchEvent=_malloc(1684);target=findEventTarget(target);var touchEventHandlerFunc=function(e){var touches={};var et=e.touches;for(var i=0;i<et.length;++i){var touch=et[i];touches[touch.identifier]=touch}et=e.changedTouches;for(var i=0;i<et.length;++i){var touch=et[i];touch.isChanged=1;touches[touch.identifier]=touch}et=e.targetTouches;for(var i=0;i<et.length;++i){touches[et[i].identifier].onTarget=1}var touchEvent=JSEvents.touchEvent;var idx=touchEvent>>2;HEAP32[idx+1]=e.ctrlKey;HEAP32[idx+2]=e.shiftKey;HEAP32[idx+3]=e.altKey;HEAP32[idx+4]=e.metaKey;idx+=5;var targetRect=getBoundingClientRect(target);var numTouches=0;for(var i in touches){var t=touches[i];HEAP32[idx+0]=t.identifier;HEAP32[idx+1]=t.screenX;HEAP32[idx+2]=t.screenY;HEAP32[idx+3]=t.clientX;HEAP32[idx+4]=t.clientY;HEAP32[idx+5]=t.pageX;HEAP32[idx+6]=t.pageY;HEAP32[idx+7]=t.isChanged;HEAP32[idx+8]=t.onTarget;HEAP32[idx+9]=t.clientX-targetRect.left;HEAP32[idx+10]=t.clientY-targetRect.top;idx+=13;if(++numTouches>31){break}}HEAP32[touchEvent>>2]=numTouches;if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3])}(eventTypeId,touchEvent,userData))e.preventDefault()};var eventHandler={target:target,allowsDeferredCalls:eventTypeString=="touchstart"||eventTypeString=="touchend",eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:touchEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}function _emscripten_set_touchcancel_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerTouchEventCallback(target,userData,useCapture,callbackfunc,25,"touchcancel",targetThread);return 0}function _emscripten_set_touchend_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerTouchEventCallback(target,userData,useCapture,callbackfunc,23,"touchend",targetThread);return 0}function _emscripten_set_touchmove_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerTouchEventCallback(target,userData,useCapture,callbackfunc,24,"touchmove",targetThread);return 0}function _emscripten_set_touchstart_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerTouchEventCallback(target,userData,useCapture,callbackfunc,22,"touchstart",targetThread);return 0}function fillVisibilityChangeEventData(eventStruct){var visibilityStates=["hidden","visible","prerender","unloaded"];var visibilityState=visibilityStates.indexOf(document.visibilityState);HEAP32[eventStruct>>2]=document.hidden;HEAP32[eventStruct+4>>2]=visibilityState}function registerVisibilityChangeEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.visibilityChangeEvent)JSEvents.visibilityChangeEvent=_malloc(8);var visibilityChangeEventHandlerFunc=function(ev){var e=ev||event;var visibilityChangeEvent=JSEvents.visibilityChangeEvent;fillVisibilityChangeEventData(visibilityChangeEvent);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3])}(eventTypeId,visibilityChangeEvent,userData))e.preventDefault()};var eventHandler={target:target,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:visibilityChangeEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}function _emscripten_set_visibilitychange_callback_on_thread(userData,useCapture,callbackfunc,targetThread){registerVisibilityChangeEventCallback(specialHTMLTargets[1],userData,useCapture,callbackfunc,21,"visibilitychange",targetThread);return 0}function registerWheelEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.wheelEvent)JSEvents.wheelEvent=_malloc(96);var wheelHandlerFunc=function(ev){var e=ev||event;var wheelEvent=JSEvents.wheelEvent;fillMouseEventData(wheelEvent,e,target);HEAPF64[wheelEvent+64>>3]=e["deltaX"];HEAPF64[wheelEvent+72>>3]=e["deltaY"];HEAPF64[wheelEvent+80>>3]=e["deltaZ"];HEAP32[wheelEvent+88>>2]=e["deltaMode"];if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3])}(eventTypeId,wheelEvent,userData))e.preventDefault()};var eventHandler={target:target,allowsDeferredCalls:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:wheelHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}function _emscripten_set_wheel_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){target=findEventTarget(target);if(typeof target.onwheel!=="undefined"){registerWheelEventCallback(target,userData,useCapture,callbackfunc,9,"wheel",targetThread);return 0}else{return-1}}function _emscripten_sleep(ms){Asyncify.handleSleep(function(wakeUp){Browser.safeSetTimeout(wakeUp,ms)})}function _emscripten_thread_sleep(msecs){var start=_emscripten_get_now();while(_emscripten_get_now()-start<msecs){}}var ENV={};function getExecutableName(){return thisProgram||"./this.program"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator==="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8";var env={"USER":"web_user","LOGNAME":"web_user","PATH":"/","PWD":"/","HOME":"/home/web_user","LANG":lang,"_":getExecutableName()};for(var x in ENV){env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+"="+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function _environ_get(__environ,environ_buf){try{var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAP32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _environ_sizes_get(penviron_count,penviron_buf_size){try{var strings=getEnvStrings();HEAP32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAP32[penviron_buf_size>>2]=bufSize;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_fdstat_get(fd,pbuf){try{var stream=SYSCALLS.getStreamFromFD(fd);var type=stream.tty?2:FS.isDir(stream.mode)?3:FS.isLink(stream.mode)?7:4;HEAP8[pbuf>>0]=type;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var stream=SYSCALLS.getStreamFromFD(fd);var HIGH_OFFSET=4294967296;var offset=offset_high*HIGH_OFFSET+(offset_low>>>0);var DOUBLE_LIMIT=9007199254740992;if(offset<=-DOUBLE_LIMIT||offset>=DOUBLE_LIMIT){return-61}FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doWritev(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _getTempRet0(){return getTempRet0()}function _getentropy(buffer,size){if(!_getentropy.randomDevice){_getentropy.randomDevice=getRandomDevice()}for(var i=0;i<size;i++){HEAP8[buffer+i>>0]=_getentropy.randomDevice()}return 0}function _gettimeofday(ptr){var now=Date.now();HEAP32[ptr>>2]=now/1e3|0;HEAP32[ptr+4>>2]=now%1e3*1e3|0;return 0}function _glActiveTexture(x0){GLctx["activeTexture"](x0)}function _glAttachShader(program,shader){GLctx.attachShader(GL.programs[program],GL.shaders[shader])}function _glBindBuffer(target,buffer){if(target==34962){GLctx.currentArrayBufferBinding=buffer}else if(target==34963){GLctx.currentElementArrayBufferBinding=buffer}if(target==35051){GLctx.currentPixelPackBufferBinding=buffer}else if(target==35052){GLctx.currentPixelUnpackBufferBinding=buffer}GLctx.bindBuffer(target,GL.buffers[buffer])}function _glBindBufferBase(target,index,buffer){GLctx["bindBufferBase"](target,index,GL.buffers[buffer])}function _glBindFramebuffer(target,framebuffer){GLctx.bindFramebuffer(target,GL.framebuffers[framebuffer])}function _glBindRenderbuffer(target,renderbuffer){GLctx.bindRenderbuffer(target,GL.renderbuffers[renderbuffer])}function _glBindSampler(unit,sampler){GLctx["bindSampler"](unit,GL.samplers[sampler])}function _glBindTexture(target,texture){GLctx.bindTexture(target,GL.textures[texture])}function _glBindVertexArray(vao){GLctx["bindVertexArray"](GL.vaos[vao]);var ibo=GLctx.getParameter(34965);GLctx.currentElementArrayBufferBinding=ibo?ibo.name|0:0}function _glBlendEquationSeparate(x0,x1){GLctx["blendEquationSeparate"](x0,x1)}function _glBlendFuncSeparate(x0,x1,x2,x3){GLctx["blendFuncSeparate"](x0,x1,x2,x3)}function _glBlitFramebuffer(x0,x1,x2,x3,x4,x5,x6,x7,x8,x9){GLctx["blitFramebuffer"](x0,x1,x2,x3,x4,x5,x6,x7,x8,x9)}function _glBufferData(target,size,data,usage){if(true){if(data){GLctx.bufferData(target,HEAPU8,usage,data,size)}else{GLctx.bufferData(target,size,usage)}}else{GLctx.bufferData(target,data?HEAPU8.subarray(data,data+size):size,usage)}}function _glBufferSubData(target,offset,size,data){if(true){GLctx.bufferSubData(target,offset,HEAPU8,data,size);return}GLctx.bufferSubData(target,offset,HEAPU8.subarray(data,data+size))}function _glCheckFramebufferStatus(x0){return GLctx["checkFramebufferStatus"](x0)}function _glClear(x0){GLctx["clear"](x0)}function _glClearColor(x0,x1,x2,x3){GLctx["clearColor"](x0,x1,x2,x3)}function _glClearDepth(x0){GLctx["clearDepth"](x0)}function _glColorMask(red,green,blue,alpha){GLctx.colorMask(!!red,!!green,!!blue,!!alpha)}function _glCompileShader(shader){GLctx.compileShader(GL.shaders[shader])}function _glCreateProgram(){var id=GL.getNewId(GL.programs);var program=GLctx.createProgram();program.name=id;program.maxUniformLength=program.maxAttributeLength=program.maxUniformBlockNameLength=0;program.uniformIdCounter=1;GL.programs[id]=program;return id}function _glCreateShader(shaderType){var id=GL.getNewId(GL.shaders);GL.shaders[id]=GLctx.createShader(shaderType);return id}function _glCullFace(x0){GLctx["cullFace"](x0)}function _glDeleteBuffers(n,buffers){for(var i=0;i<n;i++){var id=HEAP32[buffers+i*4>>2];var buffer=GL.buffers[id];if(!buffer)continue;GLctx.deleteBuffer(buffer);buffer.name=0;GL.buffers[id]=null;if(id==GLctx.currentArrayBufferBinding)GLctx.currentArrayBufferBinding=0;if(id==GLctx.currentElementArrayBufferBinding)GLctx.currentElementArrayBufferBinding=0;if(id==GLctx.currentPixelPackBufferBinding)GLctx.currentPixelPackBufferBinding=0;if(id==GLctx.currentPixelUnpackBufferBinding)GLctx.currentPixelUnpackBufferBinding=0}}function _glDeleteFramebuffers(n,framebuffers){for(var i=0;i<n;++i){var id=HEAP32[framebuffers+i*4>>2];var framebuffer=GL.framebuffers[id];if(!framebuffer)continue;GLctx.deleteFramebuffer(framebuffer);framebuffer.name=0;GL.framebuffers[id]=null}}function _glDeleteProgram(id){if(!id)return;var program=GL.programs[id];if(!program){GL.recordError(1281);return}GLctx.deleteProgram(program);program.name=0;GL.programs[id]=null}function _glDeleteRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var id=HEAP32[renderbuffers+i*4>>2];var renderbuffer=GL.renderbuffers[id];if(!renderbuffer)continue;GLctx.deleteRenderbuffer(renderbuffer);renderbuffer.name=0;GL.renderbuffers[id]=null}}function _glDeleteSamplers(n,samplers){for(var i=0;i<n;i++){var id=HEAP32[samplers+i*4>>2];var sampler=GL.samplers[id];if(!sampler)continue;GLctx["deleteSampler"](sampler);sampler.name=0;GL.samplers[id]=null}}function _glDeleteShader(id){if(!id)return;var shader=GL.shaders[id];if(!shader){GL.recordError(1281);return}GLctx.deleteShader(shader);GL.shaders[id]=null}function _glDeleteTextures(n,textures){for(var i=0;i<n;i++){var id=HEAP32[textures+i*4>>2];var texture=GL.textures[id];if(!texture)continue;GLctx.deleteTexture(texture);texture.name=0;GL.textures[id]=null}}function _glDeleteVertexArrays(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx["deleteVertexArray"](GL.vaos[id]);GL.vaos[id]=null}}function _glDepthFunc(x0){GLctx["depthFunc"](x0)}function _glDepthMask(flag){GLctx.depthMask(!!flag)}function _glDetachShader(program,shader){GLctx.detachShader(GL.programs[program],GL.shaders[shader])}function _glDisable(x0){GLctx["disable"](x0)}function _glDrawArrays(mode,first,count){GL.preDrawHandleClientVertexAttribBindings(first+count);GLctx.drawArrays(mode,first,count);GL.postDrawHandleClientVertexAttribBindings()}function _glEnable(x0){GLctx["enable"](x0)}function _glEnableVertexAttribArray(index){var cb=GL.currentContext.clientBuffers[index];cb.enabled=true;GLctx.enableVertexAttribArray(index)}function _glFramebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer){GLctx.framebufferRenderbuffer(target,attachment,renderbuffertarget,GL.renderbuffers[renderbuffer])}function _glFramebufferTexture2D(target,attachment,textarget,texture,level){GLctx.framebufferTexture2D(target,attachment,textarget,GL.textures[texture],level)}function _glFrontFace(x0){GLctx["frontFace"](x0)}function _glGenBuffers(n,buffers){__glGenObject(n,buffers,"createBuffer",GL.buffers)}function _glGenFramebuffers(n,ids){__glGenObject(n,ids,"createFramebuffer",GL.framebuffers)}function _glGenRenderbuffers(n,renderbuffers){__glGenObject(n,renderbuffers,"createRenderbuffer",GL.renderbuffers)}function _glGenSamplers(n,samplers){__glGenObject(n,samplers,"createSampler",GL.samplers)}function _glGenTextures(n,textures){__glGenObject(n,textures,"createTexture",GL.textures)}function _glGenVertexArrays(n,arrays){__glGenObject(n,arrays,"createVertexArray",GL.vaos)}function _glGetIntegerv(name_,p){emscriptenWebGLGet(name_,p,0)}function _glGetShaderInfoLog(shader,maxLength,length,infoLog){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log="(unknown error)";var numBytesWrittenExclNull=maxLength>0&&infoLog?stringToUTF8(log,infoLog,maxLength):0;if(length)HEAP32[length>>2]=numBytesWrittenExclNull}function _glGetShaderiv(shader,pname,p){if(!p){GL.recordError(1281);return}if(pname==35716){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log="(unknown error)";var logLength=log?log.length+1:0;HEAP32[p>>2]=logLength}else if(pname==35720){var source=GLctx.getShaderSource(GL.shaders[shader]);var sourceLength=source?source.length+1:0;HEAP32[p>>2]=sourceLength}else{HEAP32[p>>2]=GLctx.getShaderParameter(GL.shaders[shader],pname)}}function _glGetString(name_){var ret=GL.stringCache[name_];if(!ret){switch(name_){case 7939:var exts=GLctx.getSupportedExtensions()||[];exts=exts.concat(exts.map(function(e){return"GL_"+e}));ret=stringToNewUTF8(exts.join(" "));break;case 7936:case 7937:case 37445:case 37446:var s=GLctx.getParameter(name_);if(!s){GL.recordError(1280)}ret=s&&stringToNewUTF8(s);break;case 7938:var glVersion=GLctx.getParameter(7938);if(true)glVersion="OpenGL ES 3.0 ("+glVersion+")";else{glVersion="OpenGL ES 2.0 ("+glVersion+")"}ret=stringToNewUTF8(glVersion);break;case 35724:var glslVersion=GLctx.getParameter(35724);var ver_re=/^WebGL GLSL ES ([0-9]\.[0-9][0-9]?)(?:$| .*)/;var ver_num=glslVersion.match(ver_re);if(ver_num!==null){if(ver_num[1].length==3)ver_num[1]=ver_num[1]+"0";glslVersion="OpenGL ES GLSL ES "+ver_num[1]+" ("+glslVersion+")"}ret=stringToNewUTF8(glslVersion);break;default:GL.recordError(1280)}GL.stringCache[name_]=ret}return ret}function _glGetUniformBlockIndex(program,uniformBlockName){return GLctx["getUniformBlockIndex"](GL.programs[program],UTF8ToString(uniformBlockName))}function _glGetUniformLocation(program,name){name=UTF8ToString(name);if(program=GL.programs[program]){webglPrepareUniformLocationsBeforeFirstUse(program);var uniformLocsById=program.uniformLocsById;var arrayIndex=0;var uniformBaseName=name;var leftBrace=webglGetLeftBracePos(name);if(leftBrace>0){arrayIndex=jstoi_q(name.slice(leftBrace+1))>>>0;uniformBaseName=name.slice(0,leftBrace)}var sizeAndId=program.uniformSizeAndIdsByName[uniformBaseName];if(sizeAndId&&arrayIndex<sizeAndId[0]){arrayIndex+=sizeAndId[1];if(uniformLocsById[arrayIndex]=uniformLocsById[arrayIndex]||GLctx.getUniformLocation(program,name)){return arrayIndex}}}else{GL.recordError(1281)}return-1}function _glLinkProgram(program){program=GL.programs[program];GLctx.linkProgram(program);program.uniformLocsById=0;program.uniformSizeAndIdsByName={}}function _glMapBufferRange(target,offset,length,access){if(access!=26&&access!=10){err("glMapBufferRange is only supported when access is MAP_WRITE|INVALIDATE_BUFFER");return 0}if(!emscriptenWebGLValidateMapBufferTarget(target)){GL.recordError(1280);err("GL_INVALID_ENUM in glMapBufferRange");return 0}var mem=_malloc(length);if(!mem)return 0;GL.mappedBuffers[emscriptenWebGLGetBufferBinding(target)]={offset:offset,length:length,mem:mem,access:access};return mem}function _glPolygonOffset(x0,x1){GLctx["polygonOffset"](x0,x1)}function _glReadPixels(x,y,width,height,format,type,pixels){if(true){if(GLctx.currentPixelPackBufferBinding){GLctx.readPixels(x,y,width,height,format,type,pixels)}else{var heap=heapObjectForWebGLType(type);GLctx.readPixels(x,y,width,height,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap))}return}var pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,format);if(!pixelData){GL.recordError(1280);return}GLctx.readPixels(x,y,width,height,format,type,pixelData)}function _glRenderbufferStorageMultisample(x0,x1,x2,x3,x4){GLctx["renderbufferStorageMultisample"](x0,x1,x2,x3,x4)}function _glSamplerParameterf(sampler,pname,param){GLctx["samplerParameterf"](GL.samplers[sampler],pname,param)}function _glSamplerParameterfv(sampler,pname,params){var param=HEAPF32[params>>2];GLctx["samplerParameterf"](GL.samplers[sampler],pname,param)}function _glSamplerParameteri(sampler,pname,param){GLctx["samplerParameteri"](GL.samplers[sampler],pname,param)}function _glScissor(x0,x1,x2,x3){GLctx["scissor"](x0,x1,x2,x3)}function _glShaderSource(shader,count,string,length){var source=GL.getSource(shader,count,string,length);GLctx.shaderSource(GL.shaders[shader],source)}function _glTexImage2D(target,level,internalFormat,width,height,border,format,type,pixels){if(true){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels)}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap))}else{GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,null)}return}GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels?emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat):null)}function _glTexParameteri(x0,x1,x2){GLctx["texParameteri"](x0,x1,x2)}function _glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels){if(true){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels)}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap))}else{GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,null)}return}var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,0);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixelData)}function _glUniform1i(location,v0){GLctx.uniform1i(webglGetUniformLocation(location),v0)}function _glUniformBlockBinding(program,uniformBlockIndex,uniformBlockBinding){program=GL.programs[program];GLctx["uniformBlockBinding"](program,uniformBlockIndex,uniformBlockBinding)}function _glUnmapBuffer(target){if(!emscriptenWebGLValidateMapBufferTarget(target)){GL.recordError(1280);err("GL_INVALID_ENUM in glUnmapBuffer");return 0}var buffer=emscriptenWebGLGetBufferBinding(target);var mapping=GL.mappedBuffers[buffer];if(!mapping){GL.recordError(1282);err("buffer was never mapped in glUnmapBuffer");return 0}GL.mappedBuffers[buffer]=null;if(!(mapping.access&16))if(true){GLctx.bufferSubData(target,mapping.offset,HEAPU8,mapping.mem,mapping.length)}else{GLctx.bufferSubData(target,mapping.offset,HEAPU8.subarray(mapping.mem,mapping.mem+mapping.length))}_free(mapping.mem);return 1}function _glUseProgram(program){program=GL.programs[program];GLctx.useProgram(program);GLctx.currentProgram=program}function _glVertexAttribPointer(index,size,type,normalized,stride,ptr){var cb=GL.currentContext.clientBuffers[index];if(!GLctx.currentArrayBufferBinding){cb.size=size;cb.type=type;cb.normalized=normalized;cb.stride=stride;cb.ptr=ptr;cb.clientside=true;cb.vertexAttribPointerAdaptor=function(index,size,type,normalized,stride,ptr){this.vertexAttribPointer(index,size,type,normalized,stride,ptr)};return}cb.clientside=false;GLctx.vertexAttribPointer(index,size,type,!!normalized,stride,ptr)}function _glViewport(x0,x1,x2,x3){GLctx["viewport"](x0,x1,x2,x3)}var GLEW={isLinaroFork:1,extensions:null,error:{0:null,1:null,2:null,3:null,4:null,5:null,6:null,7:null,8:null},version:{1:null,2:null,3:null,4:null},errorStringConstantFromCode:function(error){if(GLEW.isLinaroFork){switch(error){case 4:return"OpenGL ES lib expected, found OpenGL lib";case 5:return"OpenGL lib expected, found OpenGL ES lib";case 6:return"Missing EGL version";case 7:return"EGL 1.1 and up are supported";default:break}}switch(error){case 0:return"No error";case 1:return"Missing GL version";case 2:return"GL 1.1 and up are supported";case 3:return"GLX 1.2 and up are supported";default:return null}},errorString:function(error){if(!GLEW.error[error]){var string=GLEW.errorStringConstantFromCode(error);if(!string){string="Unknown error";error=8}GLEW.error[error]=allocate(intArrayFromString(string),ALLOC_NORMAL)}return GLEW.error[error]},versionStringConstantFromCode:function(name){switch(name){case 1:return"1.10.0";case 2:return"1";case 3:return"10";case 4:return"0";default:return null}},versionString:function(name){if(!GLEW.version[name]){var string=GLEW.versionStringConstantFromCode(name);if(!string)return 0;GLEW.version[name]=allocate(intArrayFromString(string),ALLOC_NORMAL)}return GLEW.version[name]},extensionIsSupported:function(name){if(!GLEW.extensions){GLEW.extensions=UTF8ToString(_glGetString(7939)).split(" ")}if(GLEW.extensions.includes(name))return 1;return GLEW.extensions.includes("GL_"+name)}};function _glewInit(){return 0}function GLFW_Window(id,width,height,title,monitor,share){this.id=id;this.x=0;this.y=0;this.fullscreen=false;this.storedX=0;this.storedY=0;this.width=width;this.height=height;this.storedWidth=width;this.storedHeight=height;this.title=title;this.monitor=monitor;this.share=share;this.attributes=GLFW.hints;this.inputModes={208897:212993,208898:0,208899:0};this.buttons=0;this.keys=new Array;this.domKeys=new Array;this.shouldClose=0;this.title=null;this.windowPosFunc=null;this.windowSizeFunc=null;this.windowCloseFunc=null;this.windowRefreshFunc=null;this.windowFocusFunc=null;this.windowIconifyFunc=null;this.framebufferSizeFunc=null;this.mouseButtonFunc=null;this.cursorPosFunc=null;this.cursorEnterFunc=null;this.scrollFunc=null;this.dropFunc=null;this.keyFunc=null;this.charFunc=null;this.userptr=null}var GLFW={WindowFromId:function(id){if(id<=0||!GLFW.windows)return null;return GLFW.windows[id-1]},joystickFunc:null,errorFunc:null,monitorFunc:null,active:null,windows:null,monitors:null,monitorString:null,versionString:null,initialTime:null,extensions:null,hints:null,defaultHints:{131073:0,131074:0,131075:1,131076:1,131077:1,135169:8,135170:8,135171:8,135172:8,135173:24,135174:8,135175:0,135176:0,135177:0,135178:0,135179:0,135180:0,135181:0,135182:0,135183:0,139265:196609,139266:1,139267:0,139268:0,139269:0,139270:0,139271:0,139272:0},DOMToGLFWKeyCode:function(keycode){switch(keycode){case 32:return 32;case 222:return 39;case 188:return 44;case 173:return 45;case 189:return 45;case 190:return 46;case 191:return 47;case 48:return 48;case 49:return 49;case 50:return 50;case 51:return 51;case 52:return 52;case 53:return 53;case 54:return 54;case 55:return 55;case 56:return 56;case 57:return 57;case 59:return 59;case 61:return 61;case 187:return 61;case 65:return 65;case 66:return 66;case 67:return 67;case 68:return 68;case 69:return 69;case 70:return 70;case 71:return 71;case 72:return 72;case 73:return 73;case 74:return 74;case 75:return 75;case 76:return 76;case 77:return 77;case 78:return 78;case 79:return 79;case 80:return 80;case 81:return 81;case 82:return 82;case 83:return 83;case 84:return 84;case 85:return 85;case 86:return 86;case 87:return 87;case 88:return 88;case 89:return 89;case 90:return 90;case 219:return 91;case 220:return 92;case 221:return 93;case 192:return 94;case 27:return 256;case 13:return 257;case 9:return 258;case 8:return 259;case 45:return 260;case 46:return 261;case 39:return 262;case 37:return 263;case 40:return 264;case 38:return 265;case 33:return 266;case 34:return 267;case 36:return 268;case 35:return 269;case 20:return 280;case 145:return 281;case 144:return 282;case 44:return 283;case 19:return 284;case 112:return 290;case 113:return 291;case 114:return 292;case 115:return 293;case 116:return 294;case 117:return 295;case 118:return 296;case 119:return 297;case 120:return 298;case 121:return 299;case 122:return 300;case 123:return 301;case 124:return 302;case 125:return 303;case 126:return 304;case 127:return 305;case 128:return 306;case 129:return 307;case 130:return 308;case 131:return 309;case 132:return 310;case 133:return 311;case 134:return 312;case 135:return 313;case 136:return 314;case 96:return 320;case 97:return 321;case 98:return 322;case 99:return 323;case 100:return 324;case 101:return 325;case 102:return 326;case 103:return 327;case 104:return 328;case 105:return 329;case 110:return 330;case 111:return 331;case 106:return 332;case 109:return 333;case 107:return 334;case 16:return 340;case 17:return 341;case 18:return 342;case 91:return 343;case 93:return 348;default:return-1}},getModBits:function(win){var mod=0;if(win.keys[340])mod|=1;if(win.keys[341])mod|=2;if(win.keys[342])mod|=4;if(win.keys[343])mod|=8;return mod},onKeyPress:function(event){if(!GLFW.active||!GLFW.active.charFunc)return;if(event.ctrlKey||event.metaKey)return;var charCode=event.charCode;if(charCode==0||charCode>=0&&charCode<=31)return;(function(a1,a2){dynCall_vii.apply(null,[GLFW.active.charFunc,a1,a2])})(GLFW.active.id,charCode)},onKeyChanged:function(keyCode,status){if(!GLFW.active)return;var key=GLFW.DOMToGLFWKeyCode(keyCode);if(key==-1)return;var repeat=status&&GLFW.active.keys[key];GLFW.active.keys[key]=status;GLFW.active.domKeys[keyCode]=status;if(!GLFW.active.keyFunc)return;if(repeat)status=2;(function(a1,a2,a3,a4,a5){dynCall_viiiii.apply(null,[GLFW.active.keyFunc,a1,a2,a3,a4,a5])})(GLFW.active.id,key,keyCode,status,GLFW.getModBits(GLFW.active))},onGamepadConnected:function(event){GLFW.refreshJoysticks()},onGamepadDisconnected:function(event){GLFW.refreshJoysticks()},onKeydown:function(event){GLFW.onKeyChanged(event.keyCode,1);if(event.keyCode===8||event.keyCode===9){event.preventDefault()}},onKeyup:function(event){GLFW.onKeyChanged(event.keyCode,0)},onBlur:function(event){if(!GLFW.active)return;for(var i=0;i<GLFW.active.domKeys.length;++i){if(GLFW.active.domKeys[i]){GLFW.onKeyChanged(i,0)}}},onMousemove:function(event){if(!GLFW.active)return;Browser.calculateMouseEvent(event);if(event.target!=Module["canvas"]||!GLFW.active.cursorPosFunc)return;(function(a1,a2,a3){dynCall_vidd.apply(null,[GLFW.active.cursorPosFunc,a1,a2,a3])})(GLFW.active.id,Browser.mouseX,Browser.mouseY)},DOMToGLFWMouseButton:function(event){var eventButton=event["button"];if(eventButton>0){if(eventButton==1){eventButton=2}else{eventButton=1}}return eventButton},onMouseenter:function(event){if(!GLFW.active)return;if(event.target!=Module["canvas"]||!GLFW.active.cursorEnterFunc)return;(function(a1,a2){dynCall_vii.apply(null,[GLFW.active.cursorEnterFunc,a1,a2])})(GLFW.active.id,1)},onMouseleave:function(event){if(!GLFW.active)return;if(event.target!=Module["canvas"]||!GLFW.active.cursorEnterFunc)return;(function(a1,a2){dynCall_vii.apply(null,[GLFW.active.cursorEnterFunc,a1,a2])})(GLFW.active.id,0)},onMouseButtonChanged:function(event,status){if(!GLFW.active)return;Browser.calculateMouseEvent(event);if(event.target!=Module["canvas"])return;var eventButton=GLFW.DOMToGLFWMouseButton(event);if(status==1){GLFW.active.buttons|=1<<eventButton;try{event.target.setCapture()}catch(e){}}else{GLFW.active.buttons&=~(1<<eventButton)}if(!GLFW.active.mouseButtonFunc)return;(function(a1,a2,a3,a4){dynCall_viiii.apply(null,[GLFW.active.mouseButtonFunc,a1,a2,a3,a4])})(GLFW.active.id,eventButton,status,GLFW.getModBits(GLFW.active))},onMouseButtonDown:function(event){if(!GLFW.active)return;GLFW.onMouseButtonChanged(event,1)},onMouseButtonUp:function(event){if(!GLFW.active)return;GLFW.onMouseButtonChanged(event,0)},onMouseWheel:function(event){var delta=-Browser.getMouseWheelDelta(event);delta=delta==0?0:delta>0?Math.max(delta,1):Math.min(delta,-1);GLFW.wheelPos+=delta;if(!GLFW.active||!GLFW.active.scrollFunc||event.target!=Module["canvas"])return;var sx=0;var sy=0;if(event.type=="mousewheel"){sx=event.wheelDeltaX;sy=event.wheelDeltaY}else{sx=event.deltaX;sy=event.deltaY}(function(a1,a2,a3){dynCall_vidd.apply(null,[GLFW.active.scrollFunc,a1,a2,a3])})(GLFW.active.id,sx,sy);event.preventDefault()},onCanvasResize:function(width,height){if(!GLFW.active)return;var resizeNeeded=true;if(document["fullscreen"]||document["fullScreen"]||document["mozFullScreen"]||document["webkitIsFullScreen"]){GLFW.active.storedX=GLFW.active.x;GLFW.active.storedY=GLFW.active.y;GLFW.active.storedWidth=GLFW.active.width;GLFW.active.storedHeight=GLFW.active.height;GLFW.active.x=GLFW.active.y=0;GLFW.active.width=screen.width;GLFW.active.height=screen.height;GLFW.active.fullscreen=true}else if(GLFW.active.fullscreen==true){GLFW.active.x=GLFW.active.storedX;GLFW.active.y=GLFW.active.storedY;GLFW.active.width=GLFW.active.storedWidth;GLFW.active.height=GLFW.active.storedHeight;GLFW.active.fullscreen=false}else if(GLFW.active.width!=width||GLFW.active.height!=height){GLFW.active.width=width;GLFW.active.height=height}else{resizeNeeded=false}if(resizeNeeded){Browser.setCanvasSize(GLFW.active.width,GLFW.active.height,true);GLFW.onWindowSizeChanged();GLFW.onFramebufferSizeChanged()}},onWindowSizeChanged:function(){if(!GLFW.active)return;if(!GLFW.active.windowSizeFunc)return;(function(a1,a2,a3){dynCall_viii.apply(null,[GLFW.active.windowSizeFunc,a1,a2,a3])})(GLFW.active.id,GLFW.active.width,GLFW.active.height)},onFramebufferSizeChanged:function(){if(!GLFW.active)return;if(!GLFW.active.framebufferSizeFunc)return;(function(a1,a2,a3){dynCall_viii.apply(null,[GLFW.active.framebufferSizeFunc,a1,a2,a3])})(GLFW.active.id,GLFW.active.width,GLFW.active.height)},getTime:function(){return _emscripten_get_now()/1e3},setWindowTitle:function(winid,title){var win=GLFW.WindowFromId(winid);if(!win)return;win.title=UTF8ToString(title);if(GLFW.active.id==win.id){document.title=win.title}},setJoystickCallback:function(cbfun){GLFW.joystickFunc=cbfun;GLFW.refreshJoysticks()},joys:{},lastGamepadState:null,lastGamepadStateFrame:null,refreshJoysticks:function(){if(Browser.mainLoop.currentFrameNumber!==GLFW.lastGamepadStateFrame||!Browser.mainLoop.currentFrameNumber){GLFW.lastGamepadState=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads:null;GLFW.lastGamepadStateFrame=Browser.mainLoop.currentFrameNumber;for(var joy=0;joy<GLFW.lastGamepadState.length;++joy){var gamepad=GLFW.lastGamepadState[joy];if(gamepad){if(!GLFW.joys[joy]){console.log("glfw joystick connected:",joy);GLFW.joys[joy]={id:allocate(intArrayFromString(gamepad.id),ALLOC_NORMAL),buttonsCount:gamepad.buttons.length,axesCount:gamepad.axes.length,buttons:allocate(new Array(gamepad.buttons.length),ALLOC_NORMAL),axes:allocate(new Array(gamepad.axes.length*4),ALLOC_NORMAL)};if(GLFW.joystickFunc){(function(a1,a2){dynCall_vii.apply(null,[GLFW.joystickFunc,a1,a2])})(joy,262145)}}var data=GLFW.joys[joy];for(var i=0;i<gamepad.buttons.length;++i){setValue(data.buttons+i,gamepad.buttons[i].pressed,"i8")}for(var i=0;i<gamepad.axes.length;++i){setValue(data.axes+i*4,gamepad.axes[i],"float")}}else{if(GLFW.joys[joy]){console.log("glfw joystick disconnected",joy);if(GLFW.joystickFunc){(function(a1,a2){dynCall_vii.apply(null,[GLFW.joystickFunc,a1,a2])})(joy,262146)}_free(GLFW.joys[joy].id);_free(GLFW.joys[joy].buttons);_free(GLFW.joys[joy].axes);delete GLFW.joys[joy]}}}}},setKeyCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return null;var prevcbfun=win.keyFunc;win.keyFunc=cbfun;return prevcbfun},setCharCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return null;var prevcbfun=win.charFunc;win.charFunc=cbfun;return prevcbfun},setMouseButtonCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return null;var prevcbfun=win.mouseButtonFunc;win.mouseButtonFunc=cbfun;return prevcbfun},setCursorPosCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return null;var prevcbfun=win.cursorPosFunc;win.cursorPosFunc=cbfun;return prevcbfun},setScrollCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return null;var prevcbfun=win.scrollFunc;win.scrollFunc=cbfun;return prevcbfun},setDropCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return null;var prevcbfun=win.dropFunc;win.dropFunc=cbfun;return prevcbfun},onDrop:function(event){if(!GLFW.active||!GLFW.active.dropFunc)return;if(!event.dataTransfer||!event.dataTransfer.files||event.dataTransfer.files.length==0)return;event.preventDefault();var filenames=allocate(new Array(event.dataTransfer.files.length*4),ALLOC_NORMAL);var filenamesArray=[];var count=event.dataTransfer.files.length;var written=0;var drop_dir=".glfw_dropped_files";FS.createPath("/",drop_dir);function save(file){var path="/"+drop_dir+"/"+file.name.replace(/\//g,"_");var reader=new FileReader;reader.onloadend=function(e){if(reader.readyState!=2){++written;console.log("failed to read dropped file: "+file.name+": "+reader.error);return}var data=e.target.result;FS.writeFile(path,new Uint8Array(data));if(++written===count){(function(a1,a2,a3){dynCall_viii.apply(null,[GLFW.active.dropFunc,a1,a2,a3])})(GLFW.active.id,count,filenames);for(var i=0;i<filenamesArray.length;++i){_free(filenamesArray[i])}_free(filenames)}};reader.readAsArrayBuffer(file);var filename=allocate(intArrayFromString(path),ALLOC_NORMAL);filenamesArray.push(filename);setValue(filenames+i*4,filename,"i8*")}for(var i=0;i<count;++i){save(event.dataTransfer.files[i])}return false},onDragover:function(event){if(!GLFW.active||!GLFW.active.dropFunc)return;event.preventDefault();return false},setWindowSizeCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return null;var prevcbfun=win.windowSizeFunc;win.windowSizeFunc=cbfun;return prevcbfun},setWindowCloseCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return null;var prevcbfun=win.windowCloseFunc;win.windowCloseFunc=cbfun;return prevcbfun},setWindowRefreshCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return null;var prevcbfun=win.windowRefreshFunc;win.windowRefreshFunc=cbfun;return prevcbfun},onClickRequestPointerLock:function(e){if(!Browser.pointerLock&&Module["canvas"].requestPointerLock){Module["canvas"].requestPointerLock();e.preventDefault()}},setInputMode:function(winid,mode,value){var win=GLFW.WindowFromId(winid);if(!win)return;switch(mode){case 208897:{switch(value){case 212993:{win.inputModes[mode]=value;Module["canvas"].removeEventListener("click",GLFW.onClickRequestPointerLock,true);Module["canvas"].exitPointerLock();break}case 212994:{console.log("glfwSetInputMode called with GLFW_CURSOR_HIDDEN value not implemented.");break}case 212995:{win.inputModes[mode]=value;Module["canvas"].addEventListener("click",GLFW.onClickRequestPointerLock,true);Module["canvas"].requestPointerLock();break}default:{console.log("glfwSetInputMode called with unknown value parameter value: "+value+".");break}}break}case 208898:{console.log("glfwSetInputMode called with GLFW_STICKY_KEYS mode not implemented.");break}case 208899:{console.log("glfwSetInputMode called with GLFW_STICKY_MOUSE_BUTTONS mode not implemented.");break}default:{console.log("glfwSetInputMode called with unknown mode parameter value: "+mode+".");break}}},getKey:function(winid,key){var win=GLFW.WindowFromId(winid);if(!win)return 0;return win.keys[key]},getMouseButton:function(winid,button){var win=GLFW.WindowFromId(winid);if(!win)return 0;return(win.buttons&1<<button)>0},getCursorPos:function(winid,x,y){setValue(x,Browser.mouseX,"double");setValue(y,Browser.mouseY,"double")},getMousePos:function(winid,x,y){setValue(x,Browser.mouseX,"i32");setValue(y,Browser.mouseY,"i32")},setCursorPos:function(winid,x,y){},getWindowPos:function(winid,x,y){var wx=0;var wy=0;var win=GLFW.WindowFromId(winid);if(win){wx=win.x;wy=win.y}if(x){setValue(x,wx,"i32")}if(y){setValue(y,wy,"i32")}},setWindowPos:function(winid,x,y){var win=GLFW.WindowFromId(winid);if(!win)return;win.x=x;win.y=y},getWindowSize:function(winid,width,height){var ww=0;var wh=0;var win=GLFW.WindowFromId(winid);if(win){ww=win.width;wh=win.height}if(width){setValue(width,ww,"i32")}if(height){setValue(height,wh,"i32")}},setWindowSize:function(winid,width,height){var win=GLFW.WindowFromId(winid);if(!win)return;if(GLFW.active.id==win.id){if(width==screen.width&&height==screen.height){Browser.requestFullscreen()}else{Browser.exitFullscreen();Browser.setCanvasSize(width,height);win.width=width;win.height=height}}if(!win.windowSizeFunc)return;(function(a1,a2,a3){dynCall_viii.apply(null,[win.windowSizeFunc,a1,a2,a3])})(win.id,width,height)},createWindow:function(width,height,title,monitor,share){var i,id;for(i=0;i<GLFW.windows.length&&GLFW.windows[i]!==null;i++){}if(i>0)throw"glfwCreateWindow only supports one window at time currently";id=i+1;if(width<=0||height<=0)return 0;if(monitor){Browser.requestFullscreen()}else{Browser.setCanvasSize(width,height)}for(i=0;i<GLFW.windows.length&&GLFW.windows[i]==null;i++){}var useWebGL=GLFW.hints[139265]>0;if(i==GLFW.windows.length){if(useWebGL){var contextAttributes={antialias:GLFW.hints[135181]>1,depth:GLFW.hints[135173]>0,stencil:GLFW.hints[135174]>0,alpha:GLFW.hints[135172]>0};Module.ctx=Browser.createContext(Module["canvas"],true,true,contextAttributes)}else{Browser.init()}}if(!Module.ctx&&useWebGL)return 0;var win=new GLFW_Window(id,width,height,title,monitor,share);if(id-1==GLFW.windows.length){GLFW.windows.push(win)}else{GLFW.windows[id-1]=win}GLFW.active=win;return win.id},destroyWindow:function(winid){var win=GLFW.WindowFromId(winid);if(!win)return;if(win.windowCloseFunc)(function(a1){dynCall_vi.apply(null,[win.windowCloseFunc,a1])})(win.id);GLFW.windows[win.id-1]=null;if(GLFW.active.id==win.id)GLFW.active=null;for(var i=0;i<GLFW.windows.length;i++)if(GLFW.windows[i]!==null)return;Module.ctx=Browser.destroyContext(Module["canvas"],true,true)},swapBuffers:function(winid){},GLFW2ParamToGLFW3Param:function(param){var table={196609:0,196610:0,196611:0,196612:0,196613:0,196614:0,131073:0,131074:0,131075:0,131076:0,131077:135169,131078:135170,131079:135171,131080:135172,131081:135173,131082:135174,131083:135183,131084:135175,131085:135176,131086:135177,131087:135178,131088:135179,131089:135180,131090:0,131091:135181,131092:139266,131093:139267,131094:139270,131095:139271,131096:139272};return table[param]}};function _glfwCreateCursor(image,xhot,yhot){}function _glfwCreateWindow(width,height,title,monitor,share){return GLFW.createWindow(width,height,title,monitor,share)}function _glfwDestroyCursor(cursor){}function _glfwGetCursorPos(winid,x,y){GLFW.getCursorPos(winid,x,y)}function _glfwGetFramebufferSize(winid,width,height){var ww=0;var wh=0;var win=GLFW.WindowFromId(winid);if(win){ww=win.width;wh=win.height}if(width){setValue(width,ww,"i32")}if(height){setValue(height,wh,"i32")}}function _glfwGetJoystickAxes(joy,count){GLFW.refreshJoysticks();var state=GLFW.joys[joy];if(!state||!state.axes){setValue(count,0,"i32");return}setValue(count,state.axesCount,"i32");return state.axes}function _glfwGetJoystickButtons(joy,count){GLFW.refreshJoysticks();var state=GLFW.joys[joy];if(!state||!state.buttons){setValue(count,0,"i32");return}setValue(count,state.buttonsCount,"i32");return state.buttons}function _glfwGetJoystickHats(){return 0}function _glfwGetKeysSiv3D(windowid){const window=GLFW.WindowFromId(windowid);if(!window)return 0;if(!window.keysBuffer){window.keysBuffer=Module["_malloc"](349);Module["HEAPU8"].fill(0,window.keysBuffer,window.keysBuffer+348)}Module["HEAPU8"].set(window.keys,window.keysBuffer);return window.keysBuffer}function _glfwGetWindowAttrib(winid,attrib){var win=GLFW.WindowFromId(winid);if(!win)return 0;return win.attributes[attrib]}function _glfwGetWindowPos(winid,x,y){GLFW.getWindowPos(winid,x,y)}function _glfwGetWindowSize(winid,width,height){GLFW.getWindowSize(winid,width,height)}function _glfwGetWindowUserPointer(winid){var win=GLFW.WindowFromId(winid);if(!win)return 0;return win.userptr}function _glfwIconifyWindow(winid){}function _glfwInit(){if(GLFW.windows)return 1;GLFW.initialTime=GLFW.getTime();GLFW.hints=GLFW.defaultHints;GLFW.windows=new Array;GLFW.active=null;window.addEventListener("gamepadconnected",GLFW.onGamepadConnected,true);window.addEventListener("gamepaddisconnected",GLFW.onGamepadDisconnected,true);window.addEventListener("keydown",GLFW.onKeydown,true);window.addEventListener("keypress",GLFW.onKeyPress,true);window.addEventListener("keyup",GLFW.onKeyup,true);window.addEventListener("blur",GLFW.onBlur,true);Module["canvas"].addEventListener("touchmove",GLFW.onMousemove,true);Module["canvas"].addEventListener("touchstart",GLFW.onMouseButtonDown,true);Module["canvas"].addEventListener("touchcancel",GLFW.onMouseButtonUp,true);Module["canvas"].addEventListener("touchend",GLFW.onMouseButtonUp,true);Module["canvas"].addEventListener("mousemove",GLFW.onMousemove,true);Module["canvas"].addEventListener("mousedown",GLFW.onMouseButtonDown,true);Module["canvas"].addEventListener("mouseup",GLFW.onMouseButtonUp,true);Module["canvas"].addEventListener("wheel",GLFW.onMouseWheel,true);Module["canvas"].addEventListener("mousewheel",GLFW.onMouseWheel,true);Module["canvas"].addEventListener("mouseenter",GLFW.onMouseenter,true);Module["canvas"].addEventListener("mouseleave",GLFW.onMouseleave,true);Module["canvas"].addEventListener("drop",GLFW.onDrop,true);Module["canvas"].addEventListener("dragover",GLFW.onDragover,true);Browser.resizeListeners.push(function(width,height){GLFW.onCanvasResize(width,height)});return 1}function _glfwJoystickPresent(joy){GLFW.refreshJoysticks();return GLFW.joys[joy]!==undefined}function _glfwMakeContextCurrent(winid){}function _glfwMaximizeWindow(winid){}function _glfwPollEvents(){}function _glfwRestoreWindow(winid){}function _glfwSetCursorPos(winid,x,y){GLFW.setCursorPos(winid,x,y)}function _glfwSetErrorCallback(cbfun){var prevcbfun=GLFW.errorFunc;GLFW.errorFunc=cbfun;return prevcbfun}function _glfwSetFramebufferSizeCallback(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return null;var prevcbfun=win.framebufferSizeFunc;win.framebufferSizeFunc=cbfun;return prevcbfun}function _glfwSetMouseButtonCallback(winid,cbfun){return GLFW.setMouseButtonCallback(winid,cbfun)}function _glfwSetScrollCallback(winid,cbfun){return GLFW.setScrollCallback(winid,cbfun)}function _glfwSetWindowFocusCallback(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return null;var prevcbfun=win.windowFocusFunc;win.windowFocusFunc=cbfun;return prevcbfun}function _glfwSetWindowIconifyCallback(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return null;var prevcbfun=win.windowIconifyFunc;win.windowIconifyFunc=cbfun;return prevcbfun}function _glfwSetWindowPos(winid,x,y){GLFW.setWindowPos(winid,x,y)}function _glfwSetWindowPosCallback(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return null;var prevcbfun=win.windowPosFunc;win.windowPosFunc=cbfun;return prevcbfun}function _glfwSetWindowShouldClose(winid,value){var win=GLFW.WindowFromId(winid);if(!win)return;win.shouldClose=value}function _glfwSetWindowSize(winid,width,height){GLFW.setWindowSize(winid,width,height)}function _glfwSetWindowSizeCallback(winid,cbfun){return GLFW.setWindowSizeCallback(winid,cbfun)}function _glfwSetWindowSizeLimits(winid,minwidth,minheight,maxwidth,maxheight){}function _glfwSetWindowTitle(winid,title){GLFW.setWindowTitle(winid,title)}function _glfwSetWindowUserPointer(winid,ptr){var win=GLFW.WindowFromId(winid);if(!win)return;win.userptr=ptr}function _glfwSwapBuffers(winid){GLFW.swapBuffers(winid)}function _glfwSwapInterval(interval){interval=Math.abs(interval);if(interval==0)_emscripten_set_main_loop_timing(0,0);else _emscripten_set_main_loop_timing(1,interval)}function _glfwTerminate(){window.removeEventListener("gamepadconnected",GLFW.onGamepadConnected,true);window.removeEventListener("gamepaddisconnected",GLFW.onGamepadDisconnected,true);window.removeEventListener("keydown",GLFW.onKeydown,true);window.removeEventListener("keypress",GLFW.onKeyPress,true);window.removeEventListener("keyup",GLFW.onKeyup,true);window.removeEventListener("blur",GLFW.onBlur,true);Module["canvas"].removeEventListener("touchmove",GLFW.onMousemove,true);Module["canvas"].removeEventListener("touchstart",GLFW.onMouseButtonDown,true);Module["canvas"].removeEventListener("touchcancel",GLFW.onMouseButtonUp,true);Module["canvas"].removeEventListener("touchend",GLFW.onMouseButtonUp,true);Module["canvas"].removeEventListener("mousemove",GLFW.onMousemove,true);Module["canvas"].removeEventListener("mousedown",GLFW.onMouseButtonDown,true);Module["canvas"].removeEventListener("mouseup",GLFW.onMouseButtonUp,true);Module["canvas"].removeEventListener("wheel",GLFW.onMouseWheel,true);Module["canvas"].removeEventListener("mousewheel",GLFW.onMouseWheel,true);Module["canvas"].removeEventListener("mouseenter",GLFW.onMouseenter,true);Module["canvas"].removeEventListener("mouseleave",GLFW.onMouseleave,true);Module["canvas"].removeEventListener("drop",GLFW.onDrop,true);Module["canvas"].removeEventListener("dragover",GLFW.onDragover,true);Module["canvas"].width=Module["canvas"].height=1;GLFW.windows=null;GLFW.active=null}function _glfwWindowHint(target,hint){GLFW.hints[target]=hint}function _glfwWindowShouldClose(winid){var win=GLFW.WindowFromId(winid);if(!win)return 0;return win.shouldClose}function _llvm_eh_typeid_for(type){return type}function _tzset(){if(_tzset.called)return;_tzset.called=true;var currentYear=(new Date).getFullYear();var winter=new Date(currentYear,0,1);var summer=new Date(currentYear,6,1);var winterOffset=winter.getTimezoneOffset();var summerOffset=summer.getTimezoneOffset();var stdTimezoneOffset=Math.max(winterOffset,summerOffset);HEAP32[__get_timezone()>>2]=stdTimezoneOffset*60;HEAP32[__get_daylight()>>2]=Number(winterOffset!=summerOffset);function extractZone(date){var match=date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return match?match[1]:"GMT"}var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=allocateUTF8(winterName);var summerNamePtr=allocateUTF8(summerName);if(summerOffset<winterOffset){HEAP32[__get_tzname()>>2]=winterNamePtr;HEAP32[__get_tzname()+4>>2]=summerNamePtr}else{HEAP32[__get_tzname()>>2]=summerNamePtr;HEAP32[__get_tzname()+4>>2]=winterNamePtr}}function _localtime_r(time,tmPtr){_tzset();var date=new Date(HEAP32[time>>2]*1e3);HEAP32[tmPtr>>2]=date.getSeconds();HEAP32[tmPtr+4>>2]=date.getMinutes();HEAP32[tmPtr+8>>2]=date.getHours();HEAP32[tmPtr+12>>2]=date.getDate();HEAP32[tmPtr+16>>2]=date.getMonth();HEAP32[tmPtr+20>>2]=date.getFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getDay();var start=new Date(date.getFullYear(),0,1);var yday=(date.getTime()-start.getTime())/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+36>>2]=-(date.getTimezoneOffset()*60);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dst=(summerOffset!=winterOffset&&date.getTimezoneOffset()==Math.min(winterOffset,summerOffset))|0;HEAP32[tmPtr+32>>2]=dst;var zonePtr=HEAP32[__get_tzname()+(dst?4:0)>>2];HEAP32[tmPtr+40>>2]=zonePtr;return tmPtr}function _pthread_create(){return 6}function _pthread_join(){return 28}function _setTempRet0(val){setTempRet0(val)}function _sigaction(signum,act,oldact){return 0}var __sigalrm_handler=0;function _signal(sig,func){if(sig==14){__sigalrm_handler=func}else{}return 0}var siv3dNotifications=[];function _siv3dCloseNotification(id){const notificattion=siv3dNotifications[id];notificattion.close();delete siv3dNotifications[id]}var siv3dPendingUserActions=[];function siv3dRegisterUserAction(func){siv3dPendingUserActions.push(func)}function _siv3dCreateNotification(title,body,actionsNum,actionTexts,callback,callbackArg){if(!window.Notification&&Notification.permission!=="granted"){(function(a1,a2){dynCall_vii.apply(null,[callback,a1,a2])})(0,callbackArg);return 0}const idx=GL.getNewId(siv3dNotifications);const titleText=UTF8ToString(title);const bodyText=UTF8ToString(body);let actions=[];for(let i=0;i<actionsNum;i++){const textPtr=getValue(actionTexts+i*4,"i32");const actionText=UTF8ToString(textPtr);actions.push({title:actionText,action:actionText})}siv3dRegisterUserAction(function(){siv3dNotifications[idx]=new Notification(titleText,{body:bodyText,actions:actions})(function(a1,a2){dynCall_vii.apply(null,[callback,a1,a2])})(idx,callbackArg)});return idx}var AL={QUEUE_INTERVAL:25,QUEUE_LOOKAHEAD:.1,DEVICE_NAME:"Emscripten OpenAL",CAPTURE_DEVICE_NAME:"Emscripten OpenAL capture",ALC_EXTENSIONS:{ALC_SOFT_pause_device:true,ALC_SOFT_HRTF:true},AL_EXTENSIONS:{AL_EXT_float32:true,AL_SOFT_loop_points:true,AL_SOFT_source_length:true,AL_EXT_source_distance_model:true,AL_SOFT_source_spatialize:true},_alcErr:0,alcErr:0,deviceRefCounts:{},alcStringCache:{},paused:false,stringCache:{},contexts:{},currentCtx:null,buffers:{0:{id:0,refCount:0,audioBuf:null,frequency:0,bytesPerSample:2,channels:1,length:0}},paramArray:[],_nextId:1,newId:function(){return AL.freeIds.length>0?AL.freeIds.pop():AL._nextId++},freeIds:[],scheduleContextAudio:function(ctx){if(Browser.mainLoop.timingMode===1&&document["visibilityState"]!="visible"){return}for(var i in ctx.sources){AL.scheduleSourceAudio(ctx.sources[i])}},scheduleSourceAudio:function(src,lookahead){if(Browser.mainLoop.timingMode===1&&document["visibilityState"]!="visible"){return}if(src.state!==4114){return}var currentTime=AL.updateSourceTime(src);var startTime=src.bufStartTime;var startOffset=src.bufOffset;var bufCursor=src.bufsProcessed;for(var i=0;i<src.audioQueue.length;i++){var audioSrc=src.audioQueue[i];startTime=audioSrc._startTime+audioSrc._duration;startOffset=0;bufCursor+=audioSrc._skipCount+1}if(!lookahead){lookahead=AL.QUEUE_LOOKAHEAD}var lookaheadTime=currentTime+lookahead;var skipCount=0;while(startTime<lookaheadTime){if(bufCursor>=src.bufQueue.length){if(src.looping){bufCursor%=src.bufQueue.length}else{break}}var buf=src.bufQueue[bufCursor%src.bufQueue.length];if(buf.length===0){skipCount++;if(skipCount===src.bufQueue.length){break}}else{var audioSrc=src.context.audioCtx.createBufferSource();audioSrc.buffer=buf.audioBuf;audioSrc.playbackRate.value=src.playbackRate;if(buf.audioBuf._loopStart||buf.audioBuf._loopEnd){audioSrc.loopStart=buf.audioBuf._loopStart;audioSrc.loopEnd=buf.audioBuf._loopEnd}var duration=0;if(src.type===4136&&src.looping){duration=Number.POSITIVE_INFINITY;audioSrc.loop=true;if(buf.audioBuf._loopStart){audioSrc.loopStart=buf.audioBuf._loopStart}if(buf.audioBuf._loopEnd){audioSrc.loopEnd=buf.audioBuf._loopEnd}}else{duration=(buf.audioBuf.duration-startOffset)/src.playbackRate}audioSrc._startOffset=startOffset;audioSrc._duration=duration;audioSrc._skipCount=skipCount;skipCount=0;audioSrc.connect(src.gain);if(typeof audioSrc.start!=="undefined"){startTime=Math.max(startTime,src.context.audioCtx.currentTime);audioSrc.start(startTime,startOffset)}else if(typeof audioSrc.noteOn!=="undefined"){startTime=Math.max(startTime,src.context.audioCtx.currentTime);audioSrc.noteOn(startTime)}audioSrc._startTime=startTime;src.audioQueue.push(audioSrc);startTime+=duration}startOffset=0;bufCursor++}},updateSourceTime:function(src){var currentTime=src.context.audioCtx.currentTime;if(src.state!==4114){return currentTime}if(!isFinite(src.bufStartTime)){src.bufStartTime=currentTime-src.bufOffset/src.playbackRate;src.bufOffset=0}var nextStartTime=0;while(src.audioQueue.length){var audioSrc=src.audioQueue[0];src.bufsProcessed+=audioSrc._skipCount;nextStartTime=audioSrc._startTime+audioSrc._duration;if(currentTime<nextStartTime){break}src.audioQueue.shift();src.bufStartTime=nextStartTime;src.bufOffset=0;src.bufsProcessed++}if(src.bufsProcessed>=src.bufQueue.length&&!src.looping){AL.setSourceState(src,4116)}else if(src.type===4136&&src.looping){var buf=src.bufQueue[0];if(buf.length===0){src.bufOffset=0}else{var delta=(currentTime-src.bufStartTime)*src.playbackRate;var loopStart=buf.audioBuf._loopStart||0;var loopEnd=buf.audioBuf._loopEnd||buf.audioBuf.duration;if(loopEnd<=loopStart){loopEnd=buf.audioBuf.duration}if(delta<loopEnd){src.bufOffset=delta}else{src.bufOffset=loopStart+(delta-loopStart)%(loopEnd-loopStart)}}}else if(src.audioQueue[0]){src.bufOffset=(currentTime-src.audioQueue[0]._startTime)*src.playbackRate}else{if(src.type!==4136&&src.looping){var srcDuration=AL.sourceDuration(src)/src.playbackRate;if(srcDuration>0){src.bufStartTime+=Math.floor((currentTime-src.bufStartTime)/srcDuration)*srcDuration}}for(var i=0;i<src.bufQueue.length;i++){if(src.bufsProcessed>=src.bufQueue.length){if(src.looping){src.bufsProcessed%=src.bufQueue.length}else{AL.setSourceState(src,4116);break}}var buf=src.bufQueue[src.bufsProcessed];if(buf.length>0){nextStartTime=src.bufStartTime+buf.audioBuf.duration/src.playbackRate;if(currentTime<nextStartTime){src.bufOffset=(currentTime-src.bufStartTime)*src.playbackRate;break}src.bufStartTime=nextStartTime}src.bufOffset=0;src.bufsProcessed++}}return currentTime},cancelPendingSourceAudio:function(src){AL.updateSourceTime(src);for(var i=1;i<src.audioQueue.length;i++){var audioSrc=src.audioQueue[i];audioSrc.stop()}if(src.audioQueue.length>1){src.audioQueue.length=1}},stopSourceAudio:function(src){for(var i=0;i<src.audioQueue.length;i++){src.audioQueue[i].stop()}src.audioQueue.length=0},setSourceState:function(src,state){if(state===4114){if(src.state===4114||src.state==4116){src.bufsProcessed=0;src.bufOffset=0}else{}AL.stopSourceAudio(src);src.state=4114;src.bufStartTime=Number.NEGATIVE_INFINITY;AL.scheduleSourceAudio(src)}else if(state===4115){if(src.state===4114){AL.updateSourceTime(src);AL.stopSourceAudio(src);src.state=4115}}else if(state===4116){if(src.state!==4113){src.state=4116;src.bufsProcessed=src.bufQueue.length;src.bufStartTime=Number.NEGATIVE_INFINITY;src.bufOffset=0;AL.stopSourceAudio(src)}}else if(state===4113){if(src.state!==4113){src.state=4113;src.bufsProcessed=0;src.bufStartTime=Number.NEGATIVE_INFINITY;src.bufOffset=0;AL.stopSourceAudio(src)}}},initSourcePanner:function(src){if(src.type===4144){return}var templateBuf=AL.buffers[0];for(var i=0;i<src.bufQueue.length;i++){if(src.bufQueue[i].id!==0){templateBuf=src.bufQueue[i];break}}if(src.spatialize===1||src.spatialize===2&&templateBuf.channels===1){if(src.panner){return}src.panner=src.context.audioCtx.createPanner();AL.updateSourceGlobal(src);AL.updateSourceSpace(src);src.panner.connect(src.context.gain);src.gain.disconnect();src.gain.connect(src.panner)}else{if(!src.panner){return}src.panner.disconnect();src.gain.disconnect();src.gain.connect(src.context.gain);src.panner=null}},updateContextGlobal:function(ctx){for(var i in ctx.sources){AL.updateSourceGlobal(ctx.sources[i])}},updateSourceGlobal:function(src){var panner=src.panner;if(!panner){return}panner.refDistance=src.refDistance;panner.maxDistance=src.maxDistance;panner.rolloffFactor=src.rolloffFactor;panner.panningModel=src.context.hrtf?"HRTF":"equalpower";var distanceModel=src.context.sourceDistanceModel?src.distanceModel:src.context.distanceModel;switch(distanceModel){case 0:panner.distanceModel="inverse";panner.refDistance=3.40282e38;break;case 53249:case 53250:panner.distanceModel="inverse";break;case 53251:case 53252:panner.distanceModel="linear";break;case 53253:case 53254:panner.distanceModel="exponential";break}},updateListenerSpace:function(ctx){var listener=ctx.audioCtx.listener;if(listener.positionX){listener.positionX.value=ctx.listener.position[0];listener.positionY.value=ctx.listener.position[1];listener.positionZ.value=ctx.listener.position[2]}else{listener.setPosition(ctx.listener.position[0],ctx.listener.position[1],ctx.listener.position[2])}if(listener.forwardX){listener.forwardX.value=ctx.listener.direction[0];listener.forwardY.value=ctx.listener.direction[1];listener.forwardZ.value=ctx.listener.direction[2];listener.upX.value=ctx.listener.up[0];listener.upY.value=ctx.listener.up[1];listener.upZ.value=ctx.listener.up[2]}else{listener.setOrientation(ctx.listener.direction[0],ctx.listener.direction[1],ctx.listener.direction[2],ctx.listener.up[0],ctx.listener.up[1],ctx.listener.up[2])}for(var i in ctx.sources){AL.updateSourceSpace(ctx.sources[i])}},updateSourceSpace:function(src){if(!src.panner){return}var panner=src.panner;var posX=src.position[0];var posY=src.position[1];var posZ=src.position[2];var dirX=src.direction[0];var dirY=src.direction[1];var dirZ=src.direction[2];var listener=src.context.listener;var lPosX=listener.position[0];var lPosY=listener.position[1];var lPosZ=listener.position[2];if(src.relative){var lBackX=-listener.direction[0];var lBackY=-listener.direction[1];var lBackZ=-listener.direction[2];var lUpX=listener.up[0];var lUpY=listener.up[1];var lUpZ=listener.up[2];var inverseMagnitude=function(x,y,z){var length=Math.sqrt(x*x+y*y+z*z);if(length<Number.EPSILON){return 0}return 1/length};var invMag=inverseMagnitude(lBackX,lBackY,lBackZ);lBackX*=invMag;lBackY*=invMag;lBackZ*=invMag;invMag=inverseMagnitude(lUpX,lUpY,lUpZ);lUpX*=invMag;lUpY*=invMag;lUpZ*=invMag;var lRightX=lUpY*lBackZ-lUpZ*lBackY;var lRightY=lUpZ*lBackX-lUpX*lBackZ;var lRightZ=lUpX*lBackY-lUpY*lBackX;invMag=inverseMagnitude(lRightX,lRightY,lRightZ);lRightX*=invMag;lRightY*=invMag;lRightZ*=invMag;lUpX=lBackY*lRightZ-lBackZ*lRightY;lUpY=lBackZ*lRightX-lBackX*lRightZ;lUpZ=lBackX*lRightY-lBackY*lRightX;var oldX=dirX;var oldY=dirY;var oldZ=dirZ;dirX=oldX*lRightX+oldY*lUpX+oldZ*lBackX;dirY=oldX*lRightY+oldY*lUpY+oldZ*lBackY;dirZ=oldX*lRightZ+oldY*lUpZ+oldZ*lBackZ;oldX=posX;oldY=posY;oldZ=posZ;posX=oldX*lRightX+oldY*lUpX+oldZ*lBackX;posY=oldX*lRightY+oldY*lUpY+oldZ*lBackY;posZ=oldX*lRightZ+oldY*lUpZ+oldZ*lBackZ;posX+=lPosX;posY+=lPosY;posZ+=lPosZ}if(panner.positionX){panner.positionX.value=posX;panner.positionY.value=posY;panner.positionZ.value=posZ}else{panner.setPosition(posX,posY,posZ)}if(panner.orientationX){panner.orientationX.value=dirX;panner.orientationY.value=dirY;panner.orientationZ.value=dirZ}else{panner.setOrientation(dirX,dirY,dirZ)}var oldShift=src.dopplerShift;var velX=src.velocity[0];var velY=src.velocity[1];var velZ=src.velocity[2];var lVelX=listener.velocity[0];var lVelY=listener.velocity[1];var lVelZ=listener.velocity[2];if(posX===lPosX&&posY===lPosY&&posZ===lPosZ||velX===lVelX&&velY===lVelY&&velZ===lVelZ){src.dopplerShift=1}else{var speedOfSound=src.context.speedOfSound;var dopplerFactor=src.context.dopplerFactor;var slX=lPosX-posX;var slY=lPosY-posY;var slZ=lPosZ-posZ;var magSl=Math.sqrt(slX*slX+slY*slY+slZ*slZ);var vls=(slX*lVelX+slY*lVelY+slZ*lVelZ)/magSl;var vss=(slX*velX+slY*velY+slZ*velZ)/magSl;vls=Math.min(vls,speedOfSound/dopplerFactor);vss=Math.min(vss,speedOfSound/dopplerFactor);src.dopplerShift=(speedOfSound-dopplerFactor*vls)/(speedOfSound-dopplerFactor*vss)}if(src.dopplerShift!==oldShift){AL.updateSourceRate(src)}},updateSourceRate:function(src){if(src.state===4114){AL.cancelPendingSourceAudio(src);var audioSrc=src.audioQueue[0];if(!audioSrc){return}var duration;if(src.type===4136&&src.looping){duration=Number.POSITIVE_INFINITY}else{duration=(audioSrc.buffer.duration-audioSrc._startOffset)/src.playbackRate}audioSrc._duration=duration;audioSrc.playbackRate.value=src.playbackRate;AL.scheduleSourceAudio(src)}},sourceDuration:function(src){var length=0;for(var i=0;i<src.bufQueue.length;i++){var audioBuf=src.bufQueue[i].audioBuf;length+=audioBuf?audioBuf.duration:0}return length},sourceTell:function(src){AL.updateSourceTime(src);var offset=0;for(var i=0;i<src.bufsProcessed;i++){offset+=src.bufQueue[i].audioBuf.duration}offset+=src.bufOffset;return offset},sourceSeek:function(src,offset){var playing=src.state==4114;if(playing){AL.setSourceState(src,4113)}if(src.bufQueue[src.bufsProcessed].audioBuf!==null){src.bufsProcessed=0;while(offset>src.bufQueue[src.bufsProcessed].audioBuf.duration){offset-=src.bufQueue[src.bufsProcessed].audiobuf.duration;src.bufsProcessed++}src.bufOffset=offset}if(playing){AL.setSourceState(src,4114)}},getGlobalParam:function(funcname,param){if(!AL.currentCtx){return null}switch(param){case 49152:return AL.currentCtx.dopplerFactor;case 49155:return AL.currentCtx.speedOfSound;case 53248:return AL.currentCtx.distanceModel;default:AL.currentCtx.err=40962;return null}},setGlobalParam:function(funcname,param,value){if(!AL.currentCtx){return}switch(param){case 49152:if(!Number.isFinite(value)||value<0){AL.currentCtx.err=40963;return}AL.currentCtx.dopplerFactor=value;AL.updateListenerSpace(AL.currentCtx);break;case 49155:if(!Number.isFinite(value)||value<=0){AL.currentCtx.err=40963;return}AL.currentCtx.speedOfSound=value;AL.updateListenerSpace(AL.currentCtx);break;case 53248:switch(value){case 0:case 53249:case 53250:case 53251:case 53252:case 53253:case 53254:AL.currentCtx.distanceModel=value;AL.updateContextGlobal(AL.currentCtx);break;default:AL.currentCtx.err=40963;return}break;default:AL.currentCtx.err=40962;return}},getListenerParam:function(funcname,param){if(!AL.currentCtx){return null}switch(param){case 4100:return AL.currentCtx.listener.position;case 4102:return AL.currentCtx.listener.velocity;case 4111:return AL.currentCtx.listener.direction.concat(AL.currentCtx.listener.up);case 4106:return AL.currentCtx.gain.gain.value;default:AL.currentCtx.err=40962;return null}},setListenerParam:function(funcname,param,value){if(!AL.currentCtx){return}if(value===null){AL.currentCtx.err=40962;return}var listener=AL.currentCtx.listener;switch(param){case 4100:if(!Number.isFinite(value[0])||!Number.isFinite(value[1])||!Number.isFinite(value[2])){AL.currentCtx.err=40963;return}listener.position[0]=value[0];listener.position[1]=value[1];listener.position[2]=value[2];AL.updateListenerSpace(AL.currentCtx);break;case 4102:if(!Number.isFinite(value[0])||!Number.isFinite(value[1])||!Number.isFinite(value[2])){AL.currentCtx.err=40963;return}listener.velocity[0]=value[0];listener.velocity[1]=value[1];listener.velocity[2]=value[2];AL.updateListenerSpace(AL.currentCtx);break;case 4106:if(!Number.isFinite(value)||value<0){AL.currentCtx.err=40963;return}AL.currentCtx.gain.gain.value=value;break;case 4111:if(!Number.isFinite(value[0])||!Number.isFinite(value[1])||!Number.isFinite(value[2])||!Number.isFinite(value[3])||!Number.isFinite(value[4])||!Number.isFinite(value[5])){AL.currentCtx.err=40963;return}listener.direction[0]=value[0];listener.direction[1]=value[1];listener.direction[2]=value[2];listener.up[0]=value[3];listener.up[1]=value[4];listener.up[2]=value[5];AL.updateListenerSpace(AL.currentCtx);break;default:AL.currentCtx.err=40962;return}},getBufferParam:function(funcname,bufferId,param){if(!AL.currentCtx){return}var buf=AL.buffers[bufferId];if(!buf||bufferId===0){AL.currentCtx.err=40961;return}switch(param){case 8193:return buf.frequency;case 8194:return buf.bytesPerSample*8;case 8195:return buf.channels;case 8196:return buf.length*buf.bytesPerSample*buf.channels;case 8213:if(buf.length===0){return[0,0]}else{return[(buf.audioBuf._loopStart||0)*buf.frequency,(buf.audioBuf._loopEnd||buf.length)*buf.frequency]}default:AL.currentCtx.err=40962;return null}},setBufferParam:function(funcname,bufferId,param,value){if(!AL.currentCtx){return}var buf=AL.buffers[bufferId];if(!buf||bufferId===0){AL.currentCtx.err=40961;return}if(value===null){AL.currentCtx.err=40962;return}switch(param){case 8196:if(value!==0){AL.currentCtx.err=40963;return}break;case 8213:if(value[0]<0||value[0]>buf.length||value[1]<0||value[1]>buf.Length||value[0]>=value[1]){AL.currentCtx.err=40963;return}if(buf.refCount>0){AL.currentCtx.err=40964;return}if(buf.audioBuf){buf.audioBuf._loopStart=value[0]/buf.frequency;buf.audioBuf._loopEnd=value[1]/buf.frequency}break;default:AL.currentCtx.err=40962;return}},getSourceParam:function(funcname,sourceId,param){if(!AL.currentCtx){return null}var src=AL.currentCtx.sources[sourceId];if(!src){AL.currentCtx.err=40961;return null}switch(param){case 514:return src.relative;case 4097:return src.coneInnerAngle;case 4098:return src.coneOuterAngle;case 4099:return src.pitch;case 4100:return src.position;case 4101:return src.direction;case 4102:return src.velocity;case 4103:return src.looping;case 4105:if(src.type===4136){return src.bufQueue[0].id}else{return 0}case 4106:return src.gain.gain.value;case 4109:return src.minGain;case 4110:return src.maxGain;case 4112:return src.state;case 4117:if(src.bufQueue.length===1&&src.bufQueue[0].id===0){return 0}else{return src.bufQueue.length}case 4118:if(src.bufQueue.length===1&&src.bufQueue[0].id===0||src.looping){return 0}else{return src.bufsProcessed}case 4128:return src.refDistance;case 4129:return src.rolloffFactor;case 4130:return src.coneOuterGain;case 4131:return src.maxDistance;case 4132:return AL.sourceTell(src);case 4133:var offset=AL.sourceTell(src);if(offset>0){offset*=src.bufQueue[0].frequency}return offset;case 4134:var offset=AL.sourceTell(src);if(offset>0){offset*=src.bufQueue[0].frequency*src.bufQueue[0].bytesPerSample}return offset;case 4135:return src.type;case 4628:return src.spatialize;case 8201:var length=0;var bytesPerFrame=0;for(var i=0;i<src.bufQueue.length;i++){length+=src.bufQueue[i].length;if(src.bufQueue[i].id!==0){bytesPerFrame=src.bufQueue[i].bytesPerSample*src.bufQueue[i].channels}}return length*bytesPerFrame;case 8202:var length=0;for(var i=0;i<src.bufQueue.length;i++){length+=src.bufQueue[i].length}return length;case 8203:return AL.sourceDuration(src);case 53248:return src.distanceModel;default:AL.currentCtx.err=40962;return null}},setSourceParam:function(funcname,sourceId,param,value){if(!AL.currentCtx){return}var src=AL.currentCtx.sources[sourceId];if(!src){AL.currentCtx.err=40961;return}if(value===null){AL.currentCtx.err=40962;return}switch(param){case 514:if(value===1){src.relative=true;AL.updateSourceSpace(src)}else if(value===0){src.relative=false;AL.updateSourceSpace(src)}else{AL.currentCtx.err=40963;return}break;case 4097:if(!Number.isFinite(value)){AL.currentCtx.err=40963;return}src.coneInnerAngle=value;if(src.panner){src.panner.coneInnerAngle=value%360}break;case 4098:if(!Number.isFinite(value)){AL.currentCtx.err=40963;return}src.coneOuterAngle=value;if(src.panner){src.panner.coneOuterAngle=value%360}break;case 4099:if(!Number.isFinite(value)||value<=0){AL.currentCtx.err=40963;return}if(src.pitch===value){break}src.pitch=value;AL.updateSourceRate(src);break;case 4100:if(!Number.isFinite(value[0])||!Number.isFinite(value[1])||!Number.isFinite(value[2])){AL.currentCtx.err=40963;return}src.position[0]=value[0];src.position[1]=value[1];src.position[2]=value[2];AL.updateSourceSpace(src);break;case 4101:if(!Number.isFinite(value[0])||!Number.isFinite(value[1])||!Number.isFinite(value[2])){AL.currentCtx.err=40963;return}src.direction[0]=value[0];src.direction[1]=value[1];src.direction[2]=value[2];AL.updateSourceSpace(src);break;case 4102:if(!Number.isFinite(value[0])||!Number.isFinite(value[1])||!Number.isFinite(value[2])){AL.currentCtx.err=40963;return}src.velocity[0]=value[0];src.velocity[1]=value[1];src.velocity[2]=value[2];AL.updateSourceSpace(src);break;case 4103:if(value===1){src.looping=true;AL.updateSourceTime(src);if(src.type===4136&&src.audioQueue.length>0){var audioSrc=src.audioQueue[0];audioSrc.loop=true;audioSrc._duration=Number.POSITIVE_INFINITY}}else if(value===0){src.looping=false;var currentTime=AL.updateSourceTime(src);if(src.type===4136&&src.audioQueue.length>0){var audioSrc=src.audioQueue[0];audioSrc.loop=false;audioSrc._duration=src.bufQueue[0].audioBuf.duration/src.playbackRate;audioSrc._startTime=currentTime-src.bufOffset/src.playbackRate}}else{AL.currentCtx.err=40963;return}break;case 4105:if(src.state===4114||src.state===4115){AL.currentCtx.err=40964;return}if(value===0){for(var i in src.bufQueue){src.bufQueue[i].refCount--}src.bufQueue.length=1;src.bufQueue[0]=AL.buffers[0];src.bufsProcessed=0;src.type=4144}else{var buf=AL.buffers[value];if(!buf){AL.currentCtx.err=40963;return}for(var i in src.bufQueue){src.bufQueue[i].refCount--}src.bufQueue.length=0;buf.refCount++;src.bufQueue=[buf];src.bufsProcessed=0;src.type=4136}AL.initSourcePanner(src);AL.scheduleSourceAudio(src);break;case 4106:if(!Number.isFinite(value)||value<0){AL.currentCtx.err=40963;return}src.gain.gain.value=value;break;case 4109:if(!Number.isFinite(value)||value<0||value>Math.min(src.maxGain,1)){AL.currentCtx.err=40963;return}src.minGain=value;break;case 4110:if(!Number.isFinite(value)||value<Math.max(0,src.minGain)||value>1){AL.currentCtx.err=40963;return}src.maxGain=value;break;case 4128:if(!Number.isFinite(value)||value<0){AL.currentCtx.err=40963;return}src.refDistance=value;if(src.panner){src.panner.refDistance=value}break;case 4129:if(!Number.isFinite(value)||value<0){AL.currentCtx.err=40963;return}src.rolloffFactor=value;if(src.panner){src.panner.rolloffFactor=value}break;case 4130:if(!Number.isFinite(value)||value<0||value>1){AL.currentCtx.err=40963;return}src.coneOuterGain=value;if(src.panner){src.panner.coneOuterGain=value}break;case 4131:if(!Number.isFinite(value)||value<0){AL.currentCtx.err=40963;return}src.maxDistance=value;if(src.panner){src.panner.maxDistance=value}break;case 4132:if(value<0||value>AL.sourceDuration(src)){AL.currentCtx.err=40963;return}AL.sourceSeek(src,value);break;case 4133:var srcLen=AL.sourceDuration(src);if(srcLen>0){var frequency;for(var bufId in src.bufQueue){if(bufId){frequency=src.bufQueue[bufId].frequency;break}}value/=frequency}if(value<0||value>srcLen){AL.currentCtx.err=40963;return}AL.sourceSeek(src,value);break;case 4134:var srcLen=AL.sourceDuration(src);if(srcLen>0){var bytesPerSec;for(var bufId in src.bufQueue){if(bufId){var buf=src.bufQueue[bufId];bytesPerSec=buf.frequency*buf.bytesPerSample*buf.channels;break}}value/=bytesPerSec}if(value<0||value>srcLen){AL.currentCtx.err=40963;return}AL.sourceSeek(src,value);break;case 4628:if(value!==0&&value!==1&&value!==2){AL.currentCtx.err=40963;return}src.spatialize=value;AL.initSourcePanner(src);break;case 8201:case 8202:case 8203:AL.currentCtx.err=40964;break;case 53248:switch(value){case 0:case 53249:case 53250:case 53251:case 53252:case 53253:case 53254:src.distanceModel=value;if(AL.currentCtx.sourceDistanceModel){AL.updateContextGlobal(AL.currentCtx)}break;default:AL.currentCtx.err=40963;return}break;default:AL.currentCtx.err=40962;return}},captures:{},sharedCaptureAudioCtx:null,requireValidCaptureDevice:function(deviceId,funcname){if(deviceId===0){AL.alcErr=40961;return null}var c=AL.captures[deviceId];if(!c){AL.alcErr=40961;return null}var err=c.mediaStreamError;if(err){AL.alcErr=40961;return null}return c}};function runAndAbortIfError(func){try{return func()}catch(e){abort(e)}}var Asyncify={State:{Normal:0,Unwinding:1,Rewinding:2},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,afterUnwind:null,asyncFinalizers:[],sleepCallbacks:[],getCallStackId:function(funcName){var id=Asyncify.callStackNameToId[funcName];if(id===undefined){id=Asyncify.callStackId++;Asyncify.callStackNameToId[funcName]=id;Asyncify.callStackIdToName[id]=funcName}return id},instrumentWasmExports:function(exports){var ret={};for(var x in exports){(function(x){var original=exports[x];if(typeof original==="function"){ret[x]=function(){Asyncify.exportCallStack.push(x);try{return original.apply(null,arguments)}finally{if(ABORT)return;var y=Asyncify.exportCallStack.pop();assert(y===x);Asyncify.maybeStopUnwind()}}}else{ret[x]=original}})(x)}return ret},maybeStopUnwind:function(){if(Asyncify.currData&&Asyncify.state===Asyncify.State.Unwinding&&Asyncify.exportCallStack.length===0){Asyncify.state=Asyncify.State.Normal;runAndAbortIfError(Module["_asyncify_stop_unwind"]);if(typeof Fibers!=="undefined"){Fibers.trampoline()}if(Asyncify.afterUnwind){Asyncify.afterUnwind();Asyncify.afterUnwind=null}}},allocateData:function(){var ptr=_malloc(12+Asyncify.StackSize);Asyncify.setDataHeader(ptr,ptr+12,Asyncify.StackSize);Asyncify.setDataRewindFunc(ptr);return ptr},setDataHeader:function(ptr,stack,stackSize){HEAP32[ptr>>2]=stack;HEAP32[ptr+4>>2]=stack+stackSize},setDataRewindFunc:function(ptr){var bottomOfCallStack=Asyncify.exportCallStack[0];var rewindId=Asyncify.getCallStackId(bottomOfCallStack);HEAP32[ptr+8>>2]=rewindId},getDataRewindFunc:function(ptr){var id=HEAP32[ptr+8>>2];var name=Asyncify.callStackIdToName[id];var func=Module["asm"][name];return func},handleSleep:function(startAsync){if(ABORT)return;noExitRuntime=true;if(Asyncify.state===Asyncify.State.Normal){var reachedCallback=false;var reachedAfterCallback=false;startAsync(function(handleSleepReturnValue){if(ABORT)return;Asyncify.handleSleepReturnValue=handleSleepReturnValue||0;reachedCallback=true;if(!reachedAfterCallback){return}Asyncify.state=Asyncify.State.Rewinding;runAndAbortIfError(function(){Module["_asyncify_start_rewind"](Asyncify.currData)});if(typeof Browser!=="undefined"&&Browser.mainLoop.func){Browser.mainLoop.resume()}var start=Asyncify.getDataRewindFunc(Asyncify.currData);var asyncWasmReturnValue=start();if(!Asyncify.currData){var asyncFinalizers=Asyncify.asyncFinalizers;Asyncify.asyncFinalizers=[];asyncFinalizers.forEach(function(func){func(asyncWasmReturnValue)})}});reachedAfterCallback=true;if(!reachedCallback){Asyncify.state=Asyncify.State.Unwinding;Asyncify.currData=Asyncify.allocateData();runAndAbortIfError(function(){Module["_asyncify_start_unwind"](Asyncify.currData)});if(typeof Browser!=="undefined"&&Browser.mainLoop.func){Browser.mainLoop.pause()}}}else if(Asyncify.state===Asyncify.State.Rewinding){Asyncify.state=Asyncify.State.Normal;runAndAbortIfError(Module["_asyncify_stop_rewind"]);_free(Asyncify.currData);Asyncify.currData=null;Asyncify.sleepCallbacks.forEach(function(func){func()})}else{abort("invalid state: "+Asyncify.state)}return Asyncify.handleSleepReturnValue},handleAsync:function(startAsync){return Asyncify.handleSleep(function(wakeUp){startAsync().then(wakeUp)})}};function _siv3dDecodeAudioFromFile(filePath,arg){Asyncify.handleSleep(function(wakeUp){const path=UTF8ToString(filePath,1024);const fileBytes=FS.readFile(path);const onSuccess=function(decoded){const leftDataBuffer=Module["_malloc"](decoded.length*4);HEAPF32.set(decoded.getChannelData(0),leftDataBuffer>>2);let rightDataBuffer;if(decoded.numberOfChannels>=2){rightDataBuffer=Module["_malloc"](decoded.length*4);HEAPF32.set(decoded.getChannelData(1),rightDataBuffer>>2)}else{rightDataBuffer=leftDataBuffer}HEAP32[(arg>>2)+0]=leftDataBuffer;HEAP32[(arg>>2)+1]=rightDataBuffer;HEAPU32[(arg>>2)+2]=decoded.sampleRate;HEAPU32[(arg>>2)+3]=decoded.length;wakeUp()};const onFailure=function(){HEAP32[(arg>>2)+0]=0;HEAP32[(arg>>2)+1]=0;HEAPU32[(arg>>2)+2]=0;HEAPU32[(arg>>2)+3]=0;wakeUp()};Module["SDL2"].audioContext.decodeAudioData(fileBytes.buffer,onSuccess,onFailure)})}function _siv3dEnumerateAvailableTextToSpeechLanguages(returnPtr){const LanguageNameToLanguageCodeList={"ar-SA":1025,"zh-CN":2052,"zh-HK":3076,"zh-TW":1028,"en-AU":3081,"en-GB":2057,"en-US":1033,"fr-FR":1036,"de-DE":1031,"hi-IN":1081,"it-IT":1040,"ja-JP":1041,"ko-KR":1042,"pt-BR":1046,"ru-RU":1049,"es-ES":1034};const voices=window.speechSynthesis.getVoices();let listBufferPtr=Module["_malloc"](voices.length*4*2);setValue(returnPtr,voices.length,"i32");setValue(returnPtr+4,listBufferPtr,"i32");for(let i=0;i<voices.length;i++){const languageCode=LanguageNameToLanguageCodeList[voices[i].lang];setValue(listBufferPtr+0,languageCode,"i32");setValue(listBufferPtr+4,voices[i].default,"i32");listBufferPtr+=8}}function _siv3dExitFullscreen(){siv3dRegisterUserAction(function(){Browser.exitFullscreen()})}function _siv3dGetClipboardText(){return Asyncify.handleSleep(function(wakeUp){siv3dRegisterUserAction(function(){navigator.clipboard.readText().then(str=>{const strPtr=allocate(intArrayFromString(str),ALLOC_NORMAL);wakeUp(strPtr)}).catch(_=>{wakeUp(0)})})})}function _siv3dGetJoystickInfo(joystickId){return GLFW.joys[joystickId].id}var siv3dActiveTouches=[];function siv3dAdjustPoint(x,y){const rect=Module["canvas"].getBoundingClientRect();const cw=Module["canvas"].width;const ch=Module["canvas"].height;const scrollX=typeof window.scrollX!=="undefined"?window.scrollX:window.pageXOffset;const scrollY=typeof window.scrollY!=="undefined"?window.scrollY:window.pageYOffset;let adjustedX=x-(scrollX+rect.left);let adjustedY=y-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);return{x:adjustedX,y:adjustedY}}function _siv3dGetPrimaryTouchPoint(pX,pY){if(siv3dActiveTouches.length>0){const touch=siv3dActiveTouches[0];const adjusted=siv3dAdjustPoint(touch.pageX,touch.pageY);setValue(pX,adjusted.x,"double");setValue(pY,adjusted.y,"double");return 1}else{return 0}}var siv3dInputElement=null;var siv3dDialogFileReader=null;var siv3dSaveFileBuffer=null;var siv3dSaveFileBufferWritePos=0;var siv3dDefaultSaveFileName=null;var siv3dDownloadLink=null;function siv3dWriteSaveFileBuffer(tty,chr){if(siv3dSaveFileBufferWritePos>=siv3dSaveFileBuffer.length){const newBuffer=new Uint8Array(siv3dSaveFileBuffer.length*2);newBuffer.set(siv3dSaveFileBuffer);siv3dSaveFileBuffer=newBuffer}siv3dSaveFileBuffer[siv3dSaveFileBufferWritePos]=chr;siv3dSaveFileBufferWritePos++}function siv3dFlushSaveFileBuffer(tty){if(siv3dSaveFileBufferWritePos==0){return}const data=siv3dSaveFileBuffer.subarray(0,siv3dSaveFileBufferWritePos);const blob=new Blob([data],{type:"application/octet-stream"});siv3dDownloadLink.href=URL.createObjectURL(blob);siv3dDownloadLink.download=siv3dDefaultSaveFileName;siv3dRegisterUserAction(function(){siv3dDownloadLink.click()});siv3dSaveFileBufferWritePos=0}function _siv3dInitDialog(){siv3dInputElement=document.createElement("input");siv3dInputElement.type="file";siv3dDialogFileReader=new FileReader;siv3dSaveFileBuffer=new Uint8Array(16*1024);siv3dDownloadLink=document.createElement("a");TTY.register(FS.makedev(20,0),{put_char:siv3dWriteSaveFileBuffer,flush:siv3dFlushSaveFileBuffer});FS.mkdev("/dev/save",FS.makedev(20,0))}var siv3dTextInputElement=null;function _siv3dInitTextInput(){const textInput=document.createElement("input");textInput.type="text";textInput.style.position="absolute";textInput.style.zIndex=-2;textInput.autocomplete=false;const maskDiv=document.createElement("div");maskDiv.style.background="white";maskDiv.style.position="absolute";maskDiv.style.width="100%";maskDiv.style.height="100%";maskDiv.style.zIndex=-1;const canvas=Module["canvas"];canvas.parentNode.prepend(textInput);canvas.parentNode.prepend(maskDiv);siv3dTextInputElement=textInput}function _siv3dIsSpeakingTextToSpeechLanguages(){return window.speechSynthesis.speaking}function _siv3dLaunchBrowser(url){const urlString=UTF8ToString(url);siv3dRegisterUserAction(function(){window.open(urlString,"_blank")})}function _siv3dPauseTextToSpeechLanguages(){window.speechSynthesis.pause()}function _siv3dQueryNotificationPermission(){const status={"default":0,"granted":1,"denied":2};return status[Notification.permission]}var siv3dDragDropFileReader=null;function _siv3dRegisterDragDrop(ptr){Module["canvas"]["ondrop"]=function(e){e.preventDefault();const items=e.dataTransfer.items;const adusted=siv3dAdjustPoint(e.pageX,e.pageY);if(items.length==0){return}if(items[0].kind==="string"){items[0].getAsString(function(str){const strPtr=allocate(intArrayFromString(str),ALLOC_NORMAL);(function(a1){dynCall_vi.apply(null,[ptr,a1])})(strPtr,adusted.x,adusted.y);Module["_free"](strPtr)})}else if(items[0].kind==="file"){const file=items[0].getAsFile();if(!siv3dDragDropFileReader){siv3dDragDropFileReader=new FileReader}const filePath=`/tmp/${file.name}`;siv3dDragDropFileReader.addEventListener("load",function onLoaded(){FS.writeFile(filePath,new Uint8Array(siv3dDragDropFileReader.result));const namePtr=allocate(intArrayFromString(filePath),ALLOC_NORMAL);(function(a1){dynCall_vi.apply(null,[ptr,a1])})(namePtr,adusted.x,adusted.y);siv3dDragDropFileReader.removeEventListener("load",onLoaded)});siv3dDragDropFileReader.readAsArrayBuffer(file)}}}function _siv3dRegisterDragEnter(ptr){Module["canvas"]["ondragenter"]=function(e){e.preventDefault();const types=e.dataTransfer.types;if(types.length>0){const adusted=siv3dAdjustPoint(e.pageX,e.pageY);(function(a1){dynCall_vi.apply(null,[ptr,a1])})(types[0]==="Files"?1:0,adusted.x,adusted.y)}}}function _siv3dRegisterDragExit(ptr){Module["canvas"]["ondragexit"]=function(e){e.preventDefault();(function(){dynCall_v.call(null,ptr)})()}}function _siv3dRegisterDragUpdate(ptr){Module["canvas"]["ondragover"]=function(e){e.preventDefault();const adusted=siv3dAdjustPoint(e.pageX,e.pageY);(function(a1,a2){dynCall_vii.apply(null,[ptr,a1,a2])})(adusted.x,adusted.y)}}function _siv3dRegisterNotificationCallback(id,callback,callbackArg){const notificattion=siv3dNotifications[id];notificattion.onclick=function(){(function(a1,a2,a3){dynCall_viii.apply(null,[callback,a1,a2,a3])})(id,1,callbackArg)};notificattion.onshow=function(){(function(a1,a2,a3){dynCall_viii.apply(null,[callback,a1,a2,a3])})(id,2,callbackArg)};notificattion.onclose=function(){(function(a1,a2,a3){dynCall_viii.apply(null,[callback,a1,a2,a3])})(id,5,callbackArg)};notificattion.onerror=function(){(function(a1,a2,a3){dynCall_viii.apply(null,[callback,a1,a2,a3])})(id,6,callbackArg)}}function _siv3dRegisterTextInputCallback(callback){siv3dTextInputElement.addEventListener("input",function(e){if(e.inputType=="insertText"){if(e.data){for(let i=0;i<e.data.length;i++){const codePoint=e.data.charCodeAt(i);(function(a1){dynCall_vi.apply(null,[callback,a1])})(codePoint)}}}});siv3dTextInputElement.addEventListener("compositionend",function(e){for(let i=0;i<e.data.length;i++){const codePoint=e.data.charCodeAt(i);(function(a1){dynCall_vi.apply(null,[callback,a1])})(codePoint)}})}function _siv3dRegisterTextInputMarkedCallback(callback){siv3dTextInputElement.addEventListener("compositionupdate",function(e){const strPtr=allocate(intArrayFromString(e.data),ALLOC_NORMAL);(function(a1){dynCall_vi.apply(null,[callback,a1])})(strPtr);Module["_free"](strPtr)});siv3dTextInputElement.addEventListener("compositionend",function(e){(function(a1){dynCall_vi.apply(null,[callback,a1])})(0)})}function siv3dOnTouchMove(e){siv3dActiveTouches=Array.from(e.touches);e.stopPropagation()}function siv3dOnTouchStart(e){siv3dActiveTouches=Array.from(e.touches);e.preventDefault()}function _siv3dRegisterTouchCallback(){Module["canvas"].addEventListener("touchstart",siv3dOnTouchStart);Module["canvas"].addEventListener("touchmove",siv3dOnTouchMove)}function _siv3dRequestAnimationFrame(){Asyncify.handleSleep(function(wakeUp){requestAnimationFrame(function(){wakeUp()})})}function _siv3dRequestFullscreen(){siv3dRegisterUserAction(function(){Browser.requestFullscreen()})}function _siv3dRequestTextInputFocus(isFocusRequired){const isFocusRequiredBool=isFocusRequired!=0;if(isFocusRequiredBool){siv3dRegisterUserAction(function(){siv3dTextInputElement.value="";siv3dTextInputElement.focus()})}else{siv3dRegisterUserAction(function(){siv3dTextInputElement.blur()})}}function _siv3dResumeTextToSpeechLanguages(){window.speechSynthesis.resume()}function _siv3dSetClipboardText(ctext){const text=UTF8ToString(ctext);siv3dRegisterUserAction(function(){navigator.clipboard.writeText(text)})}function _siv3dSetCursorStyle(style){const styleText=UTF8ToString(style);Module["canvas"]["style"]["cursor"]=styleText}function _siv3dShowMessageBox(messagePtr,type){const message=UTF8ToString(messagePtr);if(type===0){window.alert(message);return 0}else if(type===1){return window.confirm(message)?0:1}return 4}function _siv3dStartTextToSpeechLanguages(textPtr,rate,volume,languageCode){const LanguageCodeToLanguageNameList={1025:"ar-SA",2052:"zh-CN",3076:"zh-HK",1028:"zh-TW",3081:"en-AU",2057:"en-GB",1033:"en-US",1036:"fr-FR",1031:"de-DE",1081:"hi-IN",1040:"it-IT",1041:"ja-JP",1042:"ko-KR",1046:"pt-BR",1049:"ru-RU",1034:"es-ES"};const text=UTF8ToString(textPtr);const speechUtter=new SpeechSynthesisUtterance(text);speechUtter.lang=LanguageCodeToLanguageNameList[languageCode];speechUtter.rate=rate;speechUtter.volume=volume;window.speechSynthesis.speak(speechUtter)}var siv3dHasUserActionTriggered=false;function siv3dTriggerUserAction(){for(let action of siv3dPendingUserActions){action()}siv3dPendingUserActions.splice(0);siv3dHasUserActionTriggered=false}function siv3dUserActionHookCallBack(){if(!siv3dHasUserActionTriggered){setTimeout(siv3dTriggerUserAction,30);siv3dHasUserActionTriggered=true}}function _siv3dStartUserActionHook(){Module["canvas"].addEventListener("touchend",siv3dUserActionHookCallBack);Module["canvas"].addEventListener("mousedown",siv3dUserActionHookCallBack);window.addEventListener("keydown",siv3dUserActionHookCallBack)}function _siv3dStopUserActionHook(){Module["canvas"].removeEventListener("touchend",siv3dUserActionHookCallBack);Module["canvas"].removeEventListener("mousedown",siv3dUserActionHookCallBack);window.removeEventListener("keydown",siv3dUserActionHookCallBack)}function _siv3dUnregisterTouchCallback(){Module["canvas"].removeEventListener("touchstart",siv3dOnTouchStart);Module["canvas"].removeEventListener("touchmove",siv3dOnTouchMove)}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value==="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={"%a":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},"%A":function(date){return WEEKDAYS[date.tm_wday]},"%b":function(date){return MONTHS[date.tm_mon].substring(0,3)},"%B":function(date){return MONTHS[date.tm_mon]},"%C":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},"%d":function(date){return leadingNulls(date.tm_mday,2)},"%e":function(date){return leadingSomething(date.tm_mday,2," ")},"%g":function(date){return getWeekBasedYear(date).toString().substring(2)},"%G":function(date){return getWeekBasedYear(date)},"%H":function(date){return leadingNulls(date.tm_hour,2)},"%I":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},"%j":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},"%m":function(date){return leadingNulls(date.tm_mon+1,2)},"%M":function(date){return leadingNulls(date.tm_min,2)},"%n":function(){return"\n"},"%p":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return"AM"}else{return"PM"}},"%S":function(date){return leadingNulls(date.tm_sec,2)},"%t":function(){return"\t"},"%u":function(date){return date.tm_wday||7},"%U":function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?"01":"00"},"%V":function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return"53"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return"01"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)},"%w":function(date){return date.tm_wday},"%W":function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?"01":"00"},"%y":function(date){return(date.tm_year+1900).toString().substring(2)},"%Y":function(date){return date.tm_year+1900},"%z":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)},"%Z":function(date){return date.tm_zone},"%%":function(){return"%"}};for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}function _uuid_generate(out){var uuid=null;if(ENVIRONMENT_IS_NODE){}else if(ENVIRONMENT_IS_WEB&&typeof window.crypto!=="undefined"&&typeof window.crypto.getRandomValues!=="undefined"){uuid=new Uint8Array(16);window.crypto.getRandomValues(uuid)}if(!uuid){uuid=new Array(16);var d=(new Date).getTime();for(var i=0;i<16;i++){var r=(d+Math.random()*256)%256|0;d=d/256|0;uuid[i]=r}}uuid[6]=uuid[6]&15|64;uuid[8]=uuid[8]&63|128;writeArrayToMemory(uuid,out)}var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.staticInit();Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createDevice"]=FS.createDevice;Module["FS_unlink"]=FS.unlink;Module["requestFullscreen"]=function Module_requestFullscreen(lockPointer,resizeCanvas){Browser.requestFullscreen(lockPointer,resizeCanvas)};Module["requestAnimationFrame"]=function Module_requestAnimationFrame(func){Browser.requestAnimationFrame(func)};Module["setCanvasSize"]=function Module_setCanvasSize(width,height,noUpdates){Browser.setCanvasSize(width,height,noUpdates)};Module["pauseMainLoop"]=function Module_pauseMainLoop(){Browser.mainLoop.pause()};Module["resumeMainLoop"]=function Module_resumeMainLoop(){Browser.mainLoop.resume()};Module["getUserMedia"]=function Module_getUserMedia(){Browser.getUserMedia()};Module["createContext"]=function Module_createContext(canvas,useWebGL,setInModule,webGLContextAttributes){return Browser.createContext(canvas,useWebGL,setInModule,webGLContextAttributes)};var GLctx;for(var i=0;i<32;++i)tempFixedLengthArray.push(new Array(i));function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var asmLibraryArg={"c":___cxa_allocate_exception,"Pb":___cxa_begin_catch,"Ja":___cxa_end_catch,"Nb":___cxa_find_matching_catch_2,"Ka":___cxa_find_matching_catch_3,"d":___cxa_throw,"Mb":___resumeException,"g":___stack_chk_fail,"Ma":___sys_fcntl64,"cc":___sys_fstat64,"Ub":___sys_getcwd,"Tb":___sys_getdents64,"fc":___sys_ioctl,"Wb":___sys_lstat64,"Vb":___sys_mkdir,"pa":___sys_open,"Xb":___sys_readlink,"dc":___sys_rmdir,"La":___sys_stat64,"ec":___sys_unlink,"l":_abort,"D":_clock_gettime,"Jh":_dlclose,"ai":_eglBindAPI,"di":_eglChooseConfig,"Th":_eglCreateContext,"Vh":_eglCreateWindowSurface,"Uh":_eglDestroyContext,"Wh":_eglDestroySurface,"ei":_eglGetConfigAttrib,"ob":_eglGetDisplay,"Rh":_eglGetError,"bi":_eglInitialize,"Xh":_eglMakeCurrent,"Qh":_eglQueryString,"Yh":_eglSwapBuffers,"Zh":_eglSwapInterval,"ci":_eglTerminate,"$h":_eglWaitGL,"_h":_eglWaitNative,"j":_emscripten_asm_const_int,"Kh":_emscripten_exit_fullscreen,"Ph":_emscripten_exit_pointerlock,"ea":_emscripten_get_device_pixel_ratio,"H":_emscripten_get_element_css_size,"Sa":_emscripten_get_gamepad_status,"Ih":_emscripten_get_num_gamepads,"mh":_emscripten_glActiveTexture,"lh":_emscripten_glAttachShader,"ee":_emscripten_glBeginQuery,"Dh":_emscripten_glBeginQueryEXT,"Id":_emscripten_glBeginTransformFeedback,"kh":_emscripten_glBindAttribLocation,"ih":_emscripten_glBindBuffer,"Fd":_emscripten_glBindBufferBase,"Gd":_emscripten_glBindBufferRange,"hh":_emscripten_glBindFramebuffer,"gh":_emscripten_glBindRenderbuffer,"Ic":_emscripten_glBindSampler,"fh":_emscripten_glBindTexture,"Ac":_emscripten_glBindTransformFeedback,"Nd":_emscripten_glBindVertexArray,"vh":_emscripten_glBindVertexArrayOES,"eh":_emscripten_glBlendColor,"dh":_emscripten_glBlendEquation,"ch":_emscripten_glBlendEquationSeparate,"bh":_emscripten_glBlendFunc,"ah":_emscripten_glBlendFuncSeparate,"Td":_emscripten_glBlitFramebuffer,"$g":_emscripten_glBufferData,"Zg":_emscripten_glBufferSubData,"Yg":_emscripten_glCheckFramebufferStatus,"Xg":_emscripten_glClear,"fd":_emscripten_glClearBufferfi,"gd":_emscripten_glClearBufferfv,"jd":_emscripten_glClearBufferiv,"hd":_emscripten_glClearBufferuiv,"Wg":_emscripten_glClearColor,"Vg":_emscripten_glClearDepthf,"Ug":_emscripten_glClearStencil,"Sc":_emscripten_glClientWaitSync,"Tg":_emscripten_glColorMask,"Sg":_emscripten_glCompileShader,"Rg":_emscripten_glCompressedTexImage2D,"ke":_emscripten_glCompressedTexImage3D,"Qg":_emscripten_glCompressedTexSubImage2D,"je":_emscripten_glCompressedTexSubImage3D,"dd":_emscripten_glCopyBufferSubData,"Pg":_emscripten_glCopyTexImage2D,"Og":_emscripten_glCopyTexSubImage2D,"le":_emscripten_glCopyTexSubImage3D,"Ng":_emscripten_glCreateProgram,"Mg":_emscripten_glCreateShader,"Lg":_emscripten_glCullFace,"Kg":_emscripten_glDeleteBuffers,"Jg":_emscripten_glDeleteFramebuffers,"Ig":_emscripten_glDeleteProgram,"ge":_emscripten_glDeleteQueries,"Gh":_emscripten_glDeleteQueriesEXT,"Hg":_emscripten_glDeleteRenderbuffers,"Kc":_emscripten_glDeleteSamplers,"Gg":_emscripten_glDeleteShader,"Tc":_emscripten_glDeleteSync,"Eg":_emscripten_glDeleteTextures,"zc":_emscripten_glDeleteTransformFeedbacks,"Md":_emscripten_glDeleteVertexArrays,"th":_emscripten_glDeleteVertexArraysOES,"Dg":_emscripten_glDepthFunc,"Cg":_emscripten_glDepthMask,"Bg":_emscripten_glDepthRangef,"Ag":_emscripten_glDetachShader,"zg":_emscripten_glDisable,"yg":_emscripten_glDisableVertexAttribArray,"xg":_emscripten_glDrawArrays,"Xc":_emscripten_glDrawArraysInstanced,"ph":_emscripten_glDrawArraysInstancedANGLE,"jc":_emscripten_glDrawArraysInstancedARB,"se":_emscripten_glDrawArraysInstancedEXT,"kc":_emscripten_glDrawArraysInstancedNV,"_d":_emscripten_glDrawBuffers,"qe":_emscripten_glDrawBuffersEXT,"qh":_emscripten_glDrawBuffersWEBGL,"wg":_emscripten_glDrawElements,"Wc":_emscripten_glDrawElementsInstanced,"oh":_emscripten_glDrawElementsInstancedANGLE,"hc":_emscripten_glDrawElementsInstancedARB,"ic":_emscripten_glDrawElementsInstancedEXT,"re":_emscripten_glDrawElementsInstancedNV,"oe":_emscripten_glDrawRangeElements,"vg":_emscripten_glEnable,"tg":_emscripten_glEnableVertexAttribArray,"de":_emscripten_glEndQuery,"Ch":_emscripten_glEndQueryEXT,"Hd":_emscripten_glEndTransformFeedback,"Vc":_emscripten_glFenceSync,"sg":_emscripten_glFinish,"rg":_emscripten_glFlush,"Od":_emscripten_glFlushMappedBufferRange,"qg":_emscripten_glFramebufferRenderbuffer,"pg":_emscripten_glFramebufferTexture2D,"Rd":_emscripten_glFramebufferTextureLayer,"og":_emscripten_glFrontFace,"ng":_emscripten_glGenBuffers,"lg":_emscripten_glGenFramebuffers,"he":_emscripten_glGenQueries,"Hh":_emscripten_glGenQueriesEXT,"kg":_emscripten_glGenRenderbuffers,"Lc":_emscripten_glGenSamplers,"hg":_emscripten_glGenTextures,"yc":_emscripten_glGenTransformFeedbacks,"Ld":_emscripten_glGenVertexArrays,"sh":_emscripten_glGenVertexArraysOES,"mg":_emscripten_glGenerateMipmap,"gg":_emscripten_glGetActiveAttrib,"fg":_emscripten_glGetActiveUniform,"_c":_emscripten_glGetActiveUniformBlockName,"$c":_emscripten_glGetActiveUniformBlockiv,"bd":_emscripten_glGetActiveUniformsiv,"eg":_emscripten_glGetAttachedShaders,"dg":_emscripten_glGetAttribLocation,"cg":_emscripten_glGetBooleanv,"Mc":_emscripten_glGetBufferParameteri64v,"bg":_emscripten_glGetBufferParameteriv,"$d":_emscripten_glGetBufferPointerv,"ag":_emscripten_glGetError,"$f":_emscripten_glGetFloatv,"sd":_emscripten_glGetFragDataLocation,"_f":_emscripten_glGetFramebufferAttachmentParameteriv,"Nc":_emscripten_glGetInteger64i_v,"Qc":_emscripten_glGetInteger64v,"Jd":_emscripten_glGetIntegeri_v,"Zf":_emscripten_glGetIntegerv,"nc":_emscripten_glGetInternalformativ,"uc":_emscripten_glGetProgramBinary,"Xf":_emscripten_glGetProgramInfoLog,"Yf":_emscripten_glGetProgramiv,"xh":_emscripten_glGetQueryObjecti64vEXT,"zh":_emscripten_glGetQueryObjectivEXT,"wh":_emscripten_glGetQueryObjectui64vEXT,"be":_emscripten_glGetQueryObjectuiv,"yh":_emscripten_glGetQueryObjectuivEXT,"ce":_emscripten_glGetQueryiv,"Ah":_emscripten_glGetQueryivEXT,"Wf":_emscripten_glGetRenderbufferParameteriv,"Cc":_emscripten_glGetSamplerParameterfv,"Dc":_emscripten_glGetSamplerParameteriv,"Uf":_emscripten_glGetShaderInfoLog,"Tf":_emscripten_glGetShaderPrecisionFormat,"Sf":_emscripten_glGetShaderSource,"Vf":_emscripten_glGetShaderiv,"Rf":_emscripten_glGetString,"ed":_emscripten_glGetStringi,"Pc":_emscripten_glGetSynciv,"Qf":_emscripten_glGetTexParameterfv,"Pf":_emscripten_glGetTexParameteriv,"Cd":_emscripten_glGetTransformFeedbackVarying,"ad":_emscripten_glGetUniformBlockIndex,"cd":_emscripten_glGetUniformIndices,"Mf":_emscripten_glGetUniformLocation,"Of":_emscripten_glGetUniformfv,"Nf":_emscripten_glGetUniformiv,"ud":_emscripten_glGetUniformuiv,"Ad":_emscripten_glGetVertexAttribIiv,"zd":_emscripten_glGetVertexAttribIuiv,"Jf":_emscripten_glGetVertexAttribPointerv,"Lf":_emscripten_glGetVertexAttribfv,"Kf":_emscripten_glGetVertexAttribiv,"If":_emscripten_glHint,"rc":_emscripten_glInvalidateFramebuffer,"qc":_emscripten_glInvalidateSubFramebuffer,"Hf":_emscripten_glIsBuffer,"Gf":_emscripten_glIsEnabled,"Ef":_emscripten_glIsFramebuffer,"Df":_emscripten_glIsProgram,"fe":_emscripten_glIsQuery,"Eh":_emscripten_glIsQueryEXT,"Cf":_emscripten_glIsRenderbuffer,"Jc":_emscripten_glIsSampler,"Bf":_emscripten_glIsShader,"Uc":_emscripten_glIsSync,"Af":_emscripten_glIsTexture,"xc":_emscripten_glIsTransformFeedback,"Kd":_emscripten_glIsVertexArray,"rh":_emscripten_glIsVertexArrayOES,"zf":_emscripten_glLineWidth,"yf":_emscripten_glLinkProgram,"Qd":_emscripten_glMapBufferRange,"wc":_emscripten_glPauseTransformFeedback,"xf":_emscripten_glPixelStorei,"wf":_emscripten_glPolygonOffset,"tc":_emscripten_glProgramBinary,"sc":_emscripten_glProgramParameteri,"Bh":_emscripten_glQueryCounterEXT,"pe":_emscripten_glReadBuffer,"vf":_emscripten_glReadPixels,"tf":_emscripten_glReleaseShaderCompiler,"sf":_emscripten_glRenderbufferStorage,"Sd":_emscripten_glRenderbufferStorageMultisample,"vc":_emscripten_glResumeTransformFeedback,"rf":_emscripten_glSampleCoverage,"Fc":_emscripten_glSamplerParameterf,"Ec":_emscripten_glSamplerParameterfv,"Hc":_emscripten_glSamplerParameteri,"Gc":_emscripten_glSamplerParameteriv,"qf":_emscripten_glScissor,"pf":_emscripten_glShaderBinary,"of":_emscripten_glShaderSource,"nf":_emscripten_glStencilFunc,"mf":_emscripten_glStencilFuncSeparate,"lf":_emscripten_glStencilMask,"kf":_emscripten_glStencilMaskSeparate,"hf":_emscripten_glStencilOp,"gf":_emscripten_glStencilOpSeparate,"ff":_emscripten_glTexImage2D,"ne":_emscripten_glTexImage3D,"ef":_emscripten_glTexParameterf,"df":_emscripten_glTexParameterfv,"cf":_emscripten_glTexParameteri,"bf":_emscripten_glTexParameteriv,"pc":_emscripten_glTexStorage2D,"oc":_emscripten_glTexStorage3D,"af":_emscripten_glTexSubImage2D,"me":_emscripten_glTexSubImage3D,"Dd":_emscripten_glTransformFeedbackVaryings,"$e":_emscripten_glUniform1f,"_e":_emscripten_glUniform1fv,"Ye":_emscripten_glUniform1i,"Xe":_emscripten_glUniform1iv,"rd":_emscripten_glUniform1ui,"nd":_emscripten_glUniform1uiv,"We":_emscripten_glUniform2f,"Ve":_emscripten_glUniform2fv,"Ue":_emscripten_glUniform2i,"Te":_emscripten_glUniform2iv,"qd":_emscripten_glUniform2ui,"md":_emscripten_glUniform2uiv,"Se":_emscripten_glUniform3f,"Re":_emscripten_glUniform3fv,"Qe":_emscripten_glUniform3i,"Pe":_emscripten_glUniform3iv,"pd":_emscripten_glUniform3ui,"ld":_emscripten_glUniform3uiv,"Ne":_emscripten_glUniform4f,"Me":_emscripten_glUniform4fv,"Le":_emscripten_glUniform4i,"Ke":_emscripten_glUniform4iv,"od":_emscripten_glUniform4ui,"kd":_emscripten_glUniform4uiv,"Yc":_emscripten_glUniformBlockBinding,"Je":_emscripten_glUniformMatrix2fv,"Zd":_emscripten_glUniformMatrix2x3fv,"Xd":_emscripten_glUniformMatrix2x4fv,"Ie":_emscripten_glUniformMatrix3fv,"Yd":_emscripten_glUniformMatrix3x2fv,"Vd":_emscripten_glUniformMatrix3x4fv,"He":_emscripten_glUniformMatrix4fv,"Wd":_emscripten_glUniformMatrix4x2fv,"Ud":_emscripten_glUniformMatrix4x3fv,"ae":_emscripten_glUnmapBuffer,"Ge":_emscripten_glUseProgram,"Fe":_emscripten_glValidateProgram,"Ee":_emscripten_glVertexAttrib1f,"Ce":_emscripten_glVertexAttrib1fv,"Be":_emscripten_glVertexAttrib2f,"Ae":_emscripten_glVertexAttrib2fv,"ze":_emscripten_glVertexAttrib3f,"ye":_emscripten_glVertexAttrib3fv,"xe":_emscripten_glVertexAttrib4f,"we":_emscripten_glVertexAttrib4fv,"Bc":_emscripten_glVertexAttribDivisor,"nh":_emscripten_glVertexAttribDivisorANGLE,"lc":_emscripten_glVertexAttribDivisorARB,"te":_emscripten_glVertexAttribDivisorEXT,"mc":_emscripten_glVertexAttribDivisorNV,"yd":_emscripten_glVertexAttribI4i,"wd":_emscripten_glVertexAttribI4iv,"xd":_emscripten_glVertexAttribI4ui,"vd":_emscripten_glVertexAttribI4uiv,"Bd":_emscripten_glVertexAttribIPointer,"ve":_emscripten_glVertexAttribPointer,"ue":_emscripten_glViewport,"Rc":_emscripten_glWaitSync,"sa":_emscripten_has_asyncify,"f":_emscripten_longjmp,"Rb":_emscripten_memcpy_big,"Lh":_emscripten_request_fullscreen_strategy,"nb":_emscripten_request_pointerlock,"Sb":_emscripten_resize_heap,"Ta":_emscripten_sample_gamepad_data,"Ua":_emscripten_set_beforeunload_callback_on_thread,"eb":_emscripten_set_blur_callback_on_thread,"Q":_emscripten_set_canvas_element_size,"qa":_emscripten_set_element_css_size,"fb":_emscripten_set_focus_callback_on_thread,"Xa":_emscripten_set_fullscreenchange_callback_on_thread,"Ra":_emscripten_set_gamepadconnected_callback_on_thread,"Qa":_emscripten_set_gamepaddisconnected_callback_on_thread,"_a":_emscripten_set_keydown_callback_on_thread,"Ya":_emscripten_set_keypress_callback_on_thread,"Za":_emscripten_set_keyup_callback_on_thread,"kb":_emscripten_set_mousedown_callback_on_thread,"ib":_emscripten_set_mouseenter_callback_on_thread,"hb":_emscripten_set_mouseleave_callback_on_thread,"lb":_emscripten_set_mousemove_callback_on_thread,"jb":_emscripten_set_mouseup_callback_on_thread,"$a":_emscripten_set_pointerlockchange_callback_on_thread,"Wa":_emscripten_set_resize_callback_on_thread,"ab":_emscripten_set_touchcancel_callback_on_thread,"cb":_emscripten_set_touchend_callback_on_thread,"bb":_emscripten_set_touchmove_callback_on_thread,"db":_emscripten_set_touchstart_callback_on_thread,"Va":_emscripten_set_visibilitychange_callback_on_thread,"gb":_emscripten_set_wheel_callback_on_thread,"ra":_emscripten_sleep,"bc":_emscripten_thread_sleep,"$b":_environ_get,"ac":_environ_sizes_get,"pb":_exit,"J":_fd_close,"_b":_fd_fdstat_get,"gc":_fd_read,"Lb":_fd_seek,"Na":_fd_write,"a":_getTempRet0,"Zb":_getentropy,"ba":_gettimeofday,"A":_glActiveTexture,"Aa":_glAttachShader,"i":_glBindBuffer,"Z":_glBindBufferBase,"e":_glBindFramebuffer,"la":_glBindRenderbuffer,"ua":_glBindSampler,"h":_glBindTexture,"k":_glBindVertexArray,"zb":_glBlendEquationSeparate,"yb":_glBlendFuncSeparate,"Cb":_glBlitFramebuffer,"o":_glBufferData,"P":_glBufferSubData,"w":_glCheckFramebufferStatus,"N":_glClear,"U":_glClearColor,"wa":_glClearDepth,"Ui":_glColorMask,"Ga":_glCompileShader,"Hb":_glCreateProgram,"Ia":_glCreateShader,"Si":_glCullFace,"L":_glDeleteBuffers,"W":_glDeleteFramebuffers,"Ib":_glDeleteProgram,"Y":_glDeleteRenderbuffers,"I":_glDeleteSamplers,"na":_glDeleteShader,"X":_glDeleteTextures,"oa":_glDeleteVertexArrays,"xa":_glDepthFunc,"ya":_glDepthMask,"za":_glDetachShader,"r":_glDisable,"Ab":_glDrawArrays,"va":_glDrawElements,"G":_glEnable,"t":_glEnableVertexAttribArray,"ja":_glFramebufferRenderbuffer,"C":_glFramebufferTexture2D,"Ti":_glFrontFace,"x":_glGenBuffers,"B":_glGenFramebuffers,"ma":_glGenRenderbuffers,"Bb":_glGenSamplers,"s":_glGenTextures,"O":_glGenVertexArrays,"ga":_glGetIntegerv,"Fa":_glGetShaderInfoLog,"_":_glGetShaderiv,"ha":_glGetString,"Ea":_glGetUniformBlockIndex,"Ba":_glGetUniformLocation,"Gb":_glLinkProgram,"aa":_glMapBufferRange,"Ri":_glPolygonOffset,"T":_glReadPixels,"ka":_glRenderbufferStorageMultisample,"ia":_glSamplerParameterf,"Qi":_glSamplerParameterfv,"v":_glSamplerParameteri,"xb":_glScissor,"Ha":_glShaderSource,"p":_glTexImage2D,"n":_glTexParameteri,"V":_glTexSubImage2D,"Jb":_glUniform1i,"Da":_glUniformBlockBinding,"$":_glUnmapBuffer,"Fb":_glUseProgram,"u":_glVertexAttribPointer,"S":_glViewport,"Ni":_glewInit,"Ze":_glfwCreateCursor,"Kb":_glfwCreateWindow,"Oe":_glfwDestroyCursor,"ca":_glfwGetCursorPos,"pi":_glfwGetFramebufferSize,"Ki":_glfwGetJoystickAxes,"Ji":_glfwGetJoystickButtons,"Hi":_glfwGetJoystickHats,"Gi":_glfwGetKeysSiv3D,"ta":_glfwGetWindowAttrib,"mi":_glfwGetWindowPos,"hi":_glfwGetWindowSize,"R":_glfwGetWindowUserPointer,"_g":_glfwIconifyWindow,"ie":_glfwInit,"Li":_glfwJoystickPresent,"Pi":_glfwMakeContextCurrent,"uh":_glfwMaximizeWindow,"Sh":_glfwPollEvents,"jh":_glfwRestoreWindow,"jf":_glfwSetCursorPos,"jg":_glfwSetErrorCallback,"Vi":_glfwSetFramebufferSizeCallback,"Di":_glfwSetMouseButtonCallback,"Ei":_glfwSetScrollCallback,"Ii":_glfwSetWindowFocusCallback,"Oi":_glfwSetWindowIconifyCallback,"Fh":_glfwSetWindowPos,"Db":_glfwSetWindowPosCallback,"Nh":_glfwSetWindowShouldClose,"Pa":_glfwSetWindowSize,"Wi":_glfwSetWindowSizeCallback,"Ca":_glfwSetWindowSizeLimits,"Mh":_glfwSetWindowTitle,"Eb":_glfwSetWindowUserPointer,"Mi":_glfwSwapBuffers,"wb":_glfwSwapInterval,"mb":_glfwTerminate,"K":_glfwWindowHint,"Oh":_glfwWindowShouldClose,"M":invoke_ii,"z":invoke_iii,"y":invoke_iiii,"fa":invoke_iiiii,"ji":invoke_iiiiiii,"qb":invoke_iiiiiiiiii,"ii":invoke_v,"m":invoke_vi,"F":invoke_vii,"q":invoke_viii,"rb":invoke_viiii,"gi":invoke_viiiii,"Qb":_llvm_eh_typeid_for,"Zc":_localtime_r,"li":_pthread_create,"ki":_pthread_join,"b":_setTempRet0,"E":_sigaction,"fi":_signal,"sb":_siv3dCloseNotification,"qi":_siv3dCreateNotification,"Oc":_siv3dDecodeAudioFromFile,"wi":_siv3dEnumerateAvailableTextToSpeechLanguages,"ug":_siv3dExitFullscreen,"De":_siv3dGetClipboardText,"vb":_siv3dGetJoystickInfo,"da":_siv3dGetPrimaryTouchPoint,"Bi":_siv3dInitDialog,"zi":_siv3dInitTextInput,"ui":_siv3dIsSpeakingTextToSpeechLanguages,"Fi":_siv3dLaunchBrowser,"ti":_siv3dPauseTextToSpeechLanguages,"ri":_siv3dQueryNotificationPermission,"id":_siv3dRegisterDragDrop,"Pd":_siv3dRegisterDragEnter,"td":_siv3dRegisterDragExit,"Ed":_siv3dRegisterDragUpdate,"oi":_siv3dRegisterNotificationCallback,"yi":_siv3dRegisterTextInputCallback,"xi":_siv3dRegisterTextInputMarkedCallback,"Ff":_siv3dRegisterTouchCallback,"Ai":_siv3dRequestAnimationFrame,"Fg":_siv3dRequestFullscreen,"tb":_siv3dRequestTextInputFocus,"si":_siv3dResumeTextToSpeechLanguages,"Oa":_siv3dSetClipboardText,"uf":_siv3dSetCursorStyle,"Ob":_siv3dShowMessageBox,"vi":_siv3dStartTextToSpeechLanguages,"Ci":_siv3dStartUserActionHook,"ub":_siv3dStopUserActionHook,"ig":_siv3dUnregisterTouchCallback,"Yb":_strftime_l,"ni":_uuid_generate};var asm=createWasm();var ___wasm_call_ctors=Module["___wasm_call_ctors"]=function(){return(___wasm_call_ctors=Module["___wasm_call_ctors"]=Module["asm"]["Yi"]).apply(null,arguments)};var _main=Module["_main"]=function(){return(_main=Module["_main"]=Module["asm"]["_i"]).apply(null,arguments)};var _free=Module["_free"]=function(){return(_free=Module["_free"]=Module["asm"]["$i"]).apply(null,arguments)};var _malloc=Module["_malloc"]=function(){return(_malloc=Module["_malloc"]=Module["asm"]["aj"]).apply(null,arguments)};var ___errno_location=Module["___errno_location"]=function(){return(___errno_location=Module["___errno_location"]=Module["asm"]["bj"]).apply(null,arguments)};var __get_tzname=Module["__get_tzname"]=function(){return(__get_tzname=Module["__get_tzname"]=Module["asm"]["cj"]).apply(null,arguments)};var __get_daylight=Module["__get_daylight"]=function(){return(__get_daylight=Module["__get_daylight"]=Module["asm"]["dj"]).apply(null,arguments)};var __get_timezone=Module["__get_timezone"]=function(){return(__get_timezone=Module["__get_timezone"]=Module["asm"]["ej"]).apply(null,arguments)};var stackSave=Module["stackSave"]=function(){return(stackSave=Module["stackSave"]=Module["asm"]["fj"]).apply(null,arguments)};var stackRestore=Module["stackRestore"]=function(){return(stackRestore=Module["stackRestore"]=Module["asm"]["gj"]).apply(null,arguments)};var stackAlloc=Module["stackAlloc"]=function(){return(stackAlloc=Module["stackAlloc"]=Module["asm"]["hj"]).apply(null,arguments)};var _setThrew=Module["_setThrew"]=function(){return(_setThrew=Module["_setThrew"]=Module["asm"]["ij"]).apply(null,arguments)};var ___cxa_can_catch=Module["___cxa_can_catch"]=function(){return(___cxa_can_catch=Module["___cxa_can_catch"]=Module["asm"]["jj"]).apply(null,arguments)};var ___cxa_is_pointer_type=Module["___cxa_is_pointer_type"]=function(){return(___cxa_is_pointer_type=Module["___cxa_is_pointer_type"]=Module["asm"]["kj"]).apply(null,arguments)};var dynCall_vi=Module["dynCall_vi"]=function(){return(dynCall_vi=Module["dynCall_vi"]=Module["asm"]["lj"]).apply(null,arguments)};var dynCall_ii=Module["dynCall_ii"]=function(){return(dynCall_ii=Module["dynCall_ii"]=Module["asm"]["mj"]).apply(null,arguments)};var dynCall_vii=Module["dynCall_vii"]=function(){return(dynCall_vii=Module["dynCall_vii"]=Module["asm"]["nj"]).apply(null,arguments)};var dynCall_viii=Module["dynCall_viii"]=function(){return(dynCall_viii=Module["dynCall_viii"]=Module["asm"]["oj"]).apply(null,arguments)};var dynCall_iii=Module["dynCall_iii"]=function(){return(dynCall_iii=Module["dynCall_iii"]=Module["asm"]["pj"]).apply(null,arguments)};var dynCall_iiiii=Module["dynCall_iiiii"]=function(){return(dynCall_iiiii=Module["dynCall_iiiii"]=Module["asm"]["qj"]).apply(null,arguments)};var dynCall_v=Module["dynCall_v"]=function(){return(dynCall_v=Module["dynCall_v"]=Module["asm"]["rj"]).apply(null,arguments)};var dynCall_ji=Module["dynCall_ji"]=function(){return(dynCall_ji=Module["dynCall_ji"]=Module["asm"]["sj"]).apply(null,arguments)};var dynCall_iij=Module["dynCall_iij"]=function(){return(dynCall_iij=Module["dynCall_iij"]=Module["asm"]["tj"]).apply(null,arguments)};var dynCall_jiij=Module["dynCall_jiij"]=function(){return(dynCall_jiij=Module["dynCall_jiij"]=Module["asm"]["uj"]).apply(null,arguments)};var dynCall_viiii=Module["dynCall_viiii"]=function(){return(dynCall_viiii=Module["dynCall_viiii"]=Module["asm"]["vj"]).apply(null,arguments)};var dynCall_iiii=Module["dynCall_iiii"]=function(){return(dynCall_iiii=Module["dynCall_iiii"]=Module["asm"]["wj"]).apply(null,arguments)};var dynCall_viijii=Module["dynCall_viijii"]=function(){return(dynCall_viijii=Module["dynCall_viijii"]=Module["asm"]["xj"]).apply(null,arguments)};var dynCall_jij=Module["dynCall_jij"]=function(){return(dynCall_jij=Module["dynCall_jij"]=Module["asm"]["yj"]).apply(null,arguments)};var dynCall_jiijj=Module["dynCall_jiijj"]=function(){return(dynCall_jiijj=Module["dynCall_jiijj"]=Module["asm"]["zj"]).apply(null,arguments)};var dynCall_iiji=Module["dynCall_iiji"]=function(){return(dynCall_iiji=Module["dynCall_iiji"]=Module["asm"]["Aj"]).apply(null,arguments)};var dynCall_viiiii=Module["dynCall_viiiii"]=function(){return(dynCall_viiiii=Module["dynCall_viiiii"]=Module["asm"]["Bj"]).apply(null,arguments)};var dynCall_viiiiii=Module["dynCall_viiiiii"]=function(){return(dynCall_viiiiii=Module["dynCall_viiiiii"]=Module["asm"]["Cj"]).apply(null,arguments)};var dynCall_vid=Module["dynCall_vid"]=function(){return(dynCall_vid=Module["dynCall_vid"]=Module["asm"]["Dj"]).apply(null,arguments)};var dynCall_viiiiifd=Module["dynCall_viiiiifd"]=function(){return(dynCall_viiiiifd=Module["dynCall_viiiiifd"]=Module["asm"]["Ej"]).apply(null,arguments)};var dynCall_viiifdii=Module["dynCall_viiifdii"]=function(){return(dynCall_viiifdii=Module["dynCall_viiifdii"]=Module["asm"]["Fj"]).apply(null,arguments)};var dynCall_fii=Module["dynCall_fii"]=function(){return(dynCall_fii=Module["dynCall_fii"]=Module["asm"]["Gj"]).apply(null,arguments)};var dynCall_viif=Module["dynCall_viif"]=function(){return(dynCall_viif=Module["dynCall_viif"]=Module["asm"]["Hj"]).apply(null,arguments)};var dynCall_viifdd=Module["dynCall_viifdd"]=function(){return(dynCall_viifdd=Module["dynCall_viifdd"]=Module["asm"]["Ij"]).apply(null,arguments)};var dynCall_viiffdd=Module["dynCall_viiffdd"]=function(){return(dynCall_viiffdd=Module["dynCall_viiffdd"]=Module["asm"]["Jj"]).apply(null,arguments)};var dynCall_iiij=Module["dynCall_iiij"]=function(){return(dynCall_iiij=Module["dynCall_iiij"]=Module["asm"]["Kj"]).apply(null,arguments)};var dynCall_jii=Module["dynCall_jii"]=function(){return(dynCall_jii=Module["dynCall_jii"]=Module["asm"]["Lj"]).apply(null,arguments)};var dynCall_viiiddd=Module["dynCall_viiiddd"]=function(){return(dynCall_viiiddd=Module["dynCall_viiiddd"]=Module["asm"]["Mj"]).apply(null,arguments)};var dynCall_dii=Module["dynCall_dii"]=function(){return(dynCall_dii=Module["dynCall_dii"]=Module["asm"]["Nj"]).apply(null,arguments)};var dynCall_viid=Module["dynCall_viid"]=function(){return(dynCall_viid=Module["dynCall_viid"]=Module["asm"]["Oj"]).apply(null,arguments)};var dynCall_viidi=Module["dynCall_viidi"]=function(){return(dynCall_viidi=Module["dynCall_viidi"]=Module["asm"]["Pj"]).apply(null,arguments)};var dynCall_di=Module["dynCall_di"]=function(){return(dynCall_di=Module["dynCall_di"]=Module["asm"]["Qj"]).apply(null,arguments)};var dynCall_vidi=Module["dynCall_vidi"]=function(){return(dynCall_vidi=Module["dynCall_vidi"]=Module["asm"]["Rj"]).apply(null,arguments)};var dynCall_viiiidddd=Module["dynCall_viiiidddd"]=function(){return(dynCall_viiiidddd=Module["dynCall_viiiidddd"]=Module["asm"]["Sj"]).apply(null,arguments)};var dynCall_viiid=Module["dynCall_viiid"]=function(){return(dynCall_viiid=Module["dynCall_viiid"]=Module["asm"]["Tj"]).apply(null,arguments)};var dynCall_iiiiiii=Module["dynCall_iiiiiii"]=function(){return(dynCall_iiiiiii=Module["dynCall_iiiiiii"]=Module["asm"]["Uj"]).apply(null,arguments)};var dynCall_iiiiii=Module["dynCall_iiiiii"]=function(){return(dynCall_iiiiii=Module["dynCall_iiiiii"]=Module["asm"]["Vj"]).apply(null,arguments)};var dynCall_viiiifi=Module["dynCall_viiiifi"]=function(){return(dynCall_viiiifi=Module["dynCall_viiiifi"]=Module["asm"]["Wj"]).apply(null,arguments)};var dynCall_viifii=Module["dynCall_viifii"]=function(){return(dynCall_viifii=Module["dynCall_viifii"]=Module["asm"]["Xj"]).apply(null,arguments)};var dynCall_viiffii=Module["dynCall_viiffii"]=function(){return(dynCall_viiffii=Module["dynCall_viiffii"]=Module["asm"]["Yj"]).apply(null,arguments)};var dynCall_viifffii=Module["dynCall_viifffii"]=function(){return(dynCall_viifffii=Module["dynCall_viifffii"]=Module["asm"]["Zj"]).apply(null,arguments)};var dynCall_viiiffffii=Module["dynCall_viiiffffii"]=function(){return(dynCall_viiiffffii=Module["dynCall_viiiffffii"]=Module["asm"]["_j"]).apply(null,arguments)};var dynCall_viifffi=Module["dynCall_viifffi"]=function(){return(dynCall_viifffi=Module["dynCall_viifffi"]=Module["asm"]["$j"]).apply(null,arguments)};var dynCall_viiiiifiii=Module["dynCall_viiiiifiii"]=function(){return(dynCall_viiiiifiii=Module["dynCall_viiiiifiii"]=Module["asm"]["ak"]).apply(null,arguments)};var dynCall_viiiiifii=Module["dynCall_viiiiifii"]=function(){return(dynCall_viiiiifii=Module["dynCall_viiiiifii"]=Module["asm"]["bk"]).apply(null,arguments)};var dynCall_viiiffii=Module["dynCall_viiiffii"]=function(){return(dynCall_viiiffii=Module["dynCall_viiiffii"]=Module["asm"]["ck"]).apply(null,arguments)};var dynCall_viiifi=Module["dynCall_viiifi"]=function(){return(dynCall_viiifi=Module["dynCall_viiifi"]=Module["asm"]["dk"]).apply(null,arguments)};var dynCall_viiifffii=Module["dynCall_viiifffii"]=function(){return(dynCall_viiifffii=Module["dynCall_viiifffii"]=Module["asm"]["ek"]).apply(null,arguments)};var dynCall_fi=Module["dynCall_fi"]=function(){return(dynCall_fi=Module["dynCall_fi"]=Module["asm"]["fk"]).apply(null,arguments)};var dynCall_viiiiiiidiid=Module["dynCall_viiiiiiidiid"]=function(){return(dynCall_viiiiiiidiid=Module["dynCall_viiiiiiidiid"]=Module["asm"]["gk"]).apply(null,arguments)};var dynCall_iiiiiidiid=Module["dynCall_iiiiiidiid"]=function(){return(dynCall_iiiiiidiid=Module["dynCall_iiiiiidiid"]=Module["asm"]["hk"]).apply(null,arguments)};var dynCall_viiiiiidid=Module["dynCall_viiiiiidid"]=function(){return(dynCall_viiiiiidid=Module["dynCall_viiiiiidid"]=Module["asm"]["ik"]).apply(null,arguments)};var dynCall_viiiiid=Module["dynCall_viiiiid"]=function(){return(dynCall_viiiiid=Module["dynCall_viiiiid"]=Module["asm"]["jk"]).apply(null,arguments)};var dynCall_diiid=Module["dynCall_diiid"]=function(){return(dynCall_diiid=Module["dynCall_diiid"]=Module["asm"]["kk"]).apply(null,arguments)};var dynCall_viiiiiiidd=Module["dynCall_viiiiiiidd"]=function(){return(dynCall_viiiiiiidd=Module["dynCall_viiiiiiidd"]=Module["asm"]["lk"]).apply(null,arguments)};var dynCall_viiiiiidd=Module["dynCall_viiiiiidd"]=function(){return(dynCall_viiiiiidd=Module["dynCall_viiiiiidd"]=Module["asm"]["mk"]).apply(null,arguments)};var dynCall_viiiiiidiid=Module["dynCall_viiiiiidiid"]=function(){return(dynCall_viiiiiidiid=Module["dynCall_viiiiiidiid"]=Module["asm"]["nk"]).apply(null,arguments)};var dynCall_viiiiidiid=Module["dynCall_viiiiidiid"]=function(){return(dynCall_viiiiidiid=Module["dynCall_viiiiidiid"]=Module["asm"]["ok"]).apply(null,arguments)};var dynCall_viiiiidd=Module["dynCall_viiiiidd"]=function(){return(dynCall_viiiiidd=Module["dynCall_viiiiidd"]=Module["asm"]["pk"]).apply(null,arguments)};var dynCall_iid=Module["dynCall_iid"]=function(){return(dynCall_iid=Module["dynCall_iid"]=Module["asm"]["qk"]).apply(null,arguments)};var dynCall_diii=Module["dynCall_diii"]=function(){return(dynCall_diii=Module["dynCall_diii"]=Module["asm"]["rk"]).apply(null,arguments)};var dynCall_jiji=Module["dynCall_jiji"]=function(){return(dynCall_jiji=Module["dynCall_jiji"]=Module["asm"]["sk"]).apply(null,arguments)};var dynCall_viij=Module["dynCall_viij"]=function(){return(dynCall_viij=Module["dynCall_viij"]=Module["asm"]["tk"]).apply(null,arguments)};var dynCall_vidd=Module["dynCall_vidd"]=function(){return(dynCall_vidd=Module["dynCall_vidd"]=Module["asm"]["uk"]).apply(null,arguments)};var dynCall_viiiiiidi=Module["dynCall_viiiiiidi"]=function(){return(dynCall_viiiiiidi=Module["dynCall_viiiiiidi"]=Module["asm"]["vk"]).apply(null,arguments)};var dynCall_vij=Module["dynCall_vij"]=function(){return(dynCall_vij=Module["dynCall_vij"]=Module["asm"]["wk"]).apply(null,arguments)};var dynCall_iiiid=Module["dynCall_iiiid"]=function(){return(dynCall_iiiid=Module["dynCall_iiiid"]=Module["asm"]["xk"]).apply(null,arguments)};var dynCall_i=Module["dynCall_i"]=function(){return(dynCall_i=Module["dynCall_i"]=Module["asm"]["yk"]).apply(null,arguments)};var dynCall_iidii=Module["dynCall_iidii"]=function(){return(dynCall_iidii=Module["dynCall_iidii"]=Module["asm"]["zk"]).apply(null,arguments)};var dynCall_jijii=Module["dynCall_jijii"]=function(){return(dynCall_jijii=Module["dynCall_jijii"]=Module["asm"]["Ak"]).apply(null,arguments)};var dynCall_iiiiiiiiii=Module["dynCall_iiiiiiiiii"]=function(){return(dynCall_iiiiiiiiii=Module["dynCall_iiiiiiiiii"]=Module["asm"]["Bk"]).apply(null,arguments)};var dynCall_viiiiiiii=Module["dynCall_viiiiiiii"]=function(){return(dynCall_viiiiiiii=Module["dynCall_viiiiiiii"]=Module["asm"]["Ck"]).apply(null,arguments)};var dynCall_iiiiiiii=Module["dynCall_iiiiiiii"]=function(){return(dynCall_iiiiiiii=Module["dynCall_iiiiiiii"]=Module["asm"]["Dk"]).apply(null,arguments)};var dynCall_viiiiiii=Module["dynCall_viiiiiii"]=function(){return(dynCall_viiiiiii=Module["dynCall_viiiiiii"]=Module["asm"]["Ek"]).apply(null,arguments)};var dynCall_iiiiiiiii=Module["dynCall_iiiiiiiii"]=function(){return(dynCall_iiiiiiiii=Module["dynCall_iiiiiiiii"]=Module["asm"]["Fk"]).apply(null,arguments)};var dynCall_viiiiiiiiii=Module["dynCall_viiiiiiiiii"]=function(){return(dynCall_viiiiiiiiii=Module["dynCall_viiiiiiiiii"]=Module["asm"]["Gk"]).apply(null,arguments)};var dynCall_viiiiiiiii=Module["dynCall_viiiiiiiii"]=function(){return(dynCall_viiiiiiiii=Module["dynCall_viiiiiiiii"]=Module["asm"]["Hk"]).apply(null,arguments)};var dynCall_viiiiiiiiidd=Module["dynCall_viiiiiiiiidd"]=function(){return(dynCall_viiiiiiiiidd=Module["dynCall_viiiiiiiiidd"]=Module["asm"]["Ik"]).apply(null,arguments)};var dynCall_jiiii=Module["dynCall_jiiii"]=function(){return(dynCall_jiiii=Module["dynCall_jiiii"]=Module["asm"]["Jk"]).apply(null,arguments)};var dynCall_diiii=Module["dynCall_diiii"]=function(){return(dynCall_diiii=Module["dynCall_diiii"]=Module["asm"]["Kk"]).apply(null,arguments)};var dynCall_diiiiiiii=Module["dynCall_diiiiiiii"]=function(){return(dynCall_diiiiiiii=Module["dynCall_diiiiiiii"]=Module["asm"]["Lk"]).apply(null,arguments)};var dynCall_iiiji=Module["dynCall_iiiji"]=function(){return(dynCall_iiiji=Module["dynCall_iiiji"]=Module["asm"]["Mk"]).apply(null,arguments)};var dynCall_iiiiiidii=Module["dynCall_iiiiiidii"]=function(){return(dynCall_iiiiiidii=Module["dynCall_iiiiiidii"]=Module["asm"]["Nk"]).apply(null,arguments)};var dynCall_viiiiiiiiiii=Module["dynCall_viiiiiiiiiii"]=function(){return(dynCall_viiiiiiiiiii=Module["dynCall_viiiiiiiiiii"]=Module["asm"]["Ok"]).apply(null,arguments)};var dynCall_vffff=Module["dynCall_vffff"]=function(){return(dynCall_vffff=Module["dynCall_vffff"]=Module["asm"]["Pk"]).apply(null,arguments)};var dynCall_vf=Module["dynCall_vf"]=function(){return(dynCall_vf=Module["dynCall_vf"]=Module["asm"]["Qk"]).apply(null,arguments)};var dynCall_vff=Module["dynCall_vff"]=function(){return(dynCall_vff=Module["dynCall_vff"]=Module["asm"]["Rk"]).apply(null,arguments)};var dynCall_vfi=Module["dynCall_vfi"]=function(){return(dynCall_vfi=Module["dynCall_vfi"]=Module["asm"]["Sk"]).apply(null,arguments)};var dynCall_vif=Module["dynCall_vif"]=function(){return(dynCall_vif=Module["dynCall_vif"]=Module["asm"]["Tk"]).apply(null,arguments)};var dynCall_viff=Module["dynCall_viff"]=function(){return(dynCall_viff=Module["dynCall_viff"]=Module["asm"]["Uk"]).apply(null,arguments)};var dynCall_vifff=Module["dynCall_vifff"]=function(){return(dynCall_vifff=Module["dynCall_vifff"]=Module["asm"]["Vk"]).apply(null,arguments)};var dynCall_viffff=Module["dynCall_viffff"]=function(){return(dynCall_viffff=Module["dynCall_viffff"]=Module["asm"]["Wk"]).apply(null,arguments)};var dynCall_viifi=Module["dynCall_viifi"]=function(){return(dynCall_viifi=Module["dynCall_viifi"]=Module["asm"]["Xk"]).apply(null,arguments)};var dynCall_iidiiii=Module["dynCall_iidiiii"]=function(){return(dynCall_iidiiii=Module["dynCall_iidiiii"]=Module["asm"]["Yk"]).apply(null,arguments)};var dynCall_iiiiij=Module["dynCall_iiiiij"]=function(){return(dynCall_iiiiij=Module["dynCall_iiiiij"]=Module["asm"]["Zk"]).apply(null,arguments)};var dynCall_iiiiid=Module["dynCall_iiiiid"]=function(){return(dynCall_iiiiid=Module["dynCall_iiiiid"]=Module["asm"]["_k"]).apply(null,arguments)};var dynCall_iiiiijj=Module["dynCall_iiiiijj"]=function(){return(dynCall_iiiiijj=Module["dynCall_iiiiijj"]=Module["asm"]["$k"]).apply(null,arguments)};var dynCall_iiiiiijj=Module["dynCall_iiiiiijj"]=function(){return(dynCall_iiiiiijj=Module["dynCall_iiiiiijj"]=Module["asm"]["al"]).apply(null,arguments)};var _asyncify_start_unwind=Module["_asyncify_start_unwind"]=function(){return(_asyncify_start_unwind=Module["_asyncify_start_unwind"]=Module["asm"]["bl"]).apply(null,arguments)};var _asyncify_stop_unwind=Module["_asyncify_stop_unwind"]=function(){return(_asyncify_stop_unwind=Module["_asyncify_stop_unwind"]=Module["asm"]["cl"]).apply(null,arguments)};var _asyncify_start_rewind=Module["_asyncify_start_rewind"]=function(){return(_asyncify_start_rewind=Module["_asyncify_start_rewind"]=Module["asm"]["dl"]).apply(null,arguments)};var _asyncify_stop_rewind=Module["_asyncify_stop_rewind"]=function(){return(_asyncify_stop_rewind=Module["_asyncify_stop_rewind"]=Module["asm"]["el"]).apply(null,arguments)};function invoke_iii(index,a1,a2){var sp=stackSave();try{return dynCall_iii(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viii(index,a1,a2,a3){var sp=stackSave();try{dynCall_viii(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiii(index,a1,a2,a3){var sp=stackSave();try{return dynCall_iiii(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_iiiii(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_vi(index,a1){var sp=stackSave();try{dynCall_vi(index,a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiii(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_viiii(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_ii(index,a1){var sp=stackSave();try{return dynCall_ii(index,a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_vii(index,a1,a2){var sp=stackSave();try{dynCall_vii(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_v(index){var sp=stackSave();try{dynCall_v(index)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_viiiii(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}Module["addRunDependency"]=addRunDependency;Module["removeRunDependency"]=removeRunDependency;Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createDevice"]=FS.createDevice;Module["FS_unlink"]=FS.unlink;Module["LZ4"]=LZ4;var calledRun;function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}var calledMain=false;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function callMain(args){var entryFunction=Module["_main"];args=args||[];var argc=args.length+1;var argv=stackAlloc((argc+1)*4);HEAP32[argv>>2]=allocateUTF8OnStack(thisProgram);for(var i=1;i<argc;i++){HEAP32[(argv>>2)+i]=allocateUTF8OnStack(args[i-1])}HEAP32[(argv>>2)+argc]=0;try{var ret=entryFunction(argc,argv);if(!keepRuntimeAlive()){exit(ret,true)}}catch(e){if(e instanceof ExitStatus){return}else if(e=="unwind"){return}else{var toLog=e;if(e&&typeof e==="object"&&e.stack){toLog=[e,e.stack]}err("exception thrown: "+toLog);quit_(1,e)}}finally{calledMain=true}}function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module["calledRun"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(shouldRunNow)callMain(args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}}Module["run"]=run;function exit(status,implicit){EXITSTATUS=status;if(implicit&&keepRuntimeAlive()&&status===0){return}if(keepRuntimeAlive()){}else{exitRuntime();if(Module["onExit"])Module["onExit"](status);ABORT=true}quit_(status,new ExitStatus(status))}if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"])shouldRunNow=false;run();Module["getCurrentAudioContext"]=function(){return Module["SDL2"].audioContext};Module["getCurrentAudioSource"]=function(){return Module["SDL2"].audio.scriptProcessorNode};


  return Module.ready
}
);
})();
if (typeof exports === 'object' && typeof module === 'object')
  module.exports = Module;
else if (typeof define === 'function' && define['amd'])
  define([], function() { return Module; });
else if (typeof exports === 'object')
  exports["Module"] = Module;
