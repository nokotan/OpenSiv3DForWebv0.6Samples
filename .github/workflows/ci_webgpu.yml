name: App Deploy (WebGPU)

on:
  push: 
    branches: [ 'main' ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: 
      image: 'emscripten/emsdk:3.1.8'
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build Project
        run: |
          mkdir Build && cd Build
          emcmake cmake .. -DCMAKE_BUILD_TYPE=MINSIZEREL -DSIV3D_WEBGPU_BACKEND=ON

      - name: Cache AdditionalEmojiWebGPU
        id: cache_AdditionalEmojiWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-AdditionalEmojiWebGPU
        with:
            path: Build/AdditionalEmoji
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'AdditionalEmoji/**/*.*') }}

      - name: Build AdditionalEmojiWebGPU
        if: ${{ !steps.cache_AdditionalEmojiWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 AdditionalEmojiWebGPU

      - name: Cache AsyncFileDownloadWebGPU
        id: cache_AsyncFileDownloadWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-AsyncFileDownloadWebGPU
        with:
            path: Build/AsyncFileDownload
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'AsyncFileDownload/**/*.*') }}

      - name: Build AsyncFileDownloadWebGPU
        if: ${{ !steps.cache_AsyncFileDownloadWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 AsyncFileDownloadWebGPU

      - name: Cache DragDropWebGPU
        id: cache_DragDropWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-DragDropWebGPU
        with:
            path: Build/DragDrop
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'DragDrop/**/*.*') }}

      - name: Build DragDropWebGPU
        if: ${{ !steps.cache_DragDropWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 DragDropWebGPU

      - name: Cache EmpoweredAudioWebGPU
        id: cache_EmpoweredAudioWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-EmpoweredAudioWebGPU
        with:
            path: Build/EmpoweredAudio
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'EmpoweredAudio/**/*.*') }}

      - name: Build EmpoweredAudioWebGPU
        if: ${{ !steps.cache_EmpoweredAudioWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 EmpoweredAudioWebGPU

      - name: Cache GeoJsonWebGPU
        id: cache_GeoJsonWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-GeoJsonWebGPU
        with:
            path: Build/GeoJson
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'GeoJson/**/*.*') }}

      - name: Build GeoJsonWebGPU
        if: ${{ !steps.cache_GeoJsonWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 GeoJsonWebGPU

      - name: Cache GrabCutWebGPU
        id: cache_GrabCutWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-GrabCutWebGPU
        with:
            path: Build/GrabCut
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'GrabCut/**/*.*') }}

      - name: Build GrabCutWebGPU
        if: ${{ !steps.cache_GrabCutWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 GrabCutWebGPU

      - name: Cache KDTreeWebGPU
        id: cache_KDTreeWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-KDTreeWebGPU
        with:
            path: Build/KDTree
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'KDTree/**/*.*') }}

      - name: Build KDTreeWebGPU
        if: ${{ !steps.cache_KDTreeWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 KDTreeWebGPU

      - name: Cache MainWebGPU
        id: cache_MainWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-MainWebGPU
        with:
            path: Build/Main
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'Main/**/*.*') }}

      - name: Build MainWebGPU
        if: ${{ !steps.cache_MainWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 MainWebGPU

      - name: Cache MaterialIconWebGPU
        id: cache_MaterialIconWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-MaterialIconWebGPU
        with:
            path: Build/MaterialIcon
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'MaterialIcon/**/*.*') }}

      - name: Build MaterialIconWebGPU
        if: ${{ !steps.cache_MaterialIconWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 MaterialIconWebGPU

      - name: Cache MicrophoneWebGPU
        id: cache_MicrophoneWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-MicrophoneWebGPU
        with:
            path: Build/Microphone
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'Microphone/**/*.*') }}

      - name: Build MicrophoneWebGPU
        if: ${{ !steps.cache_MicrophoneWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 MicrophoneWebGPU

      - name: Cache NavMeshWebGPU
        id: cache_NavMeshWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-NavMeshWebGPU
        with:
            path: Build/NavMesh
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'NavMesh/**/*.*') }}

      - name: Build NavMeshWebGPU
        if: ${{ !steps.cache_NavMeshWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 NavMeshWebGPU

      - name: Cache P2WheelJointWebGPU
        id: cache_P2WheelJointWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-P2WheelJointWebGPU
        with:
            path: Build/P2WheelJoint
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'P2WheelJoint/**/*.*') }}

      - name: Build P2WheelJointWebGPU
        if: ${{ !steps.cache_P2WheelJointWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 P2WheelJointWebGPU

      - name: Cache PackRectanglesWebGPU
        id: cache_PackRectanglesWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-PackRectanglesWebGPU
        with:
            path: Build/PackRectangles
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'PackRectangles/**/*.*') }}

      - name: Build PackRectanglesWebGPU
        if: ${{ !steps.cache_PackRectanglesWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 PackRectanglesWebGPU

      - name: Cache PerlinNoiseWebGPU
        id: cache_PerlinNoiseWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-PerlinNoiseWebGPU
        with:
            path: Build/PerlinNoise
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'PerlinNoise/**/*.*') }}

      - name: Build PerlinNoiseWebGPU
        if: ${{ !steps.cache_PerlinNoiseWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 PerlinNoiseWebGPU

      - name: Cache PolygonOutlineWebGPU
        id: cache_PolygonOutlineWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-PolygonOutlineWebGPU
        with:
            path: Build/PolygonOutline
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'PolygonOutline/**/*.*') }}

      - name: Build PolygonOutlineWebGPU
        if: ${{ !steps.cache_PolygonOutlineWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 PolygonOutlineWebGPU

      - name: Cache QRCodeWebGPU
        id: cache_QRCodeWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-QRCodeWebGPU
        with:
            path: Build/QRCode
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'QRCode/**/*.*') }}

      - name: Build QRCodeWebGPU
        if: ${{ !steps.cache_QRCodeWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 QRCodeWebGPU

      - name: Cache QRReaderWebGPU
        id: cache_QRReaderWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-QRReaderWebGPU
        with:
            path: Build/QRReader
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'QRReader/**/*.*') }}

      - name: Build QRReaderWebGPU
        if: ${{ !steps.cache_QRReaderWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 QRReaderWebGPU

      - name: Cache RayIntersectionWebGPU
        id: cache_RayIntersectionWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-RayIntersectionWebGPU
        with:
            path: Build/RayIntersection
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'RayIntersection/**/*.*') }}

      - name: Build RayIntersectionWebGPU
        if: ${{ !steps.cache_RayIntersectionWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 RayIntersectionWebGPU

      - name: Cache SoftShapeWebGPU
        id: cache_SoftShapeWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-SoftShapeWebGPU
        with:
            path: Build/SoftShape
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'SoftShape/**/*.*') }}

      - name: Build SoftShapeWebGPU
        if: ${{ !steps.cache_SoftShapeWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 SoftShapeWebGPU

      - name: Cache Spline2DWebGPU
        id: cache_Spline2DWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-Spline2DWebGPU
        with:
            path: Build/Spline2D
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'Spline2D/**/*.*') }}

      - name: Build Spline2DWebGPU
        if: ${{ !steps.cache_Spline2DWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 Spline2DWebGPU

      - name: Cache TCPonWebSocketWebGPU
        id: cache_TCPonWebSocketWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TCPonWebSocketWebGPU
        with:
            path: Build/TCPonWebSocket
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TCPonWebSocket/**/*.*') }}

      - name: Build TCPonWebSocketWebGPU
        if: ${{ !steps.cache_TCPonWebSocketWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TCPonWebSocketWebGPU

      - name: Cache TerrainWebGPU
        id: cache_TerrainWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TerrainWebGPU
        with:
            path: Build/Terrain
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'Terrain/**/*.*') }}

      - name: Build TerrainWebGPU
        if: ${{ !steps.cache_TerrainWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TerrainWebGPU

      - name: Cache Test3DCase1WebGPU
        id: cache_Test3DCase1WebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-Test3DCase1WebGPU
        with:
            path: Build/Test3DCase1
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'Test3DCase1/**/*.*') }}

      - name: Build Test3DCase1WebGPU
        if: ${{ !steps.cache_Test3DCase1WebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 Test3DCase1WebGPU

      - name: Cache Test3DCase2WebGPU
        id: cache_Test3DCase2WebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-Test3DCase2WebGPU
        with:
            path: Build/Test3DCase2
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'Test3DCase2/**/*.*') }}

      - name: Build Test3DCase2WebGPU
        if: ${{ !steps.cache_Test3DCase2WebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 Test3DCase2WebGPU

      - name: Cache Test3DCase3WebGPU
        id: cache_Test3DCase3WebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-Test3DCase3WebGPU
        with:
            path: Build/Test3DCase3
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'Test3DCase3/**/*.*') }}

      - name: Build Test3DCase3WebGPU
        if: ${{ !steps.cache_Test3DCase3WebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 Test3DCase3WebGPU

      - name: Cache Test3DCase4WebGPU
        id: cache_Test3DCase4WebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-Test3DCase4WebGPU
        with:
            path: Build/Test3DCase4
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'Test3DCase4/**/*.*') }}

      - name: Build Test3DCase4WebGPU
        if: ${{ !steps.cache_Test3DCase4WebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 Test3DCase4WebGPU

      - name: Cache Test3DShadingWebGPU
        id: cache_Test3DShadingWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-Test3DShadingWebGPU
        with:
            path: Build/Test3DShading
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'Test3DShading/**/*.*') }}

      - name: Build Test3DShadingWebGPU
        if: ${{ !steps.cache_Test3DShadingWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 Test3DShadingWebGPU

      - name: Cache Test3DSkyWebGPU
        id: cache_Test3DSkyWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-Test3DSkyWebGPU
        with:
            path: Build/Test3DSky
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'Test3DSky/**/*.*') }}

      - name: Build Test3DSkyWebGPU
        if: ${{ !steps.cache_Test3DSkyWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 Test3DSkyWebGPU

      - name: Cache TestSRGBCase1WebGPU
        id: cache_TestSRGBCase1WebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestSRGBCase1WebGPU
        with:
            path: Build/TestSRGBCase1
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestSRGBCase1/**/*.*') }}

      - name: Build TestSRGBCase1WebGPU
        if: ${{ !steps.cache_TestSRGBCase1WebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestSRGBCase1WebGPU

      - name: Cache TestSRGBCase2WebGPU
        id: cache_TestSRGBCase2WebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestSRGBCase2WebGPU
        with:
            path: Build/TestSRGBCase2
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestSRGBCase2/**/*.*') }}

      - name: Build TestSRGBCase2WebGPU
        if: ${{ !steps.cache_TestSRGBCase2WebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestSRGBCase2WebGPU

      - name: Cache TestSRGBCase3WebGPU
        id: cache_TestSRGBCase3WebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestSRGBCase3WebGPU
        with:
            path: Build/TestSRGBCase3
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestSRGBCase3/**/*.*') }}

      - name: Build TestSRGBCase3WebGPU
        if: ${{ !steps.cache_TestSRGBCase3WebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestSRGBCase3WebGPU

      - name: Cache TestShaderBlockGameWebGPU
        id: cache_TestShaderBlockGameWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderBlockGameWebGPU
        with:
            path: Build/TestShaderBlockGame
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderBlockGame/**/*.*') }}

      - name: Build TestShaderBlockGameWebGPU
        if: ${{ !steps.cache_TestShaderBlockGameWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderBlockGameWebGPU

      - name: Cache TestShaderDefault2DWebGPU
        id: cache_TestShaderDefault2DWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderDefault2DWebGPU
        with:
            path: Build/TestShaderDefault2D
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderDefault2D/**/*.*') }}

      - name: Build TestShaderDefault2DWebGPU
        if: ${{ !steps.cache_TestShaderDefault2DWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderDefault2DWebGPU

      - name: Cache TestShaderDefault3DWebGPU
        id: cache_TestShaderDefault3DWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderDefault3DWebGPU
        with:
            path: Build/TestShaderDefault3D
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderDefault3D/**/*.*') }}

      - name: Build TestShaderDefault3DWebGPU
        if: ${{ !steps.cache_TestShaderDefault3DWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderDefault3DWebGPU

      - name: Cache TestShaderExtractBrightWebGPU
        id: cache_TestShaderExtractBrightWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderExtractBrightWebGPU
        with:
            path: Build/TestShaderExtractBright
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderExtractBright/**/*.*') }}

      - name: Build TestShaderExtractBrightWebGPU
        if: ${{ !steps.cache_TestShaderExtractBrightWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderExtractBrightWebGPU

      - name: Cache TestShaderForwardFogWebGPU
        id: cache_TestShaderForwardFogWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderForwardFogWebGPU
        with:
            path: Build/TestShaderForwardFog
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderForwardFog/**/*.*') }}

      - name: Build TestShaderForwardFogWebGPU
        if: ${{ !steps.cache_TestShaderForwardFogWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderForwardFogWebGPU

      - name: Cache TestShaderForwardTriplanarWebGPU
        id: cache_TestShaderForwardTriplanarWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderForwardTriplanarWebGPU
        with:
            path: Build/TestShaderForwardTriplanar
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderForwardTriplanar/**/*.*') }}

      - name: Build TestShaderForwardTriplanarWebGPU
        if: ${{ !steps.cache_TestShaderForwardTriplanarWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderForwardTriplanarWebGPU

      - name: Cache TestShaderGameOfLifeWebGPU
        id: cache_TestShaderGameOfLifeWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderGameOfLifeWebGPU
        with:
            path: Build/TestShaderGameOfLife
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderGameOfLife/**/*.*') }}

      - name: Build TestShaderGameOfLifeWebGPU
        if: ${{ !steps.cache_TestShaderGameOfLifeWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderGameOfLifeWebGPU

      - name: Cache TestShaderGrayScaleWebGPU
        id: cache_TestShaderGrayScaleWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderGrayScaleWebGPU
        with:
            path: Build/TestShaderGrayScale
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderGrayScale/**/*.*') }}

      - name: Build TestShaderGrayScaleWebGPU
        if: ${{ !steps.cache_TestShaderGrayScaleWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderGrayScaleWebGPU

      - name: Cache TestShaderMultiShaderMaskWebGPU
        id: cache_TestShaderMultiShaderMaskWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderMultiShaderMaskWebGPU
        with:
            path: Build/TestShaderMultiShaderMask
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderMultiShaderMask/**/*.*') }}

      - name: Build TestShaderMultiShaderMaskWebGPU
        if: ${{ !steps.cache_TestShaderMultiShaderMaskWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderMultiShaderMaskWebGPU

      - name: Cache TestShaderMultiTextureBlendWebGPU
        id: cache_TestShaderMultiTextureBlendWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderMultiTextureBlendWebGPU
        with:
            path: Build/TestShaderMultiTextureBlend
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderMultiTextureBlend/**/*.*') }}

      - name: Build TestShaderMultiTextureBlendWebGPU
        if: ${{ !steps.cache_TestShaderMultiTextureBlendWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderMultiTextureBlendWebGPU

      - name: Cache TestShaderPoissonDiskWebGPU
        id: cache_TestShaderPoissonDiskWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderPoissonDiskWebGPU
        with:
            path: Build/TestShaderPoissonDisk
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderPoissonDisk/**/*.*') }}

      - name: Build TestShaderPoissonDiskWebGPU
        if: ${{ !steps.cache_TestShaderPoissonDiskWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderPoissonDiskWebGPU

      - name: Cache TestShaderPosterizeWebGPU
        id: cache_TestShaderPosterizeWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderPosterizeWebGPU
        with:
            path: Build/TestShaderPosterize
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderPosterize/**/*.*') }}

      - name: Build TestShaderPosterizeWebGPU
        if: ${{ !steps.cache_TestShaderPosterizeWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderPosterizeWebGPU

      - name: Cache TestShaderRGBShiftWebGPU
        id: cache_TestShaderRGBShiftWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderRGBShiftWebGPU
        with:
            path: Build/TestShaderRGBShift
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderRGBShift/**/*.*') }}

      - name: Build TestShaderRGBShiftWebGPU
        if: ${{ !steps.cache_TestShaderRGBShiftWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderRGBShiftWebGPU

      - name: Cache TestShaderRGBToBGRWebGPU
        id: cache_TestShaderRGBToBGRWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderRGBToBGRWebGPU
        with:
            path: Build/TestShaderRGBToBGR
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderRGBToBGR/**/*.*') }}

      - name: Build TestShaderRGBToBGRWebGPU
        if: ${{ !steps.cache_TestShaderRGBToBGRWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderRGBToBGRWebGPU

      - name: Cache TestShaderSwirlWebGPU
        id: cache_TestShaderSwirlWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderSwirlWebGPU
        with:
            path: Build/TestShaderSwirl
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderSwirl/**/*.*') }}

      - name: Build TestShaderSwirlWebGPU
        if: ${{ !steps.cache_TestShaderSwirlWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderSwirlWebGPU

      - name: Cache TestShaderTerrainNormalWebGPU
        id: cache_TestShaderTerrainNormalWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TestShaderTerrainNormalWebGPU
        with:
            path: Build/TestShaderTerrainNormal
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TestShaderTerrainNormal/**/*.*') }}

      - name: Build TestShaderTerrainNormalWebGPU
        if: ${{ !steps.cache_TestShaderTerrainNormalWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TestShaderTerrainNormalWebGPU

      - name: Cache VideoReaderWebGPU
        id: cache_VideoReaderWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-VideoReaderWebGPU
        with:
            path: Build/VideoReader
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'VideoReader/**/*.*') }}

      - name: Build VideoReaderWebGPU
        if: ${{ !steps.cache_VideoReaderWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 VideoReaderWebGPU

      - name: Cache ViewFrustumWebGPU
        id: cache_ViewFrustumWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-ViewFrustumWebGPU
        with:
            path: Build/ViewFrustum
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'ViewFrustum/**/*.*') }}

      - name: Build ViewFrustumWebGPU
        if: ${{ !steps.cache_ViewFrustumWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 ViewFrustumWebGPU

      - name: Cache WebCamWebGPU
        id: cache_WebCamWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-WebCamWebGPU
        with:
            path: Build/WebCam
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'WebCam/**/*.*') }}

      - name: Build WebCamWebGPU
        if: ${{ !steps.cache_WebCamWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 WebCamWebGPU

      - name: Cache UVTransform3DWebGPU
        id: cache_UVTransform3DWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-UVTransform3DWebGPU
        with:
            path: Build/UVTransform3D
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'UVTransform3D/**/*.*') }}

      - name: Build UVTransform3DWebGPU
        if: ${{ !steps.cache_UVTransform3DWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 UVTransform3DWebGPU

      - name: Cache TextRegatureWebGPU
        id: cache_TextRegatureWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-TextRegatureWebGPU
        with:
            path: Build/TextRegature
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'TextRegature/**/*.*') }}

      - name: Build TextRegatureWebGPU
        if: ${{ !steps.cache_TextRegatureWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 TextRegatureWebGPU

      - name: Cache PolygonHoleWebGPU
        id: cache_PolygonHoleWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-PolygonHoleWebGPU
        with:
            path: Build/PolygonHole
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'PolygonHole/**/*.*') }}

      - name: Build PolygonHoleWebGPU
        if: ${{ !steps.cache_PolygonHoleWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 PolygonHoleWebGPU

      - name: Cache NavMeshSimplifiedWebGPU
        id: cache_NavMeshSimplifiedWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-NavMeshSimplifiedWebGPU
        with:
            path: Build/NavMeshSimplified
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'NavMeshSimplified/**/*.*') }}

      - name: Build NavMeshSimplifiedWebGPU
        if: ${{ !steps.cache_NavMeshSimplifiedWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 NavMeshSimplifiedWebGPU

      - name: Cache PeriodicMinusToPlusWebGPU
        id: cache_PeriodicMinusToPlusWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-PeriodicMinusToPlusWebGPU
        with:
            path: Build/PeriodicMinusToPlus
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'PeriodicMinusToPlus/**/*.*') }}

      - name: Build PeriodicMinusToPlusWebGPU
        if: ${{ !steps.cache_PeriodicMinusToPlusWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 PeriodicMinusToPlusWebGPU

      - name: Cache RoundedBoxWebGPU
        id: cache_RoundedBoxWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-RoundedBoxWebGPU
        with:
            path: Build/RoundedBox
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'RoundedBox/**/*.*') }}

      - name: Build RoundedBoxWebGPU
        if: ${{ !steps.cache_RoundedBoxWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 RoundedBoxWebGPU

      - name: Cache NearestClamped3DWebGPU
        id: cache_NearestClamped3DWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-NearestClamped3DWebGPU
        with:
            path: Build/NearestClamped3D
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'NearestClamped3D/**/*.*') }}

      - name: Build NearestClamped3DWebGPU
        if: ${{ !steps.cache_NearestClamped3DWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 NearestClamped3DWebGPU

      - name: Cache DisjointSetWebGPU
        id: cache_DisjointSetWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-DisjointSetWebGPU
        with:
            path: Build/DisjointSet
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'DisjointSet/**/*.*') }}

      - name: Build DisjointSetWebGPU
        if: ${{ !steps.cache_DisjointSetWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 DisjointSetWebGPU

      - name: Cache AudioStreamSineWebGPU
        id: cache_AudioStreamSineWebGPU
        uses: actions/cache@v1
        env:
            cache-name: cache-AudioStreamSineWebGPU
        with:
            path: Build/AudioStreamSine
            key: ${{ env.cache-name }}-${{ hashFiles('CMakeLists.txt', 'Siv3D/**/*.*', 'Templates/**/*.*', 'AudioStreamSine/**/*.*') }}

      - name: Build AudioStreamSineWebGPU
        if: ${{ !steps.cache_AudioStreamSineWebGPU.outputs.cache-hit }}
        working-directory: Build
        run: |
            make -j4 AudioStreamSineWebGPU



      - name: Pre Deploy
        run: |
          cp README.md Build/
          cp tests.md Build/
          cp _config.yml Build/

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./Build
          keep_files: true
          enable_jekyll: true
          exclude_assets: 'CMakeFiles,**/CMakeFiles'
